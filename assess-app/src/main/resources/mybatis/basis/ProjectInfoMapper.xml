<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.copower.pmcc.assess.dal.basis.mapper.ProjectInfoMapper">
  <resultMap id="BaseResultMap" type="com.copower.pmcc.assess.dal.basis.entity.ProjectInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="project_class_id" jdbcType="INTEGER" property="projectClassId" />
    <result column="project_type_id" jdbcType="INTEGER" property="projectTypeId" />
    <result column="project_category_id" jdbcType="INTEGER" property="projectCategoryId" />
    <result column="project_name" jdbcType="VARCHAR" property="projectName" />
    <result column="urgency" jdbcType="INTEGER" property="urgency" />
    <result column="province" jdbcType="VARCHAR" property="province" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="district" jdbcType="VARCHAR" property="district" />
    <result column="valuation_date" jdbcType="TIMESTAMP" property="valuationDate" />
    <result column="entrust_purpose_name" jdbcType="VARCHAR" property="entrustPurposeName" />
    <result column="entrust_purpose" jdbcType="INTEGER" property="entrustPurpose" />
    <result column="entrust_aim_type" jdbcType="INTEGER" property="entrustAimType" />
    <result column="remark_entrust_purpose" jdbcType="VARCHAR" property="remarkEntrustPurpose" />
    <result column="value_type" jdbcType="INTEGER" property="valueType" />
    <result column="remark_value_type" jdbcType="VARCHAR" property="remarkValueType" />
    <result column="department_id" jdbcType="INTEGER" property="departmentId" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="complete_date_plan" jdbcType="TIMESTAMP" property="completeDatePlan" />
    <result column="complete_date_actual" jdbcType="TIMESTAMP" property="completeDateActual" />
    <result column="complete_date_start" jdbcType="TIMESTAMP" property="completeDateStart" />
    <result column="process_ins_id" jdbcType="VARCHAR" property="processInsId" />
    <result column="property_scope" jdbcType="VARCHAR" property="propertyScope" />
    <result column="scope_include" jdbcType="VARCHAR" property="scopeInclude" />
    <result column="scope_not_include" jdbcType="VARCHAR" property="scopeNotInclude" />
    <result column="loan_type" jdbcType="INTEGER" property="loanType" />
    <result column="contract_id" jdbcType="VARCHAR" property="contractId" />
    <result column="contract_name" jdbcType="VARCHAR" property="contractName" />
    <result column="contract_price" jdbcType="DECIMAL" property="contractPrice" />
    <result column="service_come_from" jdbcType="VARCHAR" property="serviceComeFrom" />
    <result column="service_come_from_explain" jdbcType="VARCHAR" property="serviceComeFromExplain" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="project_status" jdbcType="VARCHAR" property="projectStatus" />
    <result column="public_project_id" jdbcType="INTEGER" property="publicProjectId" />
    <result column="assign_process_ins_id" jdbcType="VARCHAR" property="assignProcessInsId" />
    <result column="assign_status" jdbcType="VARCHAR" property="assignStatus" />
    <result column="estate_name" jdbcType="VARCHAR" property="estateName" />
    <result column="preaudit_number_date" jdbcType="TIMESTAMP" property="preauditNumberDate" />
    <result column="property_scope_name" jdbcType="VARCHAR" property="propertyScopeName" />
    <result column="result_number_date" jdbcType="TIMESTAMP" property="resultNumberDate" />
    <result column="bis_assign" jdbcType="BIT" property="bisAssign" />
    <result column="serial_number" jdbcType="INTEGER" property="serialNumber" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="gmt_created" jdbcType="TIMESTAMP" property="gmtCreated" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, project_class_id, project_type_id, project_category_id, project_name, urgency, 
    province, city, district, valuation_date, entrust_purpose_name, entrust_purpose, 
    entrust_aim_type, remark_entrust_purpose, value_type, remark_value_type, department_id, 
    remarks, complete_date_plan, complete_date_actual, complete_date_start, process_ins_id, 
    property_scope, scope_include, scope_not_include, loan_type, contract_id, contract_name, 
    contract_price, service_come_from, service_come_from_explain, status, project_status, 
    public_project_id, assign_process_ins_id, assign_status, estate_name, preaudit_number_date, 
    property_scope_name, result_number_date, bis_assign, serial_number, creator, gmt_created, 
    gmt_modified
  </sql>
  <select id="selectByExample" parameterType="com.copower.pmcc.assess.dal.basis.entity.ProjectInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_project_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_project_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_project_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.copower.pmcc.assess.dal.basis.entity.ProjectInfoExample">
    delete from tb_project_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.copower.pmcc.assess.dal.basis.entity.ProjectInfo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_project_info (project_class_id, project_type_id, project_category_id, 
      project_name, urgency, province, 
      city, district, valuation_date, 
      entrust_purpose_name, entrust_purpose, entrust_aim_type, 
      remark_entrust_purpose, value_type, remark_value_type, 
      department_id, remarks, complete_date_plan, 
      complete_date_actual, complete_date_start, 
      process_ins_id, property_scope, scope_include, 
      scope_not_include, loan_type, contract_id, 
      contract_name, contract_price, service_come_from, 
      service_come_from_explain, status, project_status, 
      public_project_id, assign_process_ins_id, assign_status, 
      estate_name, preaudit_number_date, property_scope_name, 
      result_number_date, bis_assign, serial_number, 
      creator, gmt_created, gmt_modified
      )
    values (#{projectClassId,jdbcType=INTEGER}, #{projectTypeId,jdbcType=INTEGER}, #{projectCategoryId,jdbcType=INTEGER}, 
      #{projectName,jdbcType=VARCHAR}, #{urgency,jdbcType=INTEGER}, #{province,jdbcType=VARCHAR}, 
      #{city,jdbcType=VARCHAR}, #{district,jdbcType=VARCHAR}, #{valuationDate,jdbcType=TIMESTAMP}, 
      #{entrustPurposeName,jdbcType=VARCHAR}, #{entrustPurpose,jdbcType=INTEGER}, #{entrustAimType,jdbcType=INTEGER}, 
      #{remarkEntrustPurpose,jdbcType=VARCHAR}, #{valueType,jdbcType=INTEGER}, #{remarkValueType,jdbcType=VARCHAR}, 
      #{departmentId,jdbcType=INTEGER}, #{remarks,jdbcType=VARCHAR}, #{completeDatePlan,jdbcType=TIMESTAMP}, 
      #{completeDateActual,jdbcType=TIMESTAMP}, #{completeDateStart,jdbcType=TIMESTAMP}, 
      #{processInsId,jdbcType=VARCHAR}, #{propertyScope,jdbcType=VARCHAR}, #{scopeInclude,jdbcType=VARCHAR}, 
      #{scopeNotInclude,jdbcType=VARCHAR}, #{loanType,jdbcType=INTEGER}, #{contractId,jdbcType=VARCHAR}, 
      #{contractName,jdbcType=VARCHAR}, #{contractPrice,jdbcType=DECIMAL}, #{serviceComeFrom,jdbcType=VARCHAR}, 
      #{serviceComeFromExplain,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{projectStatus,jdbcType=VARCHAR}, 
      #{publicProjectId,jdbcType=INTEGER}, #{assignProcessInsId,jdbcType=VARCHAR}, #{assignStatus,jdbcType=VARCHAR}, 
      #{estateName,jdbcType=VARCHAR}, #{preauditNumberDate,jdbcType=TIMESTAMP}, #{propertyScopeName,jdbcType=VARCHAR}, 
      #{resultNumberDate,jdbcType=TIMESTAMP}, #{bisAssign,jdbcType=BIT}, #{serialNumber,jdbcType=INTEGER}, 
      #{creator,jdbcType=VARCHAR}, #{gmtCreated,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="map">
    <selectKey keyProperty="record.id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_project_info
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.projectClassId != null">
            project_class_id,
          </if>
          <if test="record.projectTypeId != null">
            project_type_id,
          </if>
          <if test="record.projectCategoryId != null">
            project_category_id,
          </if>
          <if test="record.projectName != null">
            project_name,
          </if>
          <if test="record.urgency != null">
            urgency,
          </if>
          <if test="record.province != null">
            province,
          </if>
          <if test="record.city != null">
            city,
          </if>
          <if test="record.district != null">
            district,
          </if>
          <if test="record.valuationDate != null">
            valuation_date,
          </if>
          <if test="record.entrustPurposeName != null">
            entrust_purpose_name,
          </if>
          <if test="record.entrustPurpose != null">
            entrust_purpose,
          </if>
          <if test="record.entrustAimType != null">
            entrust_aim_type,
          </if>
          <if test="record.remarkEntrustPurpose != null">
            remark_entrust_purpose,
          </if>
          <if test="record.valueType != null">
            value_type,
          </if>
          <if test="record.remarkValueType != null">
            remark_value_type,
          </if>
          <if test="record.departmentId != null">
            department_id,
          </if>
          <if test="record.remarks != null">
            remarks,
          </if>
          <if test="record.completeDatePlan != null">
            complete_date_plan,
          </if>
          <if test="record.completeDateActual != null">
            complete_date_actual,
          </if>
          <if test="record.completeDateStart != null">
            complete_date_start,
          </if>
          <if test="record.processInsId != null">
            process_ins_id,
          </if>
          <if test="record.propertyScope != null">
            property_scope,
          </if>
          <if test="record.scopeInclude != null">
            scope_include,
          </if>
          <if test="record.scopeNotInclude != null">
            scope_not_include,
          </if>
          <if test="record.loanType != null">
            loan_type,
          </if>
          <if test="record.contractId != null">
            contract_id,
          </if>
          <if test="record.contractName != null">
            contract_name,
          </if>
          <if test="record.contractPrice != null">
            contract_price,
          </if>
          <if test="record.serviceComeFrom != null">
            service_come_from,
          </if>
          <if test="record.serviceComeFromExplain != null">
            service_come_from_explain,
          </if>
          <if test="record.status != null">
            status,
          </if>
          <if test="record.projectStatus != null">
            project_status,
          </if>
          <if test="record.publicProjectId != null">
            public_project_id,
          </if>
          <if test="record.assignProcessInsId != null">
            assign_process_ins_id,
          </if>
          <if test="record.assignStatus != null">
            assign_status,
          </if>
          <if test="record.estateName != null">
            estate_name,
          </if>
          <if test="record.preauditNumberDate != null">
            preaudit_number_date,
          </if>
          <if test="record.propertyScopeName != null">
            property_scope_name,
          </if>
          <if test="record.resultNumberDate != null">
            result_number_date,
          </if>
          <if test="record.bisAssign != null">
            bis_assign,
          </if>
          <if test="record.serialNumber != null">
            serial_number,
          </if>
          <if test="record.creator != null">
            creator,
          </if>
          <if test="record.gmtCreated != null">
            gmt_created,
          </if>
          <if test="record.gmtModified != null">
            gmt_modified,
          </if>
        </trim>
        <trim prefix="(" suffix=")" suffixOverrides="," />
      </otherwise>
    </choose>
    values
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.projectClassId != null">
            #{record.projectClassId,jdbcType=INTEGER},
          </if>
          <if test="record.projectTypeId != null">
            #{record.projectTypeId,jdbcType=INTEGER},
          </if>
          <if test="record.projectCategoryId != null">
            #{record.projectCategoryId,jdbcType=INTEGER},
          </if>
          <if test="record.projectName != null">
            #{record.projectName,jdbcType=VARCHAR},
          </if>
          <if test="record.urgency != null">
            #{record.urgency,jdbcType=INTEGER},
          </if>
          <if test="record.province != null">
            #{record.province,jdbcType=VARCHAR},
          </if>
          <if test="record.city != null">
            #{record.city,jdbcType=VARCHAR},
          </if>
          <if test="record.district != null">
            #{record.district,jdbcType=VARCHAR},
          </if>
          <if test="record.valuationDate != null">
            #{record.valuationDate,jdbcType=TIMESTAMP},
          </if>
          <if test="record.entrustPurposeName != null">
            #{record.entrustPurposeName,jdbcType=VARCHAR},
          </if>
          <if test="record.entrustPurpose != null">
            #{record.entrustPurpose,jdbcType=INTEGER},
          </if>
          <if test="record.entrustAimType != null">
            #{record.entrustAimType,jdbcType=INTEGER},
          </if>
          <if test="record.remarkEntrustPurpose != null">
            #{record.remarkEntrustPurpose,jdbcType=VARCHAR},
          </if>
          <if test="record.valueType != null">
            #{record.valueType,jdbcType=INTEGER},
          </if>
          <if test="record.remarkValueType != null">
            #{record.remarkValueType,jdbcType=VARCHAR},
          </if>
          <if test="record.departmentId != null">
            #{record.departmentId,jdbcType=INTEGER},
          </if>
          <if test="record.remarks != null">
            #{record.remarks,jdbcType=VARCHAR},
          </if>
          <if test="record.completeDatePlan != null">
            #{record.completeDatePlan,jdbcType=TIMESTAMP},
          </if>
          <if test="record.completeDateActual != null">
            #{record.completeDateActual,jdbcType=TIMESTAMP},
          </if>
          <if test="record.completeDateStart != null">
            #{record.completeDateStart,jdbcType=TIMESTAMP},
          </if>
          <if test="record.processInsId != null">
            #{record.processInsId,jdbcType=VARCHAR},
          </if>
          <if test="record.propertyScope != null">
            #{record.propertyScope,jdbcType=VARCHAR},
          </if>
          <if test="record.scopeInclude != null">
            #{record.scopeInclude,jdbcType=VARCHAR},
          </if>
          <if test="record.scopeNotInclude != null">
            #{record.scopeNotInclude,jdbcType=VARCHAR},
          </if>
          <if test="record.loanType != null">
            #{record.loanType,jdbcType=INTEGER},
          </if>
          <if test="record.contractId != null">
            #{record.contractId,jdbcType=VARCHAR},
          </if>
          <if test="record.contractName != null">
            #{record.contractName,jdbcType=VARCHAR},
          </if>
          <if test="record.contractPrice != null">
            #{record.contractPrice,jdbcType=DECIMAL},
          </if>
          <if test="record.serviceComeFrom != null">
            #{record.serviceComeFrom,jdbcType=VARCHAR},
          </if>
          <if test="record.serviceComeFromExplain != null">
            #{record.serviceComeFromExplain,jdbcType=VARCHAR},
          </if>
          <if test="record.status != null">
            #{record.status,jdbcType=VARCHAR},
          </if>
          <if test="record.projectStatus != null">
            #{record.projectStatus,jdbcType=VARCHAR},
          </if>
          <if test="record.publicProjectId != null">
            #{record.publicProjectId,jdbcType=INTEGER},
          </if>
          <if test="record.assignProcessInsId != null">
            #{record.assignProcessInsId,jdbcType=VARCHAR},
          </if>
          <if test="record.assignStatus != null">
            #{record.assignStatus,jdbcType=VARCHAR},
          </if>
          <if test="record.estateName != null">
            #{record.estateName,jdbcType=VARCHAR},
          </if>
          <if test="record.preauditNumberDate != null">
            #{record.preauditNumberDate,jdbcType=TIMESTAMP},
          </if>
          <if test="record.propertyScopeName != null">
            #{record.propertyScopeName,jdbcType=VARCHAR},
          </if>
          <if test="record.resultNumberDate != null">
            #{record.resultNumberDate,jdbcType=TIMESTAMP},
          </if>
          <if test="record.bisAssign != null">
            #{record.bisAssign,jdbcType=BIT},
          </if>
          <if test="record.serialNumber != null">
            #{record.serialNumber,jdbcType=INTEGER},
          </if>
          <if test="record.creator != null">
            #{record.creator,jdbcType=VARCHAR},
          </if>
          <if test="record.gmtCreated != null">
            #{record.gmtCreated,jdbcType=TIMESTAMP},
          </if>
          <if test="record.gmtModified != null">
            #{record.gmtModified,jdbcType=TIMESTAMP},
          </if>
        </trim>
      </otherwise>
    </choose>
  </insert>
  <select id="countByExample" parameterType="com.copower.pmcc.assess.dal.basis.entity.ProjectInfoExample" resultType="java.lang.Long">
    select count(*) from tb_project_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_project_info
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.id != null">
            id = #{record.id,jdbcType=INTEGER},
          </if>
          <if test="record.projectClassId != null">
            project_class_id = #{record.projectClassId,jdbcType=INTEGER},
          </if>
          <if test="record.projectTypeId != null">
            project_type_id = #{record.projectTypeId,jdbcType=INTEGER},
          </if>
          <if test="record.projectCategoryId != null">
            project_category_id = #{record.projectCategoryId,jdbcType=INTEGER},
          </if>
          <if test="record.projectName != null">
            project_name = #{record.projectName,jdbcType=VARCHAR},
          </if>
          <if test="record.urgency != null">
            urgency = #{record.urgency,jdbcType=INTEGER},
          </if>
          <if test="record.province != null">
            province = #{record.province,jdbcType=VARCHAR},
          </if>
          <if test="record.city != null">
            city = #{record.city,jdbcType=VARCHAR},
          </if>
          <if test="record.district != null">
            district = #{record.district,jdbcType=VARCHAR},
          </if>
          <if test="record.valuationDate != null">
            valuation_date = #{record.valuationDate,jdbcType=TIMESTAMP},
          </if>
          <if test="record.entrustPurposeName != null">
            entrust_purpose_name = #{record.entrustPurposeName,jdbcType=VARCHAR},
          </if>
          <if test="record.entrustPurpose != null">
            entrust_purpose = #{record.entrustPurpose,jdbcType=INTEGER},
          </if>
          <if test="record.entrustAimType != null">
            entrust_aim_type = #{record.entrustAimType,jdbcType=INTEGER},
          </if>
          <if test="record.remarkEntrustPurpose != null">
            remark_entrust_purpose = #{record.remarkEntrustPurpose,jdbcType=VARCHAR},
          </if>
          <if test="record.valueType != null">
            value_type = #{record.valueType,jdbcType=INTEGER},
          </if>
          <if test="record.remarkValueType != null">
            remark_value_type = #{record.remarkValueType,jdbcType=VARCHAR},
          </if>
          <if test="record.departmentId != null">
            department_id = #{record.departmentId,jdbcType=INTEGER},
          </if>
          <if test="record.remarks != null">
            remarks = #{record.remarks,jdbcType=VARCHAR},
          </if>
          <if test="record.completeDatePlan != null">
            complete_date_plan = #{record.completeDatePlan,jdbcType=TIMESTAMP},
          </if>
          <if test="record.completeDateActual != null">
            complete_date_actual = #{record.completeDateActual,jdbcType=TIMESTAMP},
          </if>
          <if test="record.completeDateStart != null">
            complete_date_start = #{record.completeDateStart,jdbcType=TIMESTAMP},
          </if>
          <if test="record.processInsId != null">
            process_ins_id = #{record.processInsId,jdbcType=VARCHAR},
          </if>
          <if test="record.propertyScope != null">
            property_scope = #{record.propertyScope,jdbcType=VARCHAR},
          </if>
          <if test="record.scopeInclude != null">
            scope_include = #{record.scopeInclude,jdbcType=VARCHAR},
          </if>
          <if test="record.scopeNotInclude != null">
            scope_not_include = #{record.scopeNotInclude,jdbcType=VARCHAR},
          </if>
          <if test="record.loanType != null">
            loan_type = #{record.loanType,jdbcType=INTEGER},
          </if>
          <if test="record.contractId != null">
            contract_id = #{record.contractId,jdbcType=VARCHAR},
          </if>
          <if test="record.contractName != null">
            contract_name = #{record.contractName,jdbcType=VARCHAR},
          </if>
          <if test="record.contractPrice != null">
            contract_price = #{record.contractPrice,jdbcType=DECIMAL},
          </if>
          <if test="record.serviceComeFrom != null">
            service_come_from = #{record.serviceComeFrom,jdbcType=VARCHAR},
          </if>
          <if test="record.serviceComeFromExplain != null">
            service_come_from_explain = #{record.serviceComeFromExplain,jdbcType=VARCHAR},
          </if>
          <if test="record.status != null">
            status = #{record.status,jdbcType=VARCHAR},
          </if>
          <if test="record.projectStatus != null">
            project_status = #{record.projectStatus,jdbcType=VARCHAR},
          </if>
          <if test="record.publicProjectId != null">
            public_project_id = #{record.publicProjectId,jdbcType=INTEGER},
          </if>
          <if test="record.assignProcessInsId != null">
            assign_process_ins_id = #{record.assignProcessInsId,jdbcType=VARCHAR},
          </if>
          <if test="record.assignStatus != null">
            assign_status = #{record.assignStatus,jdbcType=VARCHAR},
          </if>
          <if test="record.estateName != null">
            estate_name = #{record.estateName,jdbcType=VARCHAR},
          </if>
          <if test="record.preauditNumberDate != null">
            preaudit_number_date = #{record.preauditNumberDate,jdbcType=TIMESTAMP},
          </if>
          <if test="record.propertyScopeName != null">
            property_scope_name = #{record.propertyScopeName,jdbcType=VARCHAR},
          </if>
          <if test="record.resultNumberDate != null">
            result_number_date = #{record.resultNumberDate,jdbcType=TIMESTAMP},
          </if>
          <if test="record.bisAssign != null">
            bis_assign = #{record.bisAssign,jdbcType=BIT},
          </if>
          <if test="record.serialNumber != null">
            serial_number = #{record.serialNumber,jdbcType=INTEGER},
          </if>
          <if test="record.creator != null">
            creator = #{record.creator,jdbcType=VARCHAR},
          </if>
          <if test="record.gmtCreated != null">
            gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
          </if>
          <if test="record.gmtModified != null">
            gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
          </if>
        </trim>
      </otherwise>
    </choose>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_project_info
    set id = #{record.id,jdbcType=INTEGER},
      project_class_id = #{record.projectClassId,jdbcType=INTEGER},
      project_type_id = #{record.projectTypeId,jdbcType=INTEGER},
      project_category_id = #{record.projectCategoryId,jdbcType=INTEGER},
      project_name = #{record.projectName,jdbcType=VARCHAR},
      urgency = #{record.urgency,jdbcType=INTEGER},
      province = #{record.province,jdbcType=VARCHAR},
      city = #{record.city,jdbcType=VARCHAR},
      district = #{record.district,jdbcType=VARCHAR},
      valuation_date = #{record.valuationDate,jdbcType=TIMESTAMP},
      entrust_purpose_name = #{record.entrustPurposeName,jdbcType=VARCHAR},
      entrust_purpose = #{record.entrustPurpose,jdbcType=INTEGER},
      entrust_aim_type = #{record.entrustAimType,jdbcType=INTEGER},
      remark_entrust_purpose = #{record.remarkEntrustPurpose,jdbcType=VARCHAR},
      value_type = #{record.valueType,jdbcType=INTEGER},
      remark_value_type = #{record.remarkValueType,jdbcType=VARCHAR},
      department_id = #{record.departmentId,jdbcType=INTEGER},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      complete_date_plan = #{record.completeDatePlan,jdbcType=TIMESTAMP},
      complete_date_actual = #{record.completeDateActual,jdbcType=TIMESTAMP},
      complete_date_start = #{record.completeDateStart,jdbcType=TIMESTAMP},
      process_ins_id = #{record.processInsId,jdbcType=VARCHAR},
      property_scope = #{record.propertyScope,jdbcType=VARCHAR},
      scope_include = #{record.scopeInclude,jdbcType=VARCHAR},
      scope_not_include = #{record.scopeNotInclude,jdbcType=VARCHAR},
      loan_type = #{record.loanType,jdbcType=INTEGER},
      contract_id = #{record.contractId,jdbcType=VARCHAR},
      contract_name = #{record.contractName,jdbcType=VARCHAR},
      contract_price = #{record.contractPrice,jdbcType=DECIMAL},
      service_come_from = #{record.serviceComeFrom,jdbcType=VARCHAR},
      service_come_from_explain = #{record.serviceComeFromExplain,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      project_status = #{record.projectStatus,jdbcType=VARCHAR},
      public_project_id = #{record.publicProjectId,jdbcType=INTEGER},
      assign_process_ins_id = #{record.assignProcessInsId,jdbcType=VARCHAR},
      assign_status = #{record.assignStatus,jdbcType=VARCHAR},
      estate_name = #{record.estateName,jdbcType=VARCHAR},
      preaudit_number_date = #{record.preauditNumberDate,jdbcType=TIMESTAMP},
      property_scope_name = #{record.propertyScopeName,jdbcType=VARCHAR},
      result_number_date = #{record.resultNumberDate,jdbcType=TIMESTAMP},
      bis_assign = #{record.bisAssign,jdbcType=BIT},
      serial_number = #{record.serialNumber,jdbcType=INTEGER},
      creator = #{record.creator,jdbcType=VARCHAR},
      gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="map">
    update tb_project_info
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.projectClassId != null">
            project_class_id = #{record.projectClassId,jdbcType=INTEGER},
          </if>
          <if test="record.projectTypeId != null">
            project_type_id = #{record.projectTypeId,jdbcType=INTEGER},
          </if>
          <if test="record.projectCategoryId != null">
            project_category_id = #{record.projectCategoryId,jdbcType=INTEGER},
          </if>
          <if test="record.projectName != null">
            project_name = #{record.projectName,jdbcType=VARCHAR},
          </if>
          <if test="record.urgency != null">
            urgency = #{record.urgency,jdbcType=INTEGER},
          </if>
          <if test="record.province != null">
            province = #{record.province,jdbcType=VARCHAR},
          </if>
          <if test="record.city != null">
            city = #{record.city,jdbcType=VARCHAR},
          </if>
          <if test="record.district != null">
            district = #{record.district,jdbcType=VARCHAR},
          </if>
          <if test="record.valuationDate != null">
            valuation_date = #{record.valuationDate,jdbcType=TIMESTAMP},
          </if>
          <if test="record.entrustPurposeName != null">
            entrust_purpose_name = #{record.entrustPurposeName,jdbcType=VARCHAR},
          </if>
          <if test="record.entrustPurpose != null">
            entrust_purpose = #{record.entrustPurpose,jdbcType=INTEGER},
          </if>
          <if test="record.entrustAimType != null">
            entrust_aim_type = #{record.entrustAimType,jdbcType=INTEGER},
          </if>
          <if test="record.remarkEntrustPurpose != null">
            remark_entrust_purpose = #{record.remarkEntrustPurpose,jdbcType=VARCHAR},
          </if>
          <if test="record.valueType != null">
            value_type = #{record.valueType,jdbcType=INTEGER},
          </if>
          <if test="record.remarkValueType != null">
            remark_value_type = #{record.remarkValueType,jdbcType=VARCHAR},
          </if>
          <if test="record.departmentId != null">
            department_id = #{record.departmentId,jdbcType=INTEGER},
          </if>
          <if test="record.remarks != null">
            remarks = #{record.remarks,jdbcType=VARCHAR},
          </if>
          <if test="record.completeDatePlan != null">
            complete_date_plan = #{record.completeDatePlan,jdbcType=TIMESTAMP},
          </if>
          <if test="record.completeDateActual != null">
            complete_date_actual = #{record.completeDateActual,jdbcType=TIMESTAMP},
          </if>
          <if test="record.completeDateStart != null">
            complete_date_start = #{record.completeDateStart,jdbcType=TIMESTAMP},
          </if>
          <if test="record.processInsId != null">
            process_ins_id = #{record.processInsId,jdbcType=VARCHAR},
          </if>
          <if test="record.propertyScope != null">
            property_scope = #{record.propertyScope,jdbcType=VARCHAR},
          </if>
          <if test="record.scopeInclude != null">
            scope_include = #{record.scopeInclude,jdbcType=VARCHAR},
          </if>
          <if test="record.scopeNotInclude != null">
            scope_not_include = #{record.scopeNotInclude,jdbcType=VARCHAR},
          </if>
          <if test="record.loanType != null">
            loan_type = #{record.loanType,jdbcType=INTEGER},
          </if>
          <if test="record.contractId != null">
            contract_id = #{record.contractId,jdbcType=VARCHAR},
          </if>
          <if test="record.contractName != null">
            contract_name = #{record.contractName,jdbcType=VARCHAR},
          </if>
          <if test="record.contractPrice != null">
            contract_price = #{record.contractPrice,jdbcType=DECIMAL},
          </if>
          <if test="record.serviceComeFrom != null">
            service_come_from = #{record.serviceComeFrom,jdbcType=VARCHAR},
          </if>
          <if test="record.serviceComeFromExplain != null">
            service_come_from_explain = #{record.serviceComeFromExplain,jdbcType=VARCHAR},
          </if>
          <if test="record.status != null">
            status = #{record.status,jdbcType=VARCHAR},
          </if>
          <if test="record.projectStatus != null">
            project_status = #{record.projectStatus,jdbcType=VARCHAR},
          </if>
          <if test="record.publicProjectId != null">
            public_project_id = #{record.publicProjectId,jdbcType=INTEGER},
          </if>
          <if test="record.assignProcessInsId != null">
            assign_process_ins_id = #{record.assignProcessInsId,jdbcType=VARCHAR},
          </if>
          <if test="record.assignStatus != null">
            assign_status = #{record.assignStatus,jdbcType=VARCHAR},
          </if>
          <if test="record.estateName != null">
            estate_name = #{record.estateName,jdbcType=VARCHAR},
          </if>
          <if test="record.preauditNumberDate != null">
            preaudit_number_date = #{record.preauditNumberDate,jdbcType=TIMESTAMP},
          </if>
          <if test="record.propertyScopeName != null">
            property_scope_name = #{record.propertyScopeName,jdbcType=VARCHAR},
          </if>
          <if test="record.resultNumberDate != null">
            result_number_date = #{record.resultNumberDate,jdbcType=TIMESTAMP},
          </if>
          <if test="record.bisAssign != null">
            bis_assign = #{record.bisAssign,jdbcType=BIT},
          </if>
          <if test="record.serialNumber != null">
            serial_number = #{record.serialNumber,jdbcType=INTEGER},
          </if>
          <if test="record.creator != null">
            creator = #{record.creator,jdbcType=VARCHAR},
          </if>
          <if test="record.gmtCreated != null">
            gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
          </if>
          <if test="record.gmtModified != null">
            gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
          </if>
        </trim>
      </otherwise>
    </choose>
    where id = #{record.id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.copower.pmcc.assess.dal.basis.entity.ProjectInfo">
    update tb_project_info
    set project_class_id = #{projectClassId,jdbcType=INTEGER},
      project_type_id = #{projectTypeId,jdbcType=INTEGER},
      project_category_id = #{projectCategoryId,jdbcType=INTEGER},
      project_name = #{projectName,jdbcType=VARCHAR},
      urgency = #{urgency,jdbcType=INTEGER},
      province = #{province,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      district = #{district,jdbcType=VARCHAR},
      valuation_date = #{valuationDate,jdbcType=TIMESTAMP},
      entrust_purpose_name = #{entrustPurposeName,jdbcType=VARCHAR},
      entrust_purpose = #{entrustPurpose,jdbcType=INTEGER},
      entrust_aim_type = #{entrustAimType,jdbcType=INTEGER},
      remark_entrust_purpose = #{remarkEntrustPurpose,jdbcType=VARCHAR},
      value_type = #{valueType,jdbcType=INTEGER},
      remark_value_type = #{remarkValueType,jdbcType=VARCHAR},
      department_id = #{departmentId,jdbcType=INTEGER},
      remarks = #{remarks,jdbcType=VARCHAR},
      complete_date_plan = #{completeDatePlan,jdbcType=TIMESTAMP},
      complete_date_actual = #{completeDateActual,jdbcType=TIMESTAMP},
      complete_date_start = #{completeDateStart,jdbcType=TIMESTAMP},
      process_ins_id = #{processInsId,jdbcType=VARCHAR},
      property_scope = #{propertyScope,jdbcType=VARCHAR},
      scope_include = #{scopeInclude,jdbcType=VARCHAR},
      scope_not_include = #{scopeNotInclude,jdbcType=VARCHAR},
      loan_type = #{loanType,jdbcType=INTEGER},
      contract_id = #{contractId,jdbcType=VARCHAR},
      contract_name = #{contractName,jdbcType=VARCHAR},
      contract_price = #{contractPrice,jdbcType=DECIMAL},
      service_come_from = #{serviceComeFrom,jdbcType=VARCHAR},
      service_come_from_explain = #{serviceComeFromExplain,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      project_status = #{projectStatus,jdbcType=VARCHAR},
      public_project_id = #{publicProjectId,jdbcType=INTEGER},
      assign_process_ins_id = #{assignProcessInsId,jdbcType=VARCHAR},
      assign_status = #{assignStatus,jdbcType=VARCHAR},
      estate_name = #{estateName,jdbcType=VARCHAR},
      preaudit_number_date = #{preauditNumberDate,jdbcType=TIMESTAMP},
      property_scope_name = #{propertyScopeName,jdbcType=VARCHAR},
      result_number_date = #{resultNumberDate,jdbcType=TIMESTAMP},
      bis_assign = #{bisAssign,jdbcType=BIT},
      serial_number = #{serialNumber,jdbcType=INTEGER},
      creator = #{creator,jdbcType=VARCHAR},
      gmt_created = #{gmtCreated,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    insert into tb_project_info
    (project_class_id, project_type_id, project_category_id, project_name, urgency, province, 
      city, district, valuation_date, entrust_purpose_name, entrust_purpose, entrust_aim_type, 
      remark_entrust_purpose, value_type, remark_value_type, department_id, remarks, 
      complete_date_plan, complete_date_actual, complete_date_start, process_ins_id, 
      property_scope, scope_include, scope_not_include, loan_type, contract_id, contract_name, 
      contract_price, service_come_from, service_come_from_explain, status, project_status, 
      public_project_id, assign_process_ins_id, assign_status, estate_name, preaudit_number_date, 
      property_scope_name, result_number_date, bis_assign, serial_number, creator, gmt_created, 
      gmt_modified)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.projectClassId,jdbcType=INTEGER}, #{item.projectTypeId,jdbcType=INTEGER}, 
        #{item.projectCategoryId,jdbcType=INTEGER}, #{item.projectName,jdbcType=VARCHAR}, 
        #{item.urgency,jdbcType=INTEGER}, #{item.province,jdbcType=VARCHAR}, #{item.city,jdbcType=VARCHAR}, 
        #{item.district,jdbcType=VARCHAR}, #{item.valuationDate,jdbcType=TIMESTAMP}, #{item.entrustPurposeName,jdbcType=VARCHAR}, 
        #{item.entrustPurpose,jdbcType=INTEGER}, #{item.entrustAimType,jdbcType=INTEGER}, 
        #{item.remarkEntrustPurpose,jdbcType=VARCHAR}, #{item.valueType,jdbcType=INTEGER}, 
        #{item.remarkValueType,jdbcType=VARCHAR}, #{item.departmentId,jdbcType=INTEGER}, 
        #{item.remarks,jdbcType=VARCHAR}, #{item.completeDatePlan,jdbcType=TIMESTAMP}, 
        #{item.completeDateActual,jdbcType=TIMESTAMP}, #{item.completeDateStart,jdbcType=TIMESTAMP}, 
        #{item.processInsId,jdbcType=VARCHAR}, #{item.propertyScope,jdbcType=VARCHAR}, 
        #{item.scopeInclude,jdbcType=VARCHAR}, #{item.scopeNotInclude,jdbcType=VARCHAR}, 
        #{item.loanType,jdbcType=INTEGER}, #{item.contractId,jdbcType=VARCHAR}, #{item.contractName,jdbcType=VARCHAR}, 
        #{item.contractPrice,jdbcType=DECIMAL}, #{item.serviceComeFrom,jdbcType=VARCHAR}, 
        #{item.serviceComeFromExplain,jdbcType=VARCHAR}, #{item.status,jdbcType=VARCHAR}, 
        #{item.projectStatus,jdbcType=VARCHAR}, #{item.publicProjectId,jdbcType=INTEGER}, 
        #{item.assignProcessInsId,jdbcType=VARCHAR}, #{item.assignStatus,jdbcType=VARCHAR}, 
        #{item.estateName,jdbcType=VARCHAR}, #{item.preauditNumberDate,jdbcType=TIMESTAMP}, 
        #{item.propertyScopeName,jdbcType=VARCHAR}, #{item.resultNumberDate,jdbcType=TIMESTAMP}, 
        #{item.bisAssign,jdbcType=BIT}, #{item.serialNumber,jdbcType=INTEGER}, #{item.creator,jdbcType=VARCHAR}, 
        #{item.gmtCreated,jdbcType=TIMESTAMP}, #{item.gmtModified,jdbcType=TIMESTAMP})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" keyColumn="id" keyProperty="list.id" parameterType="map" useGeneratedKeys="true">
    insert into tb_project_info (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'project_class_id'.toString() == column.value">
          #{item.projectClassId,jdbcType=INTEGER}
        </if>
        <if test="'project_type_id'.toString() == column.value">
          #{item.projectTypeId,jdbcType=INTEGER}
        </if>
        <if test="'project_category_id'.toString() == column.value">
          #{item.projectCategoryId,jdbcType=INTEGER}
        </if>
        <if test="'project_name'.toString() == column.value">
          #{item.projectName,jdbcType=VARCHAR}
        </if>
        <if test="'urgency'.toString() == column.value">
          #{item.urgency,jdbcType=INTEGER}
        </if>
        <if test="'province'.toString() == column.value">
          #{item.province,jdbcType=VARCHAR}
        </if>
        <if test="'city'.toString() == column.value">
          #{item.city,jdbcType=VARCHAR}
        </if>
        <if test="'district'.toString() == column.value">
          #{item.district,jdbcType=VARCHAR}
        </if>
        <if test="'valuation_date'.toString() == column.value">
          #{item.valuationDate,jdbcType=TIMESTAMP}
        </if>
        <if test="'entrust_purpose_name'.toString() == column.value">
          #{item.entrustPurposeName,jdbcType=VARCHAR}
        </if>
        <if test="'entrust_purpose'.toString() == column.value">
          #{item.entrustPurpose,jdbcType=INTEGER}
        </if>
        <if test="'entrust_aim_type'.toString() == column.value">
          #{item.entrustAimType,jdbcType=INTEGER}
        </if>
        <if test="'remark_entrust_purpose'.toString() == column.value">
          #{item.remarkEntrustPurpose,jdbcType=VARCHAR}
        </if>
        <if test="'value_type'.toString() == column.value">
          #{item.valueType,jdbcType=INTEGER}
        </if>
        <if test="'remark_value_type'.toString() == column.value">
          #{item.remarkValueType,jdbcType=VARCHAR}
        </if>
        <if test="'department_id'.toString() == column.value">
          #{item.departmentId,jdbcType=INTEGER}
        </if>
        <if test="'remarks'.toString() == column.value">
          #{item.remarks,jdbcType=VARCHAR}
        </if>
        <if test="'complete_date_plan'.toString() == column.value">
          #{item.completeDatePlan,jdbcType=TIMESTAMP}
        </if>
        <if test="'complete_date_actual'.toString() == column.value">
          #{item.completeDateActual,jdbcType=TIMESTAMP}
        </if>
        <if test="'complete_date_start'.toString() == column.value">
          #{item.completeDateStart,jdbcType=TIMESTAMP}
        </if>
        <if test="'process_ins_id'.toString() == column.value">
          #{item.processInsId,jdbcType=VARCHAR}
        </if>
        <if test="'property_scope'.toString() == column.value">
          #{item.propertyScope,jdbcType=VARCHAR}
        </if>
        <if test="'scope_include'.toString() == column.value">
          #{item.scopeInclude,jdbcType=VARCHAR}
        </if>
        <if test="'scope_not_include'.toString() == column.value">
          #{item.scopeNotInclude,jdbcType=VARCHAR}
        </if>
        <if test="'loan_type'.toString() == column.value">
          #{item.loanType,jdbcType=INTEGER}
        </if>
        <if test="'contract_id'.toString() == column.value">
          #{item.contractId,jdbcType=VARCHAR}
        </if>
        <if test="'contract_name'.toString() == column.value">
          #{item.contractName,jdbcType=VARCHAR}
        </if>
        <if test="'contract_price'.toString() == column.value">
          #{item.contractPrice,jdbcType=DECIMAL}
        </if>
        <if test="'service_come_from'.toString() == column.value">
          #{item.serviceComeFrom,jdbcType=VARCHAR}
        </if>
        <if test="'service_come_from_explain'.toString() == column.value">
          #{item.serviceComeFromExplain,jdbcType=VARCHAR}
        </if>
        <if test="'status'.toString() == column.value">
          #{item.status,jdbcType=VARCHAR}
        </if>
        <if test="'project_status'.toString() == column.value">
          #{item.projectStatus,jdbcType=VARCHAR}
        </if>
        <if test="'public_project_id'.toString() == column.value">
          #{item.publicProjectId,jdbcType=INTEGER}
        </if>
        <if test="'assign_process_ins_id'.toString() == column.value">
          #{item.assignProcessInsId,jdbcType=VARCHAR}
        </if>
        <if test="'assign_status'.toString() == column.value">
          #{item.assignStatus,jdbcType=VARCHAR}
        </if>
        <if test="'estate_name'.toString() == column.value">
          #{item.estateName,jdbcType=VARCHAR}
        </if>
        <if test="'preaudit_number_date'.toString() == column.value">
          #{item.preauditNumberDate,jdbcType=TIMESTAMP}
        </if>
        <if test="'property_scope_name'.toString() == column.value">
          #{item.propertyScopeName,jdbcType=VARCHAR}
        </if>
        <if test="'result_number_date'.toString() == column.value">
          #{item.resultNumberDate,jdbcType=TIMESTAMP}
        </if>
        <if test="'bis_assign'.toString() == column.value">
          #{item.bisAssign,jdbcType=BIT}
        </if>
        <if test="'serial_number'.toString() == column.value">
          #{item.serialNumber,jdbcType=INTEGER}
        </if>
        <if test="'creator'.toString() == column.value">
          #{item.creator,jdbcType=VARCHAR}
        </if>
        <if test="'gmt_created'.toString() == column.value">
          #{item.gmtCreated,jdbcType=TIMESTAMP}
        </if>
        <if test="'gmt_modified'.toString() == column.value">
          #{item.gmtModified,jdbcType=TIMESTAMP}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>