<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.copower.pmcc.assess.dal.basis.mapper.DeclareBuildEngineeringAndEquipmentCenterMapper" >
  <resultMap id="BaseResultMap" type="com.copower.pmcc.assess.dal.basis.entity.DeclareBuildEngineeringAndEquipmentCenter" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="plan_details_id" property="planDetailsId" jdbcType="INTEGER" />
    <result column="building_construction_permit_id" property="buildingConstructionPermitId" jdbcType="INTEGER" />
    <result column="building_permit_id" property="buildingPermitId" jdbcType="INTEGER" />
    <result column="land_use_permit_id" property="landUsePermitId" jdbcType="INTEGER" />
    <result column="pre_sale_permit_id" property="preSalePermitId" jdbcType="INTEGER" />
    <result column="land_id" property="landId" jdbcType="INTEGER" />
    <result column="house_id" property="houseId" jdbcType="INTEGER" />
    <result column="indicator_id" property="indicatorId" jdbcType="INTEGER" />
    <result column="real_estate_id" property="realEstateId" jdbcType="INTEGER" />
    <result column="build_engineering_id" property="buildEngineeringId" jdbcType="INTEGER" />
    <result column="build_equipment_id" property="buildEquipmentId" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="creator" property="creator" jdbcType="VARCHAR" />
    <result column="gmt_created" property="gmtCreated" jdbcType="TIMESTAMP" />
    <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, plan_details_id, building_construction_permit_id, building_permit_id, land_use_permit_id, 
    pre_sale_permit_id, land_id, house_id, indicator_id, real_estate_id, build_engineering_id, 
    build_equipment_id, type, creator, gmt_created, gmt_modified
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.copower.pmcc.assess.dal.basis.entity.DeclareBuildEngineeringAndEquipmentCenterExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_declare_build_engineering_and_equipment_center
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tb_declare_build_engineering_and_equipment_center
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_declare_build_engineering_and_equipment_center
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.copower.pmcc.assess.dal.basis.entity.DeclareBuildEngineeringAndEquipmentCenterExample" >
    delete from tb_declare_build_engineering_and_equipment_center
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.copower.pmcc.assess.dal.basis.entity.DeclareBuildEngineeringAndEquipmentCenter" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_declare_build_engineering_and_equipment_center (plan_details_id, building_construction_permit_id, 
      building_permit_id, land_use_permit_id, pre_sale_permit_id, 
      land_id, house_id, indicator_id, 
      real_estate_id, build_engineering_id, build_equipment_id, 
      type, creator, gmt_created, 
      gmt_modified)
    values (#{planDetailsId,jdbcType=INTEGER}, #{buildingConstructionPermitId,jdbcType=INTEGER}, 
      #{buildingPermitId,jdbcType=INTEGER}, #{landUsePermitId,jdbcType=INTEGER}, #{preSalePermitId,jdbcType=INTEGER}, 
      #{landId,jdbcType=INTEGER}, #{houseId,jdbcType=INTEGER}, #{indicatorId,jdbcType=INTEGER}, 
      #{realEstateId,jdbcType=INTEGER}, #{buildEngineeringId,jdbcType=INTEGER}, #{buildEquipmentId,jdbcType=INTEGER}, 
      #{type,jdbcType=VARCHAR}, #{creator,jdbcType=VARCHAR}, #{gmtCreated,jdbcType=TIMESTAMP}, 
      #{gmtModified,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.copower.pmcc.assess.dal.basis.entity.DeclareBuildEngineeringAndEquipmentCenter" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_declare_build_engineering_and_equipment_center
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="planDetailsId != null" >
        plan_details_id,
      </if>
      <if test="buildingConstructionPermitId != null" >
        building_construction_permit_id,
      </if>
      <if test="buildingPermitId != null" >
        building_permit_id,
      </if>
      <if test="landUsePermitId != null" >
        land_use_permit_id,
      </if>
      <if test="preSalePermitId != null" >
        pre_sale_permit_id,
      </if>
      <if test="landId != null" >
        land_id,
      </if>
      <if test="houseId != null" >
        house_id,
      </if>
      <if test="indicatorId != null" >
        indicator_id,
      </if>
      <if test="realEstateId != null" >
        real_estate_id,
      </if>
      <if test="buildEngineeringId != null" >
        build_engineering_id,
      </if>
      <if test="buildEquipmentId != null" >
        build_equipment_id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="creator != null" >
        creator,
      </if>
      <if test="gmtCreated != null" >
        gmt_created,
      </if>
      <if test="gmtModified != null" >
        gmt_modified,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="planDetailsId != null" >
        #{planDetailsId,jdbcType=INTEGER},
      </if>
      <if test="buildingConstructionPermitId != null" >
        #{buildingConstructionPermitId,jdbcType=INTEGER},
      </if>
      <if test="buildingPermitId != null" >
        #{buildingPermitId,jdbcType=INTEGER},
      </if>
      <if test="landUsePermitId != null" >
        #{landUsePermitId,jdbcType=INTEGER},
      </if>
      <if test="preSalePermitId != null" >
        #{preSalePermitId,jdbcType=INTEGER},
      </if>
      <if test="landId != null" >
        #{landId,jdbcType=INTEGER},
      </if>
      <if test="houseId != null" >
        #{houseId,jdbcType=INTEGER},
      </if>
      <if test="indicatorId != null" >
        #{indicatorId,jdbcType=INTEGER},
      </if>
      <if test="realEstateId != null" >
        #{realEstateId,jdbcType=INTEGER},
      </if>
      <if test="buildEngineeringId != null" >
        #{buildEngineeringId,jdbcType=INTEGER},
      </if>
      <if test="buildEquipmentId != null" >
        #{buildEquipmentId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreated != null" >
        #{gmtCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null" >
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.copower.pmcc.assess.dal.basis.entity.DeclareBuildEngineeringAndEquipmentCenterExample" resultType="java.lang.Integer" >
    select count(*) from tb_declare_build_engineering_and_equipment_center
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_declare_build_engineering_and_equipment_center
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.planDetailsId != null" >
        plan_details_id = #{record.planDetailsId,jdbcType=INTEGER},
      </if>
      <if test="record.buildingConstructionPermitId != null" >
        building_construction_permit_id = #{record.buildingConstructionPermitId,jdbcType=INTEGER},
      </if>
      <if test="record.buildingPermitId != null" >
        building_permit_id = #{record.buildingPermitId,jdbcType=INTEGER},
      </if>
      <if test="record.landUsePermitId != null" >
        land_use_permit_id = #{record.landUsePermitId,jdbcType=INTEGER},
      </if>
      <if test="record.preSalePermitId != null" >
        pre_sale_permit_id = #{record.preSalePermitId,jdbcType=INTEGER},
      </if>
      <if test="record.landId != null" >
        land_id = #{record.landId,jdbcType=INTEGER},
      </if>
      <if test="record.houseId != null" >
        house_id = #{record.houseId,jdbcType=INTEGER},
      </if>
      <if test="record.indicatorId != null" >
        indicator_id = #{record.indicatorId,jdbcType=INTEGER},
      </if>
      <if test="record.realEstateId != null" >
        real_estate_id = #{record.realEstateId,jdbcType=INTEGER},
      </if>
      <if test="record.buildEngineeringId != null" >
        build_engineering_id = #{record.buildEngineeringId,jdbcType=INTEGER},
      </if>
      <if test="record.buildEquipmentId != null" >
        build_equipment_id = #{record.buildEquipmentId,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.creator != null" >
        creator = #{record.creator,jdbcType=VARCHAR},
      </if>
      <if test="record.gmtCreated != null" >
        gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModified != null" >
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_declare_build_engineering_and_equipment_center
    set id = #{record.id,jdbcType=INTEGER},
      plan_details_id = #{record.planDetailsId,jdbcType=INTEGER},
      building_construction_permit_id = #{record.buildingConstructionPermitId,jdbcType=INTEGER},
      building_permit_id = #{record.buildingPermitId,jdbcType=INTEGER},
      land_use_permit_id = #{record.landUsePermitId,jdbcType=INTEGER},
      pre_sale_permit_id = #{record.preSalePermitId,jdbcType=INTEGER},
      land_id = #{record.landId,jdbcType=INTEGER},
      house_id = #{record.houseId,jdbcType=INTEGER},
      indicator_id = #{record.indicatorId,jdbcType=INTEGER},
      real_estate_id = #{record.realEstateId,jdbcType=INTEGER},
      build_engineering_id = #{record.buildEngineeringId,jdbcType=INTEGER},
      build_equipment_id = #{record.buildEquipmentId,jdbcType=INTEGER},
      type = #{record.type,jdbcType=VARCHAR},
      creator = #{record.creator,jdbcType=VARCHAR},
      gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.copower.pmcc.assess.dal.basis.entity.DeclareBuildEngineeringAndEquipmentCenter" >
    update tb_declare_build_engineering_and_equipment_center
    <set >
      <if test="planDetailsId != null" >
        plan_details_id = #{planDetailsId,jdbcType=INTEGER},
      </if>
      <if test="buildingConstructionPermitId != null" >
        building_construction_permit_id = #{buildingConstructionPermitId,jdbcType=INTEGER},
      </if>
      <if test="buildingPermitId != null" >
        building_permit_id = #{buildingPermitId,jdbcType=INTEGER},
      </if>
      <if test="landUsePermitId != null" >
        land_use_permit_id = #{landUsePermitId,jdbcType=INTEGER},
      </if>
      <if test="preSalePermitId != null" >
        pre_sale_permit_id = #{preSalePermitId,jdbcType=INTEGER},
      </if>
      <if test="landId != null" >
        land_id = #{landId,jdbcType=INTEGER},
      </if>
      <if test="houseId != null" >
        house_id = #{houseId,jdbcType=INTEGER},
      </if>
      <if test="indicatorId != null" >
        indicator_id = #{indicatorId,jdbcType=INTEGER},
      </if>
      <if test="realEstateId != null" >
        real_estate_id = #{realEstateId,jdbcType=INTEGER},
      </if>
      <if test="buildEngineeringId != null" >
        build_engineering_id = #{buildEngineeringId,jdbcType=INTEGER},
      </if>
      <if test="buildEquipmentId != null" >
        build_equipment_id = #{buildEquipmentId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="creator != null" >
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreated != null" >
        gmt_created = #{gmtCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null" >
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.copower.pmcc.assess.dal.basis.entity.DeclareBuildEngineeringAndEquipmentCenter" >
    update tb_declare_build_engineering_and_equipment_center
    set plan_details_id = #{planDetailsId,jdbcType=INTEGER},
      building_construction_permit_id = #{buildingConstructionPermitId,jdbcType=INTEGER},
      building_permit_id = #{buildingPermitId,jdbcType=INTEGER},
      land_use_permit_id = #{landUsePermitId,jdbcType=INTEGER},
      pre_sale_permit_id = #{preSalePermitId,jdbcType=INTEGER},
      land_id = #{landId,jdbcType=INTEGER},
      house_id = #{houseId,jdbcType=INTEGER},
      indicator_id = #{indicatorId,jdbcType=INTEGER},
      real_estate_id = #{realEstateId,jdbcType=INTEGER},
      build_engineering_id = #{buildEngineeringId,jdbcType=INTEGER},
      build_equipment_id = #{buildEquipmentId,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR},
      creator = #{creator,jdbcType=VARCHAR},
      gmt_created = #{gmtCreated,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>