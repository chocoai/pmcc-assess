<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.copower.pmcc.assess.dal.basis.mapper.DeclareRealtyCheckListMapper">
  <resultMap id="BaseResultMap" type="com.copower.pmcc.assess.dal.basis.entity.DeclareRealtyCheckList">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="auto_init_number" jdbcType="INTEGER" property="autoInitNumber" />
    <result column="marster_id" jdbcType="INTEGER" property="marsterId" />
    <result column="plan_details_id" jdbcType="INTEGER" property="planDetailsId" />
    <result column="district" jdbcType="VARCHAR" property="district" />
    <result column="street_number" jdbcType="VARCHAR" property="streetNumber" />
    <result column="house_number" jdbcType="VARCHAR" property="houseNumber" />
    <result column="attached_number" jdbcType="VARCHAR" property="attachedNumber" />
    <result column="building_number" jdbcType="VARCHAR" property="buildingNumber" />
    <result column="unit" jdbcType="VARCHAR" property="unit" />
    <result column="floor" jdbcType="VARCHAR" property="floor" />
    <result column="room_number" jdbcType="VARCHAR" property="roomNumber" />
    <result column="housing_structure" jdbcType="VARCHAR" property="housingStructure" />
    <result column="cert_use" jdbcType="VARCHAR" property="certUse" />
    <result column="floor_area" jdbcType="DECIMAL" property="floorArea" />
    <result column="apportionment_area" jdbcType="DECIMAL" property="apportionmentArea" />
    <result column="real_estate_unit_number" jdbcType="VARCHAR" property="realEstateUnitNumber" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="gmt_created" jdbcType="TIMESTAMP" property="gmtCreated" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, auto_init_number, marster_id, plan_details_id, district, street_number, house_number, 
    attached_number, building_number, unit, floor, room_number, housing_structure, cert_use, 
    floor_area, apportionment_area, real_estate_unit_number, creator, gmt_created, gmt_modified
  </sql>
  <select id="selectByExample" parameterType="com.copower.pmcc.assess.dal.basis.entity.DeclareRealtyCheckListExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_declare_realty_check_list
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_declare_realty_check_list
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_declare_realty_check_list
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.copower.pmcc.assess.dal.basis.entity.DeclareRealtyCheckListExample">
    delete from tb_declare_realty_check_list
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.copower.pmcc.assess.dal.basis.entity.DeclareRealtyCheckList">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_declare_realty_check_list (auto_init_number, marster_id, plan_details_id, 
      district, street_number, house_number, 
      attached_number, building_number, unit, 
      floor, room_number, housing_structure, 
      cert_use, floor_area, apportionment_area, 
      real_estate_unit_number, creator, gmt_created, 
      gmt_modified)
    values (#{autoInitNumber,jdbcType=INTEGER}, #{marsterId,jdbcType=INTEGER}, #{planDetailsId,jdbcType=INTEGER}, 
      #{district,jdbcType=VARCHAR}, #{streetNumber,jdbcType=VARCHAR}, #{houseNumber,jdbcType=VARCHAR}, 
      #{attachedNumber,jdbcType=VARCHAR}, #{buildingNumber,jdbcType=VARCHAR}, #{unit,jdbcType=VARCHAR}, 
      #{floor,jdbcType=VARCHAR}, #{roomNumber,jdbcType=VARCHAR}, #{housingStructure,jdbcType=VARCHAR}, 
      #{certUse,jdbcType=VARCHAR}, #{floorArea,jdbcType=DECIMAL}, #{apportionmentArea,jdbcType=DECIMAL}, 
      #{realEstateUnitNumber,jdbcType=VARCHAR}, #{creator,jdbcType=VARCHAR}, #{gmtCreated,jdbcType=TIMESTAMP}, 
      #{gmtModified,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="map">
    <selectKey keyProperty="record.id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_declare_realty_check_list
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.autoInitNumber != null">
            auto_init_number,
          </if>
          <if test="record.marsterId != null">
            marster_id,
          </if>
          <if test="record.planDetailsId != null">
            plan_details_id,
          </if>
          <if test="record.district != null">
            district,
          </if>
          <if test="record.streetNumber != null">
            street_number,
          </if>
          <if test="record.houseNumber != null">
            house_number,
          </if>
          <if test="record.attachedNumber != null">
            attached_number,
          </if>
          <if test="record.buildingNumber != null">
            building_number,
          </if>
          <if test="record.unit != null">
            unit,
          </if>
          <if test="record.floor != null">
            floor,
          </if>
          <if test="record.roomNumber != null">
            room_number,
          </if>
          <if test="record.housingStructure != null">
            housing_structure,
          </if>
          <if test="record.certUse != null">
            cert_use,
          </if>
          <if test="record.floorArea != null">
            floor_area,
          </if>
          <if test="record.apportionmentArea != null">
            apportionment_area,
          </if>
          <if test="record.realEstateUnitNumber != null">
            real_estate_unit_number,
          </if>
          <if test="record.creator != null">
            creator,
          </if>
          <if test="record.gmtCreated != null">
            gmt_created,
          </if>
          <if test="record.gmtModified != null">
            gmt_modified,
          </if>
        </trim>
        <trim prefix="(" suffix=")" suffixOverrides="," />
      </otherwise>
    </choose>
    values
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.autoInitNumber != null">
            #{record.autoInitNumber,jdbcType=INTEGER},
          </if>
          <if test="record.marsterId != null">
            #{record.marsterId,jdbcType=INTEGER},
          </if>
          <if test="record.planDetailsId != null">
            #{record.planDetailsId,jdbcType=INTEGER},
          </if>
          <if test="record.district != null">
            #{record.district,jdbcType=VARCHAR},
          </if>
          <if test="record.streetNumber != null">
            #{record.streetNumber,jdbcType=VARCHAR},
          </if>
          <if test="record.houseNumber != null">
            #{record.houseNumber,jdbcType=VARCHAR},
          </if>
          <if test="record.attachedNumber != null">
            #{record.attachedNumber,jdbcType=VARCHAR},
          </if>
          <if test="record.buildingNumber != null">
            #{record.buildingNumber,jdbcType=VARCHAR},
          </if>
          <if test="record.unit != null">
            #{record.unit,jdbcType=VARCHAR},
          </if>
          <if test="record.floor != null">
            #{record.floor,jdbcType=VARCHAR},
          </if>
          <if test="record.roomNumber != null">
            #{record.roomNumber,jdbcType=VARCHAR},
          </if>
          <if test="record.housingStructure != null">
            #{record.housingStructure,jdbcType=VARCHAR},
          </if>
          <if test="record.certUse != null">
            #{record.certUse,jdbcType=VARCHAR},
          </if>
          <if test="record.floorArea != null">
            #{record.floorArea,jdbcType=DECIMAL},
          </if>
          <if test="record.apportionmentArea != null">
            #{record.apportionmentArea,jdbcType=DECIMAL},
          </if>
          <if test="record.realEstateUnitNumber != null">
            #{record.realEstateUnitNumber,jdbcType=VARCHAR},
          </if>
          <if test="record.creator != null">
            #{record.creator,jdbcType=VARCHAR},
          </if>
          <if test="record.gmtCreated != null">
            #{record.gmtCreated,jdbcType=TIMESTAMP},
          </if>
          <if test="record.gmtModified != null">
            #{record.gmtModified,jdbcType=TIMESTAMP},
          </if>
        </trim>
      </otherwise>
    </choose>
  </insert>
  <select id="countByExample" parameterType="com.copower.pmcc.assess.dal.basis.entity.DeclareRealtyCheckListExample" resultType="java.lang.Long">
    select count(*) from tb_declare_realty_check_list
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_declare_realty_check_list
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.id != null">
            id = #{record.id,jdbcType=INTEGER},
          </if>
          <if test="record.autoInitNumber != null">
            auto_init_number = #{record.autoInitNumber,jdbcType=INTEGER},
          </if>
          <if test="record.marsterId != null">
            marster_id = #{record.marsterId,jdbcType=INTEGER},
          </if>
          <if test="record.planDetailsId != null">
            plan_details_id = #{record.planDetailsId,jdbcType=INTEGER},
          </if>
          <if test="record.district != null">
            district = #{record.district,jdbcType=VARCHAR},
          </if>
          <if test="record.streetNumber != null">
            street_number = #{record.streetNumber,jdbcType=VARCHAR},
          </if>
          <if test="record.houseNumber != null">
            house_number = #{record.houseNumber,jdbcType=VARCHAR},
          </if>
          <if test="record.attachedNumber != null">
            attached_number = #{record.attachedNumber,jdbcType=VARCHAR},
          </if>
          <if test="record.buildingNumber != null">
            building_number = #{record.buildingNumber,jdbcType=VARCHAR},
          </if>
          <if test="record.unit != null">
            unit = #{record.unit,jdbcType=VARCHAR},
          </if>
          <if test="record.floor != null">
            floor = #{record.floor,jdbcType=VARCHAR},
          </if>
          <if test="record.roomNumber != null">
            room_number = #{record.roomNumber,jdbcType=VARCHAR},
          </if>
          <if test="record.housingStructure != null">
            housing_structure = #{record.housingStructure,jdbcType=VARCHAR},
          </if>
          <if test="record.certUse != null">
            cert_use = #{record.certUse,jdbcType=VARCHAR},
          </if>
          <if test="record.floorArea != null">
            floor_area = #{record.floorArea,jdbcType=DECIMAL},
          </if>
          <if test="record.apportionmentArea != null">
            apportionment_area = #{record.apportionmentArea,jdbcType=DECIMAL},
          </if>
          <if test="record.realEstateUnitNumber != null">
            real_estate_unit_number = #{record.realEstateUnitNumber,jdbcType=VARCHAR},
          </if>
          <if test="record.creator != null">
            creator = #{record.creator,jdbcType=VARCHAR},
          </if>
          <if test="record.gmtCreated != null">
            gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
          </if>
          <if test="record.gmtModified != null">
            gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
          </if>
        </trim>
      </otherwise>
    </choose>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_declare_realty_check_list
    set id = #{record.id,jdbcType=INTEGER},
      auto_init_number = #{record.autoInitNumber,jdbcType=INTEGER},
      marster_id = #{record.marsterId,jdbcType=INTEGER},
      plan_details_id = #{record.planDetailsId,jdbcType=INTEGER},
      district = #{record.district,jdbcType=VARCHAR},
      street_number = #{record.streetNumber,jdbcType=VARCHAR},
      house_number = #{record.houseNumber,jdbcType=VARCHAR},
      attached_number = #{record.attachedNumber,jdbcType=VARCHAR},
      building_number = #{record.buildingNumber,jdbcType=VARCHAR},
      unit = #{record.unit,jdbcType=VARCHAR},
      floor = #{record.floor,jdbcType=VARCHAR},
      room_number = #{record.roomNumber,jdbcType=VARCHAR},
      housing_structure = #{record.housingStructure,jdbcType=VARCHAR},
      cert_use = #{record.certUse,jdbcType=VARCHAR},
      floor_area = #{record.floorArea,jdbcType=DECIMAL},
      apportionment_area = #{record.apportionmentArea,jdbcType=DECIMAL},
      real_estate_unit_number = #{record.realEstateUnitNumber,jdbcType=VARCHAR},
      creator = #{record.creator,jdbcType=VARCHAR},
      gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="map">
    update tb_declare_realty_check_list
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.autoInitNumber != null">
            auto_init_number = #{record.autoInitNumber,jdbcType=INTEGER},
          </if>
          <if test="record.marsterId != null">
            marster_id = #{record.marsterId,jdbcType=INTEGER},
          </if>
          <if test="record.planDetailsId != null">
            plan_details_id = #{record.planDetailsId,jdbcType=INTEGER},
          </if>
          <if test="record.district != null">
            district = #{record.district,jdbcType=VARCHAR},
          </if>
          <if test="record.streetNumber != null">
            street_number = #{record.streetNumber,jdbcType=VARCHAR},
          </if>
          <if test="record.houseNumber != null">
            house_number = #{record.houseNumber,jdbcType=VARCHAR},
          </if>
          <if test="record.attachedNumber != null">
            attached_number = #{record.attachedNumber,jdbcType=VARCHAR},
          </if>
          <if test="record.buildingNumber != null">
            building_number = #{record.buildingNumber,jdbcType=VARCHAR},
          </if>
          <if test="record.unit != null">
            unit = #{record.unit,jdbcType=VARCHAR},
          </if>
          <if test="record.floor != null">
            floor = #{record.floor,jdbcType=VARCHAR},
          </if>
          <if test="record.roomNumber != null">
            room_number = #{record.roomNumber,jdbcType=VARCHAR},
          </if>
          <if test="record.housingStructure != null">
            housing_structure = #{record.housingStructure,jdbcType=VARCHAR},
          </if>
          <if test="record.certUse != null">
            cert_use = #{record.certUse,jdbcType=VARCHAR},
          </if>
          <if test="record.floorArea != null">
            floor_area = #{record.floorArea,jdbcType=DECIMAL},
          </if>
          <if test="record.apportionmentArea != null">
            apportionment_area = #{record.apportionmentArea,jdbcType=DECIMAL},
          </if>
          <if test="record.realEstateUnitNumber != null">
            real_estate_unit_number = #{record.realEstateUnitNumber,jdbcType=VARCHAR},
          </if>
          <if test="record.creator != null">
            creator = #{record.creator,jdbcType=VARCHAR},
          </if>
          <if test="record.gmtCreated != null">
            gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
          </if>
          <if test="record.gmtModified != null">
            gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
          </if>
        </trim>
      </otherwise>
    </choose>
    where id = #{record.id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.copower.pmcc.assess.dal.basis.entity.DeclareRealtyCheckList">
    update tb_declare_realty_check_list
    set auto_init_number = #{autoInitNumber,jdbcType=INTEGER},
      marster_id = #{marsterId,jdbcType=INTEGER},
      plan_details_id = #{planDetailsId,jdbcType=INTEGER},
      district = #{district,jdbcType=VARCHAR},
      street_number = #{streetNumber,jdbcType=VARCHAR},
      house_number = #{houseNumber,jdbcType=VARCHAR},
      attached_number = #{attachedNumber,jdbcType=VARCHAR},
      building_number = #{buildingNumber,jdbcType=VARCHAR},
      unit = #{unit,jdbcType=VARCHAR},
      floor = #{floor,jdbcType=VARCHAR},
      room_number = #{roomNumber,jdbcType=VARCHAR},
      housing_structure = #{housingStructure,jdbcType=VARCHAR},
      cert_use = #{certUse,jdbcType=VARCHAR},
      floor_area = #{floorArea,jdbcType=DECIMAL},
      apportionment_area = #{apportionmentArea,jdbcType=DECIMAL},
      real_estate_unit_number = #{realEstateUnitNumber,jdbcType=VARCHAR},
      creator = #{creator,jdbcType=VARCHAR},
      gmt_created = #{gmtCreated,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    insert into tb_declare_realty_check_list
    (auto_init_number, marster_id, plan_details_id, district, street_number, house_number, 
      attached_number, building_number, unit, floor, room_number, housing_structure, 
      cert_use, floor_area, apportionment_area, real_estate_unit_number, creator, gmt_created, 
      gmt_modified)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.autoInitNumber,jdbcType=INTEGER}, #{item.marsterId,jdbcType=INTEGER}, #{item.planDetailsId,jdbcType=INTEGER}, 
        #{item.district,jdbcType=VARCHAR}, #{item.streetNumber,jdbcType=VARCHAR}, #{item.houseNumber,jdbcType=VARCHAR}, 
        #{item.attachedNumber,jdbcType=VARCHAR}, #{item.buildingNumber,jdbcType=VARCHAR}, 
        #{item.unit,jdbcType=VARCHAR}, #{item.floor,jdbcType=VARCHAR}, #{item.roomNumber,jdbcType=VARCHAR}, 
        #{item.housingStructure,jdbcType=VARCHAR}, #{item.certUse,jdbcType=VARCHAR}, #{item.floorArea,jdbcType=DECIMAL}, 
        #{item.apportionmentArea,jdbcType=DECIMAL}, #{item.realEstateUnitNumber,jdbcType=VARCHAR}, 
        #{item.creator,jdbcType=VARCHAR}, #{item.gmtCreated,jdbcType=TIMESTAMP}, #{item.gmtModified,jdbcType=TIMESTAMP}
        )
    </foreach>
  </insert>
  <insert id="batchInsertSelective" keyColumn="id" keyProperty="list.id" parameterType="map" useGeneratedKeys="true">
    insert into tb_declare_realty_check_list (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'auto_init_number'.toString() == column.value">
          #{item.autoInitNumber,jdbcType=INTEGER}
        </if>
        <if test="'marster_id'.toString() == column.value">
          #{item.marsterId,jdbcType=INTEGER}
        </if>
        <if test="'plan_details_id'.toString() == column.value">
          #{item.planDetailsId,jdbcType=INTEGER}
        </if>
        <if test="'district'.toString() == column.value">
          #{item.district,jdbcType=VARCHAR}
        </if>
        <if test="'street_number'.toString() == column.value">
          #{item.streetNumber,jdbcType=VARCHAR}
        </if>
        <if test="'house_number'.toString() == column.value">
          #{item.houseNumber,jdbcType=VARCHAR}
        </if>
        <if test="'attached_number'.toString() == column.value">
          #{item.attachedNumber,jdbcType=VARCHAR}
        </if>
        <if test="'building_number'.toString() == column.value">
          #{item.buildingNumber,jdbcType=VARCHAR}
        </if>
        <if test="'unit'.toString() == column.value">
          #{item.unit,jdbcType=VARCHAR}
        </if>
        <if test="'floor'.toString() == column.value">
          #{item.floor,jdbcType=VARCHAR}
        </if>
        <if test="'room_number'.toString() == column.value">
          #{item.roomNumber,jdbcType=VARCHAR}
        </if>
        <if test="'housing_structure'.toString() == column.value">
          #{item.housingStructure,jdbcType=VARCHAR}
        </if>
        <if test="'cert_use'.toString() == column.value">
          #{item.certUse,jdbcType=VARCHAR}
        </if>
        <if test="'floor_area'.toString() == column.value">
          #{item.floorArea,jdbcType=DECIMAL}
        </if>
        <if test="'apportionment_area'.toString() == column.value">
          #{item.apportionmentArea,jdbcType=DECIMAL}
        </if>
        <if test="'real_estate_unit_number'.toString() == column.value">
          #{item.realEstateUnitNumber,jdbcType=VARCHAR}
        </if>
        <if test="'creator'.toString() == column.value">
          #{item.creator,jdbcType=VARCHAR}
        </if>
        <if test="'gmt_created'.toString() == column.value">
          #{item.gmtCreated,jdbcType=TIMESTAMP}
        </if>
        <if test="'gmt_modified'.toString() == column.value">
          #{item.gmtModified,jdbcType=TIMESTAMP}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>