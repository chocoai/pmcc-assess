<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.copower.pmcc.assess.dal.basis.mapper.DeclareBuildingConstructionPermitMapper">
  <resultMap id="BaseResultMap" type="com.copower.pmcc.assess.dal.basis.entity.DeclareBuildingConstructionPermit">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="plan_details_id" jdbcType="INTEGER" property="planDetailsId" />
    <result column="certificate_number" jdbcType="VARCHAR" property="certificateNumber" />
    <result column="issuing_organ" jdbcType="VARCHAR" property="issuingOrgan" />
    <result column="date" jdbcType="TIMESTAMP" property="date" />
    <result column="build_unit" jdbcType="VARCHAR" property="buildUnit" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="build_address" jdbcType="VARCHAR" property="buildAddress" />
    <result column="scale_construction" jdbcType="VARCHAR" property="scaleConstruction" />
    <result column="reconnaissance_unit" jdbcType="VARCHAR" property="reconnaissanceUnit" />
    <result column="design_unit" jdbcType="VARCHAR" property="designUnit" />
    <result column="construction_unit" jdbcType="VARCHAR" property="constructionUnit" />
    <result column="construction_control_unit" jdbcType="VARCHAR" property="constructionControlUnit" />
    <result column="reconnaissance_unit_person" jdbcType="VARCHAR" property="reconnaissanceUnitPerson" />
    <result column="design_unit_person" jdbcType="VARCHAR" property="designUnitPerson" />
    <result column="construction_unit_person" jdbcType="VARCHAR" property="constructionUnitPerson" />
    <result column="chief_engineer_construction_inspection" jdbcType="VARCHAR" property="chiefEngineerConstructionInspection" />
    <result column="contract_period" jdbcType="TIMESTAMP" property="contractPeriod" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="gmt_created" jdbcType="TIMESTAMP" property="gmtCreated" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
    <result column="master_id" jdbcType="INTEGER" property="masterId" />
    <result column="master_type" jdbcType="VARCHAR" property="masterType" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, plan_details_id, certificate_number, issuing_organ, date, build_unit, name, build_address, 
    scale_construction, reconnaissance_unit, design_unit, construction_unit, construction_control_unit, 
    reconnaissance_unit_person, design_unit_person, construction_unit_person, chief_engineer_construction_inspection, 
    contract_period, remark, creator, gmt_created, gmt_modified, master_id, master_type
  </sql>
  <select id="selectByExample" parameterType="com.copower.pmcc.assess.dal.basis.entity.DeclareBuildingConstructionPermitExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_declare_building_construction_permit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_declare_building_construction_permit
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_declare_building_construction_permit
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.copower.pmcc.assess.dal.basis.entity.DeclareBuildingConstructionPermitExample">
    delete from tb_declare_building_construction_permit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.copower.pmcc.assess.dal.basis.entity.DeclareBuildingConstructionPermit">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_declare_building_construction_permit (plan_details_id, certificate_number, 
      issuing_organ, date, build_unit, 
      name, build_address, scale_construction, 
      reconnaissance_unit, design_unit, construction_unit, 
      construction_control_unit, reconnaissance_unit_person, 
      design_unit_person, construction_unit_person, 
      chief_engineer_construction_inspection, contract_period, 
      remark, creator, gmt_created, 
      gmt_modified, master_id, master_type
      )
    values (#{planDetailsId,jdbcType=INTEGER}, #{certificateNumber,jdbcType=VARCHAR}, 
      #{issuingOrgan,jdbcType=VARCHAR}, #{date,jdbcType=TIMESTAMP}, #{buildUnit,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{buildAddress,jdbcType=VARCHAR}, #{scaleConstruction,jdbcType=VARCHAR}, 
      #{reconnaissanceUnit,jdbcType=VARCHAR}, #{designUnit,jdbcType=VARCHAR}, #{constructionUnit,jdbcType=VARCHAR}, 
      #{constructionControlUnit,jdbcType=VARCHAR}, #{reconnaissanceUnitPerson,jdbcType=VARCHAR}, 
      #{designUnitPerson,jdbcType=VARCHAR}, #{constructionUnitPerson,jdbcType=VARCHAR}, 
      #{chiefEngineerConstructionInspection,jdbcType=VARCHAR}, #{contractPeriod,jdbcType=TIMESTAMP}, 
      #{remark,jdbcType=VARCHAR}, #{creator,jdbcType=VARCHAR}, #{gmtCreated,jdbcType=TIMESTAMP}, 
      #{gmtModified,jdbcType=TIMESTAMP}, #{masterId,jdbcType=INTEGER}, #{masterType,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="map">
    <selectKey keyProperty="record.id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_declare_building_construction_permit
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.planDetailsId != null">
            plan_details_id,
          </if>
          <if test="record.certificateNumber != null">
            certificate_number,
          </if>
          <if test="record.issuingOrgan != null">
            issuing_organ,
          </if>
          <if test="record.date != null">
            date,
          </if>
          <if test="record.buildUnit != null">
            build_unit,
          </if>
          <if test="record.name != null">
            name,
          </if>
          <if test="record.buildAddress != null">
            build_address,
          </if>
          <if test="record.scaleConstruction != null">
            scale_construction,
          </if>
          <if test="record.reconnaissanceUnit != null">
            reconnaissance_unit,
          </if>
          <if test="record.designUnit != null">
            design_unit,
          </if>
          <if test="record.constructionUnit != null">
            construction_unit,
          </if>
          <if test="record.constructionControlUnit != null">
            construction_control_unit,
          </if>
          <if test="record.reconnaissanceUnitPerson != null">
            reconnaissance_unit_person,
          </if>
          <if test="record.designUnitPerson != null">
            design_unit_person,
          </if>
          <if test="record.constructionUnitPerson != null">
            construction_unit_person,
          </if>
          <if test="record.chiefEngineerConstructionInspection != null">
            chief_engineer_construction_inspection,
          </if>
          <if test="record.contractPeriod != null">
            contract_period,
          </if>
          <if test="record.remark != null">
            remark,
          </if>
          <if test="record.creator != null">
            creator,
          </if>
          <if test="record.gmtCreated != null">
            gmt_created,
          </if>
          <if test="record.gmtModified != null">
            gmt_modified,
          </if>
          <if test="record.masterId != null">
            master_id,
          </if>
          <if test="record.masterType != null">
            master_type,
          </if>
        </trim>
        <trim prefix="(" suffix=")" suffixOverrides="," />
      </otherwise>
    </choose>
    values
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.planDetailsId != null">
            #{record.planDetailsId,jdbcType=INTEGER},
          </if>
          <if test="record.certificateNumber != null">
            #{record.certificateNumber,jdbcType=VARCHAR},
          </if>
          <if test="record.issuingOrgan != null">
            #{record.issuingOrgan,jdbcType=VARCHAR},
          </if>
          <if test="record.date != null">
            #{record.date,jdbcType=TIMESTAMP},
          </if>
          <if test="record.buildUnit != null">
            #{record.buildUnit,jdbcType=VARCHAR},
          </if>
          <if test="record.name != null">
            #{record.name,jdbcType=VARCHAR},
          </if>
          <if test="record.buildAddress != null">
            #{record.buildAddress,jdbcType=VARCHAR},
          </if>
          <if test="record.scaleConstruction != null">
            #{record.scaleConstruction,jdbcType=VARCHAR},
          </if>
          <if test="record.reconnaissanceUnit != null">
            #{record.reconnaissanceUnit,jdbcType=VARCHAR},
          </if>
          <if test="record.designUnit != null">
            #{record.designUnit,jdbcType=VARCHAR},
          </if>
          <if test="record.constructionUnit != null">
            #{record.constructionUnit,jdbcType=VARCHAR},
          </if>
          <if test="record.constructionControlUnit != null">
            #{record.constructionControlUnit,jdbcType=VARCHAR},
          </if>
          <if test="record.reconnaissanceUnitPerson != null">
            #{record.reconnaissanceUnitPerson,jdbcType=VARCHAR},
          </if>
          <if test="record.designUnitPerson != null">
            #{record.designUnitPerson,jdbcType=VARCHAR},
          </if>
          <if test="record.constructionUnitPerson != null">
            #{record.constructionUnitPerson,jdbcType=VARCHAR},
          </if>
          <if test="record.chiefEngineerConstructionInspection != null">
            #{record.chiefEngineerConstructionInspection,jdbcType=VARCHAR},
          </if>
          <if test="record.contractPeriod != null">
            #{record.contractPeriod,jdbcType=TIMESTAMP},
          </if>
          <if test="record.remark != null">
            #{record.remark,jdbcType=VARCHAR},
          </if>
          <if test="record.creator != null">
            #{record.creator,jdbcType=VARCHAR},
          </if>
          <if test="record.gmtCreated != null">
            #{record.gmtCreated,jdbcType=TIMESTAMP},
          </if>
          <if test="record.gmtModified != null">
            #{record.gmtModified,jdbcType=TIMESTAMP},
          </if>
          <if test="record.masterId != null">
            #{record.masterId,jdbcType=INTEGER},
          </if>
          <if test="record.masterType != null">
            #{record.masterType,jdbcType=VARCHAR},
          </if>
        </trim>
      </otherwise>
    </choose>
  </insert>
  <select id="countByExample" parameterType="com.copower.pmcc.assess.dal.basis.entity.DeclareBuildingConstructionPermitExample" resultType="java.lang.Long">
    select count(*) from tb_declare_building_construction_permit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_declare_building_construction_permit
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.id != null">
            id = #{record.id,jdbcType=INTEGER},
          </if>
          <if test="record.planDetailsId != null">
            plan_details_id = #{record.planDetailsId,jdbcType=INTEGER},
          </if>
          <if test="record.certificateNumber != null">
            certificate_number = #{record.certificateNumber,jdbcType=VARCHAR},
          </if>
          <if test="record.issuingOrgan != null">
            issuing_organ = #{record.issuingOrgan,jdbcType=VARCHAR},
          </if>
          <if test="record.date != null">
            date = #{record.date,jdbcType=TIMESTAMP},
          </if>
          <if test="record.buildUnit != null">
            build_unit = #{record.buildUnit,jdbcType=VARCHAR},
          </if>
          <if test="record.name != null">
            name = #{record.name,jdbcType=VARCHAR},
          </if>
          <if test="record.buildAddress != null">
            build_address = #{record.buildAddress,jdbcType=VARCHAR},
          </if>
          <if test="record.scaleConstruction != null">
            scale_construction = #{record.scaleConstruction,jdbcType=VARCHAR},
          </if>
          <if test="record.reconnaissanceUnit != null">
            reconnaissance_unit = #{record.reconnaissanceUnit,jdbcType=VARCHAR},
          </if>
          <if test="record.designUnit != null">
            design_unit = #{record.designUnit,jdbcType=VARCHAR},
          </if>
          <if test="record.constructionUnit != null">
            construction_unit = #{record.constructionUnit,jdbcType=VARCHAR},
          </if>
          <if test="record.constructionControlUnit != null">
            construction_control_unit = #{record.constructionControlUnit,jdbcType=VARCHAR},
          </if>
          <if test="record.reconnaissanceUnitPerson != null">
            reconnaissance_unit_person = #{record.reconnaissanceUnitPerson,jdbcType=VARCHAR},
          </if>
          <if test="record.designUnitPerson != null">
            design_unit_person = #{record.designUnitPerson,jdbcType=VARCHAR},
          </if>
          <if test="record.constructionUnitPerson != null">
            construction_unit_person = #{record.constructionUnitPerson,jdbcType=VARCHAR},
          </if>
          <if test="record.chiefEngineerConstructionInspection != null">
            chief_engineer_construction_inspection = #{record.chiefEngineerConstructionInspection,jdbcType=VARCHAR},
          </if>
          <if test="record.contractPeriod != null">
            contract_period = #{record.contractPeriod,jdbcType=TIMESTAMP},
          </if>
          <if test="record.remark != null">
            remark = #{record.remark,jdbcType=VARCHAR},
          </if>
          <if test="record.creator != null">
            creator = #{record.creator,jdbcType=VARCHAR},
          </if>
          <if test="record.gmtCreated != null">
            gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
          </if>
          <if test="record.gmtModified != null">
            gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
          </if>
          <if test="record.masterId != null">
            master_id = #{record.masterId,jdbcType=INTEGER},
          </if>
          <if test="record.masterType != null">
            master_type = #{record.masterType,jdbcType=VARCHAR},
          </if>
        </trim>
      </otherwise>
    </choose>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_declare_building_construction_permit
    set id = #{record.id,jdbcType=INTEGER},
      plan_details_id = #{record.planDetailsId,jdbcType=INTEGER},
      certificate_number = #{record.certificateNumber,jdbcType=VARCHAR},
      issuing_organ = #{record.issuingOrgan,jdbcType=VARCHAR},
      date = #{record.date,jdbcType=TIMESTAMP},
      build_unit = #{record.buildUnit,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      build_address = #{record.buildAddress,jdbcType=VARCHAR},
      scale_construction = #{record.scaleConstruction,jdbcType=VARCHAR},
      reconnaissance_unit = #{record.reconnaissanceUnit,jdbcType=VARCHAR},
      design_unit = #{record.designUnit,jdbcType=VARCHAR},
      construction_unit = #{record.constructionUnit,jdbcType=VARCHAR},
      construction_control_unit = #{record.constructionControlUnit,jdbcType=VARCHAR},
      reconnaissance_unit_person = #{record.reconnaissanceUnitPerson,jdbcType=VARCHAR},
      design_unit_person = #{record.designUnitPerson,jdbcType=VARCHAR},
      construction_unit_person = #{record.constructionUnitPerson,jdbcType=VARCHAR},
      chief_engineer_construction_inspection = #{record.chiefEngineerConstructionInspection,jdbcType=VARCHAR},
      contract_period = #{record.contractPeriod,jdbcType=TIMESTAMP},
      remark = #{record.remark,jdbcType=VARCHAR},
      creator = #{record.creator,jdbcType=VARCHAR},
      gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      master_id = #{record.masterId,jdbcType=INTEGER},
      master_type = #{record.masterType,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="map">
    update tb_declare_building_construction_permit
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.planDetailsId != null">
            plan_details_id = #{record.planDetailsId,jdbcType=INTEGER},
          </if>
          <if test="record.certificateNumber != null">
            certificate_number = #{record.certificateNumber,jdbcType=VARCHAR},
          </if>
          <if test="record.issuingOrgan != null">
            issuing_organ = #{record.issuingOrgan,jdbcType=VARCHAR},
          </if>
          <if test="record.date != null">
            date = #{record.date,jdbcType=TIMESTAMP},
          </if>
          <if test="record.buildUnit != null">
            build_unit = #{record.buildUnit,jdbcType=VARCHAR},
          </if>
          <if test="record.name != null">
            name = #{record.name,jdbcType=VARCHAR},
          </if>
          <if test="record.buildAddress != null">
            build_address = #{record.buildAddress,jdbcType=VARCHAR},
          </if>
          <if test="record.scaleConstruction != null">
            scale_construction = #{record.scaleConstruction,jdbcType=VARCHAR},
          </if>
          <if test="record.reconnaissanceUnit != null">
            reconnaissance_unit = #{record.reconnaissanceUnit,jdbcType=VARCHAR},
          </if>
          <if test="record.designUnit != null">
            design_unit = #{record.designUnit,jdbcType=VARCHAR},
          </if>
          <if test="record.constructionUnit != null">
            construction_unit = #{record.constructionUnit,jdbcType=VARCHAR},
          </if>
          <if test="record.constructionControlUnit != null">
            construction_control_unit = #{record.constructionControlUnit,jdbcType=VARCHAR},
          </if>
          <if test="record.reconnaissanceUnitPerson != null">
            reconnaissance_unit_person = #{record.reconnaissanceUnitPerson,jdbcType=VARCHAR},
          </if>
          <if test="record.designUnitPerson != null">
            design_unit_person = #{record.designUnitPerson,jdbcType=VARCHAR},
          </if>
          <if test="record.constructionUnitPerson != null">
            construction_unit_person = #{record.constructionUnitPerson,jdbcType=VARCHAR},
          </if>
          <if test="record.chiefEngineerConstructionInspection != null">
            chief_engineer_construction_inspection = #{record.chiefEngineerConstructionInspection,jdbcType=VARCHAR},
          </if>
          <if test="record.contractPeriod != null">
            contract_period = #{record.contractPeriod,jdbcType=TIMESTAMP},
          </if>
          <if test="record.remark != null">
            remark = #{record.remark,jdbcType=VARCHAR},
          </if>
          <if test="record.creator != null">
            creator = #{record.creator,jdbcType=VARCHAR},
          </if>
          <if test="record.gmtCreated != null">
            gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
          </if>
          <if test="record.gmtModified != null">
            gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
          </if>
          <if test="record.masterId != null">
            master_id = #{record.masterId,jdbcType=INTEGER},
          </if>
          <if test="record.masterType != null">
            master_type = #{record.masterType,jdbcType=VARCHAR},
          </if>
        </trim>
      </otherwise>
    </choose>
    where id = #{record.id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.copower.pmcc.assess.dal.basis.entity.DeclareBuildingConstructionPermit">
    update tb_declare_building_construction_permit
    set plan_details_id = #{planDetailsId,jdbcType=INTEGER},
      certificate_number = #{certificateNumber,jdbcType=VARCHAR},
      issuing_organ = #{issuingOrgan,jdbcType=VARCHAR},
      date = #{date,jdbcType=TIMESTAMP},
      build_unit = #{buildUnit,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      build_address = #{buildAddress,jdbcType=VARCHAR},
      scale_construction = #{scaleConstruction,jdbcType=VARCHAR},
      reconnaissance_unit = #{reconnaissanceUnit,jdbcType=VARCHAR},
      design_unit = #{designUnit,jdbcType=VARCHAR},
      construction_unit = #{constructionUnit,jdbcType=VARCHAR},
      construction_control_unit = #{constructionControlUnit,jdbcType=VARCHAR},
      reconnaissance_unit_person = #{reconnaissanceUnitPerson,jdbcType=VARCHAR},
      design_unit_person = #{designUnitPerson,jdbcType=VARCHAR},
      construction_unit_person = #{constructionUnitPerson,jdbcType=VARCHAR},
      chief_engineer_construction_inspection = #{chiefEngineerConstructionInspection,jdbcType=VARCHAR},
      contract_period = #{contractPeriod,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR},
      creator = #{creator,jdbcType=VARCHAR},
      gmt_created = #{gmtCreated,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      master_id = #{masterId,jdbcType=INTEGER},
      master_type = #{masterType,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    insert into tb_declare_building_construction_permit
    (plan_details_id, certificate_number, issuing_organ, date, build_unit, name, build_address, 
      scale_construction, reconnaissance_unit, design_unit, construction_unit, construction_control_unit, 
      reconnaissance_unit_person, design_unit_person, construction_unit_person, chief_engineer_construction_inspection, 
      contract_period, remark, creator, gmt_created, gmt_modified, master_id, master_type
      )
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.planDetailsId,jdbcType=INTEGER}, #{item.certificateNumber,jdbcType=VARCHAR}, 
        #{item.issuingOrgan,jdbcType=VARCHAR}, #{item.date,jdbcType=TIMESTAMP}, #{item.buildUnit,jdbcType=VARCHAR}, 
        #{item.name,jdbcType=VARCHAR}, #{item.buildAddress,jdbcType=VARCHAR}, #{item.scaleConstruction,jdbcType=VARCHAR}, 
        #{item.reconnaissanceUnit,jdbcType=VARCHAR}, #{item.designUnit,jdbcType=VARCHAR}, 
        #{item.constructionUnit,jdbcType=VARCHAR}, #{item.constructionControlUnit,jdbcType=VARCHAR}, 
        #{item.reconnaissanceUnitPerson,jdbcType=VARCHAR}, #{item.designUnitPerson,jdbcType=VARCHAR}, 
        #{item.constructionUnitPerson,jdbcType=VARCHAR}, #{item.chiefEngineerConstructionInspection,jdbcType=VARCHAR}, 
        #{item.contractPeriod,jdbcType=TIMESTAMP}, #{item.remark,jdbcType=VARCHAR}, #{item.creator,jdbcType=VARCHAR}, 
        #{item.gmtCreated,jdbcType=TIMESTAMP}, #{item.gmtModified,jdbcType=TIMESTAMP}, 
        #{item.masterId,jdbcType=INTEGER}, #{item.masterType,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" keyColumn="id" keyProperty="list.id" parameterType="map" useGeneratedKeys="true">
    insert into tb_declare_building_construction_permit (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'plan_details_id'.toString() == column.value">
          #{item.planDetailsId,jdbcType=INTEGER}
        </if>
        <if test="'certificate_number'.toString() == column.value">
          #{item.certificateNumber,jdbcType=VARCHAR}
        </if>
        <if test="'issuing_organ'.toString() == column.value">
          #{item.issuingOrgan,jdbcType=VARCHAR}
        </if>
        <if test="'date'.toString() == column.value">
          #{item.date,jdbcType=TIMESTAMP}
        </if>
        <if test="'build_unit'.toString() == column.value">
          #{item.buildUnit,jdbcType=VARCHAR}
        </if>
        <if test="'name'.toString() == column.value">
          #{item.name,jdbcType=VARCHAR}
        </if>
        <if test="'build_address'.toString() == column.value">
          #{item.buildAddress,jdbcType=VARCHAR}
        </if>
        <if test="'scale_construction'.toString() == column.value">
          #{item.scaleConstruction,jdbcType=VARCHAR}
        </if>
        <if test="'reconnaissance_unit'.toString() == column.value">
          #{item.reconnaissanceUnit,jdbcType=VARCHAR}
        </if>
        <if test="'design_unit'.toString() == column.value">
          #{item.designUnit,jdbcType=VARCHAR}
        </if>
        <if test="'construction_unit'.toString() == column.value">
          #{item.constructionUnit,jdbcType=VARCHAR}
        </if>
        <if test="'construction_control_unit'.toString() == column.value">
          #{item.constructionControlUnit,jdbcType=VARCHAR}
        </if>
        <if test="'reconnaissance_unit_person'.toString() == column.value">
          #{item.reconnaissanceUnitPerson,jdbcType=VARCHAR}
        </if>
        <if test="'design_unit_person'.toString() == column.value">
          #{item.designUnitPerson,jdbcType=VARCHAR}
        </if>
        <if test="'construction_unit_person'.toString() == column.value">
          #{item.constructionUnitPerson,jdbcType=VARCHAR}
        </if>
        <if test="'chief_engineer_construction_inspection'.toString() == column.value">
          #{item.chiefEngineerConstructionInspection,jdbcType=VARCHAR}
        </if>
        <if test="'contract_period'.toString() == column.value">
          #{item.contractPeriod,jdbcType=TIMESTAMP}
        </if>
        <if test="'remark'.toString() == column.value">
          #{item.remark,jdbcType=VARCHAR}
        </if>
        <if test="'creator'.toString() == column.value">
          #{item.creator,jdbcType=VARCHAR}
        </if>
        <if test="'gmt_created'.toString() == column.value">
          #{item.gmtCreated,jdbcType=TIMESTAMP}
        </if>
        <if test="'gmt_modified'.toString() == column.value">
          #{item.gmtModified,jdbcType=TIMESTAMP}
        </if>
        <if test="'master_id'.toString() == column.value">
          #{item.masterId,jdbcType=INTEGER}
        </if>
        <if test="'master_type'.toString() == column.value">
          #{item.masterType,jdbcType=VARCHAR}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>