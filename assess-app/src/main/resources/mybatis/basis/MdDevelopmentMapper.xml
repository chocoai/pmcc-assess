<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.copower.pmcc.assess.dal.basis.mapper.MdDevelopmentMapper">
  <resultMap id="BaseResultMap" type="com.copower.pmcc.assess.dal.basis.entity.MdDevelopment">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="parcel_setting_outer" jdbcType="VARCHAR" property="parcelSettingOuter" />
    <result column="parcel_setting_inner" jdbcType="VARCHAR" property="parcelSettingInner" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="area" jdbcType="DECIMAL" property="area" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="economic_id" jdbcType="INTEGER" property="economicId" />
    <result column="plan_details_id" jdbcType="INTEGER" property="planDetailsId" />
    <result column="construction_cost_subtotal" jdbcType="DECIMAL" property="constructionCostSubtotal" />
    <result column="interest_investment" jdbcType="DECIMAL" property="interestInvestment" />
    <result column="investment_profit" jdbcType="DECIMAL" property="investmentProfit" />
    <result column="assess_price" jdbcType="DECIMAL" property="assessPrice" />
    <result column="project_construction_period" jdbcType="DECIMAL" property="projectConstructionPeriod" />
    <result column="developed_year" jdbcType="DECIMAL" property="developedYear" />
    <result column="remaining_development_year" jdbcType="DECIMAL" property="remainingDevelopmentYear" />
    <result column="reward_rate_id" jdbcType="INTEGER" property="rewardRateId" />
    <result column="total_saleable_area_price" jdbcType="DECIMAL" property="totalSaleableAreaPrice" />
    <result column="saleable_area" jdbcType="DECIMAL" property="saleableArea" />
    <result column="planned_building_area" jdbcType="DECIMAL" property="plannedBuildingArea" />
    <result column="unsaleable_building_area" jdbcType="DECIMAL" property="unsaleableBuildingArea" />
    <result column="transfer_area" jdbcType="DECIMAL" property="transferArea" />
    <result column="reconnaissance_design" jdbcType="DECIMAL" property="reconnaissanceDesign" />
    <result column="construction_installation_engineering_fee_ids" jdbcType="VARCHAR" property="constructionInstallationEngineeringFeeIds" />
    <result column="construction_installation_engineering_fee" jdbcType="DECIMAL" property="constructionInstallationEngineeringFee" />
    <result column="infrastructure_cost" jdbcType="DECIMAL" property="infrastructureCost" />
    <result column="infrastructure_matching_cost" jdbcType="DECIMAL" property="infrastructureMatchingCost" />
    <result column="dev_during" jdbcType="DECIMAL" property="devDuring" />
    <result column="other_engineering_cost" jdbcType="DECIMAL" property="otherEngineeringCost" />
    <result column="unforeseen_expenses" jdbcType="DECIMAL" property="unforeseenExpenses" />
    <result column="reconnaissance_design_explain" jdbcType="VARCHAR" property="reconnaissanceDesignExplain" />
    <result column="infrastructure_cost_explain" jdbcType="VARCHAR" property="infrastructureCostExplain" />
    <result column="infrastructure_matching_cost_explain" jdbcType="VARCHAR" property="infrastructureMatchingCostExplain" />
    <result column="dev_during_explain" jdbcType="VARCHAR" property="devDuringExplain" />
    <result column="other_engineering_cost_explain" jdbcType="VARCHAR" property="otherEngineeringCostExplain" />
    <result column="unforeseen_expenses_explain" jdbcType="VARCHAR" property="unforeseenExpensesExplain" />
    <result column="deed_tax_rate" jdbcType="DECIMAL" property="deedTaxRate" />
    <result column="deed_tax_rate_explain" jdbcType="VARCHAR" property="deedTaxRateExplain" />
    <result column="transaction_tax_rate" jdbcType="DECIMAL" property="transactionTaxRate" />
    <result column="transaction_tax_rate_explain" jdbcType="VARCHAR" property="transactionTaxRateExplain" />
    <result column="management_expense" jdbcType="DECIMAL" property="managementExpense" />
    <result column="management_expense_explain" jdbcType="VARCHAR" property="managementExpenseExplain" />
    <result column="land_get_relevant" jdbcType="DECIMAL" property="landGetRelevant" />
    <result column="land_get_relevant_explain" jdbcType="VARCHAR" property="landGetRelevantExplain" />
    <result column="sales_fee" jdbcType="DECIMAL" property="salesFee" />
    <result column="sales_fee_explain" jdbcType="VARCHAR" property="salesFeeExplain" />
    <result column="interest_investment_tax" jdbcType="DECIMAL" property="interestInvestmentTax" />
    <result column="interest_investment_tax_explain" jdbcType="VARCHAR" property="interestInvestmentTaxExplain" />
    <result column="investment_profit_tax" jdbcType="DECIMAL" property="investmentProfitTax" />
    <result column="investment_profit_tax_explain" jdbcType="VARCHAR" property="investmentProfitTaxExplain" />
    <result column="sales_tax_and_additional" jdbcType="DECIMAL" property="salesTaxAndAdditional" />
    <result column="sales_tax_and_additional_explain" jdbcType="VARCHAR" property="salesTaxAndAdditionalExplain" />
    <result column="land_value_added_tax" jdbcType="DECIMAL" property="landValueAddedTax" />
    <result column="land_value_added_tax_explain" jdbcType="VARCHAR" property="landValueAddedTaxExplain" />
    <result column="project_development_income_tax" jdbcType="DECIMAL" property="projectDevelopmentIncomeTax" />
    <result column="project_development_income_tax_explain" jdbcType="VARCHAR" property="projectDevelopmentIncomeTaxExplain" />
    <result column="remuneration_rate" jdbcType="DECIMAL" property="remunerationRate" />
    <result column="statutory_life" jdbcType="DECIMAL" property="statutoryLife" />
    <result column="remaining_years" jdbcType="DECIMAL" property="remainingYears" />
    <result column="amendment_status_rights" jdbcType="DECIMAL" property="amendmentStatusRights" />
    <result column="amendment_status_rights_explain" jdbcType="VARCHAR" property="amendmentStatusRightsExplain" />
    <result column="other_amendments" jdbcType="DECIMAL" property="otherAmendments" />
    <result column="other_amendments_explain" jdbcType="VARCHAR" property="otherAmendmentsExplain" />
    <result column="development_degree_revision" jdbcType="DECIMAL" property="developmentDegreeRevision" />
    <result column="development_degree_revision_explain" jdbcType="VARCHAR" property="developmentDegreeRevisionExplain" />
    <result column="center_id" jdbcType="INTEGER" property="centerId" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="gmt_created" jdbcType="TIMESTAMP" property="gmtCreated" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
    <result column="land_area" jdbcType="DECIMAL" property="landArea" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.copower.pmcc.assess.dal.basis.entity.MdDevelopment">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, parcel_setting_outer, parcel_setting_inner, name, area, price, type, economic_id, 
    plan_details_id, construction_cost_subtotal, interest_investment, investment_profit, 
    assess_price, project_construction_period, developed_year, remaining_development_year, 
    reward_rate_id, total_saleable_area_price, saleable_area, planned_building_area, 
    unsaleable_building_area, transfer_area, reconnaissance_design, construction_installation_engineering_fee_ids, 
    construction_installation_engineering_fee, infrastructure_cost, infrastructure_matching_cost, 
    dev_during, other_engineering_cost, unforeseen_expenses, reconnaissance_design_explain, 
    infrastructure_cost_explain, infrastructure_matching_cost_explain, dev_during_explain, 
    other_engineering_cost_explain, unforeseen_expenses_explain, deed_tax_rate, deed_tax_rate_explain, 
    transaction_tax_rate, transaction_tax_rate_explain, management_expense, management_expense_explain, 
    land_get_relevant, land_get_relevant_explain, sales_fee, sales_fee_explain, interest_investment_tax, 
    interest_investment_tax_explain, investment_profit_tax, investment_profit_tax_explain, 
    sales_tax_and_additional, sales_tax_and_additional_explain, land_value_added_tax, 
    land_value_added_tax_explain, project_development_income_tax, project_development_income_tax_explain, 
    remuneration_rate, statutory_life, remaining_years, amendment_status_rights, amendment_status_rights_explain, 
    other_amendments, other_amendments_explain, development_degree_revision, development_degree_revision_explain, 
    center_id, creator, gmt_created, gmt_modified, land_area
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.copower.pmcc.assess.dal.basis.entity.MdDevelopmentExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_md_development
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.copower.pmcc.assess.dal.basis.entity.MdDevelopmentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_md_development
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_md_development
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_md_development
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.copower.pmcc.assess.dal.basis.entity.MdDevelopmentExample">
    delete from tb_md_development
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.copower.pmcc.assess.dal.basis.entity.MdDevelopment">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_md_development (parcel_setting_outer, parcel_setting_inner, 
      name, area, price, 
      type, economic_id, plan_details_id, 
      construction_cost_subtotal, interest_investment, 
      investment_profit, assess_price, project_construction_period, 
      developed_year, remaining_development_year, 
      reward_rate_id, total_saleable_area_price, saleable_area, 
      planned_building_area, unsaleable_building_area, 
      transfer_area, reconnaissance_design, construction_installation_engineering_fee_ids, 
      construction_installation_engineering_fee, infrastructure_cost, 
      infrastructure_matching_cost, dev_during, 
      other_engineering_cost, unforeseen_expenses, 
      reconnaissance_design_explain, infrastructure_cost_explain, 
      infrastructure_matching_cost_explain, dev_during_explain, 
      other_engineering_cost_explain, unforeseen_expenses_explain, 
      deed_tax_rate, deed_tax_rate_explain, transaction_tax_rate, 
      transaction_tax_rate_explain, management_expense, 
      management_expense_explain, land_get_relevant, 
      land_get_relevant_explain, sales_fee, sales_fee_explain, 
      interest_investment_tax, interest_investment_tax_explain, 
      investment_profit_tax, investment_profit_tax_explain, 
      sales_tax_and_additional, sales_tax_and_additional_explain, 
      land_value_added_tax, land_value_added_tax_explain, 
      project_development_income_tax, project_development_income_tax_explain, 
      remuneration_rate, statutory_life, remaining_years, 
      amendment_status_rights, amendment_status_rights_explain, 
      other_amendments, other_amendments_explain, 
      development_degree_revision, development_degree_revision_explain, 
      center_id, creator, gmt_created, 
      gmt_modified, land_area, content
      )
    values (#{parcelSettingOuter,jdbcType=VARCHAR}, #{parcelSettingInner,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{area,jdbcType=DECIMAL}, #{price,jdbcType=DECIMAL}, 
      #{type,jdbcType=VARCHAR}, #{economicId,jdbcType=INTEGER}, #{planDetailsId,jdbcType=INTEGER}, 
      #{constructionCostSubtotal,jdbcType=DECIMAL}, #{interestInvestment,jdbcType=DECIMAL}, 
      #{investmentProfit,jdbcType=DECIMAL}, #{assessPrice,jdbcType=DECIMAL}, #{projectConstructionPeriod,jdbcType=DECIMAL}, 
      #{developedYear,jdbcType=DECIMAL}, #{remainingDevelopmentYear,jdbcType=DECIMAL}, 
      #{rewardRateId,jdbcType=INTEGER}, #{totalSaleableAreaPrice,jdbcType=DECIMAL}, #{saleableArea,jdbcType=DECIMAL}, 
      #{plannedBuildingArea,jdbcType=DECIMAL}, #{unsaleableBuildingArea,jdbcType=DECIMAL}, 
      #{transferArea,jdbcType=DECIMAL}, #{reconnaissanceDesign,jdbcType=DECIMAL}, #{constructionInstallationEngineeringFeeIds,jdbcType=VARCHAR}, 
      #{constructionInstallationEngineeringFee,jdbcType=DECIMAL}, #{infrastructureCost,jdbcType=DECIMAL}, 
      #{infrastructureMatchingCost,jdbcType=DECIMAL}, #{devDuring,jdbcType=DECIMAL}, 
      #{otherEngineeringCost,jdbcType=DECIMAL}, #{unforeseenExpenses,jdbcType=DECIMAL}, 
      #{reconnaissanceDesignExplain,jdbcType=VARCHAR}, #{infrastructureCostExplain,jdbcType=VARCHAR}, 
      #{infrastructureMatchingCostExplain,jdbcType=VARCHAR}, #{devDuringExplain,jdbcType=VARCHAR}, 
      #{otherEngineeringCostExplain,jdbcType=VARCHAR}, #{unforeseenExpensesExplain,jdbcType=VARCHAR}, 
      #{deedTaxRate,jdbcType=DECIMAL}, #{deedTaxRateExplain,jdbcType=VARCHAR}, #{transactionTaxRate,jdbcType=DECIMAL}, 
      #{transactionTaxRateExplain,jdbcType=VARCHAR}, #{managementExpense,jdbcType=DECIMAL}, 
      #{managementExpenseExplain,jdbcType=VARCHAR}, #{landGetRelevant,jdbcType=DECIMAL}, 
      #{landGetRelevantExplain,jdbcType=VARCHAR}, #{salesFee,jdbcType=DECIMAL}, #{salesFeeExplain,jdbcType=VARCHAR}, 
      #{interestInvestmentTax,jdbcType=DECIMAL}, #{interestInvestmentTaxExplain,jdbcType=VARCHAR}, 
      #{investmentProfitTax,jdbcType=DECIMAL}, #{investmentProfitTaxExplain,jdbcType=VARCHAR}, 
      #{salesTaxAndAdditional,jdbcType=DECIMAL}, #{salesTaxAndAdditionalExplain,jdbcType=VARCHAR}, 
      #{landValueAddedTax,jdbcType=DECIMAL}, #{landValueAddedTaxExplain,jdbcType=VARCHAR}, 
      #{projectDevelopmentIncomeTax,jdbcType=DECIMAL}, #{projectDevelopmentIncomeTaxExplain,jdbcType=VARCHAR}, 
      #{remunerationRate,jdbcType=DECIMAL}, #{statutoryLife,jdbcType=DECIMAL}, #{remainingYears,jdbcType=DECIMAL}, 
      #{amendmentStatusRights,jdbcType=DECIMAL}, #{amendmentStatusRightsExplain,jdbcType=VARCHAR}, 
      #{otherAmendments,jdbcType=DECIMAL}, #{otherAmendmentsExplain,jdbcType=VARCHAR}, 
      #{developmentDegreeRevision,jdbcType=DECIMAL}, #{developmentDegreeRevisionExplain,jdbcType=VARCHAR}, 
      #{centerId,jdbcType=INTEGER}, #{creator,jdbcType=VARCHAR}, #{gmtCreated,jdbcType=TIMESTAMP}, 
      #{gmtModified,jdbcType=TIMESTAMP}, #{landArea,jdbcType=DECIMAL}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.copower.pmcc.assess.dal.basis.entity.MdDevelopment">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_md_development
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="parcelSettingOuter != null">
        parcel_setting_outer,
      </if>
      <if test="parcelSettingInner != null">
        parcel_setting_inner,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="area != null">
        area,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="economicId != null">
        economic_id,
      </if>
      <if test="planDetailsId != null">
        plan_details_id,
      </if>
      <if test="constructionCostSubtotal != null">
        construction_cost_subtotal,
      </if>
      <if test="interestInvestment != null">
        interest_investment,
      </if>
      <if test="investmentProfit != null">
        investment_profit,
      </if>
      <if test="assessPrice != null">
        assess_price,
      </if>
      <if test="projectConstructionPeriod != null">
        project_construction_period,
      </if>
      <if test="developedYear != null">
        developed_year,
      </if>
      <if test="remainingDevelopmentYear != null">
        remaining_development_year,
      </if>
      <if test="rewardRateId != null">
        reward_rate_id,
      </if>
      <if test="totalSaleableAreaPrice != null">
        total_saleable_area_price,
      </if>
      <if test="saleableArea != null">
        saleable_area,
      </if>
      <if test="plannedBuildingArea != null">
        planned_building_area,
      </if>
      <if test="unsaleableBuildingArea != null">
        unsaleable_building_area,
      </if>
      <if test="transferArea != null">
        transfer_area,
      </if>
      <if test="reconnaissanceDesign != null">
        reconnaissance_design,
      </if>
      <if test="constructionInstallationEngineeringFeeIds != null">
        construction_installation_engineering_fee_ids,
      </if>
      <if test="constructionInstallationEngineeringFee != null">
        construction_installation_engineering_fee,
      </if>
      <if test="infrastructureCost != null">
        infrastructure_cost,
      </if>
      <if test="infrastructureMatchingCost != null">
        infrastructure_matching_cost,
      </if>
      <if test="devDuring != null">
        dev_during,
      </if>
      <if test="otherEngineeringCost != null">
        other_engineering_cost,
      </if>
      <if test="unforeseenExpenses != null">
        unforeseen_expenses,
      </if>
      <if test="reconnaissanceDesignExplain != null">
        reconnaissance_design_explain,
      </if>
      <if test="infrastructureCostExplain != null">
        infrastructure_cost_explain,
      </if>
      <if test="infrastructureMatchingCostExplain != null">
        infrastructure_matching_cost_explain,
      </if>
      <if test="devDuringExplain != null">
        dev_during_explain,
      </if>
      <if test="otherEngineeringCostExplain != null">
        other_engineering_cost_explain,
      </if>
      <if test="unforeseenExpensesExplain != null">
        unforeseen_expenses_explain,
      </if>
      <if test="deedTaxRate != null">
        deed_tax_rate,
      </if>
      <if test="deedTaxRateExplain != null">
        deed_tax_rate_explain,
      </if>
      <if test="transactionTaxRate != null">
        transaction_tax_rate,
      </if>
      <if test="transactionTaxRateExplain != null">
        transaction_tax_rate_explain,
      </if>
      <if test="managementExpense != null">
        management_expense,
      </if>
      <if test="managementExpenseExplain != null">
        management_expense_explain,
      </if>
      <if test="landGetRelevant != null">
        land_get_relevant,
      </if>
      <if test="landGetRelevantExplain != null">
        land_get_relevant_explain,
      </if>
      <if test="salesFee != null">
        sales_fee,
      </if>
      <if test="salesFeeExplain != null">
        sales_fee_explain,
      </if>
      <if test="interestInvestmentTax != null">
        interest_investment_tax,
      </if>
      <if test="interestInvestmentTaxExplain != null">
        interest_investment_tax_explain,
      </if>
      <if test="investmentProfitTax != null">
        investment_profit_tax,
      </if>
      <if test="investmentProfitTaxExplain != null">
        investment_profit_tax_explain,
      </if>
      <if test="salesTaxAndAdditional != null">
        sales_tax_and_additional,
      </if>
      <if test="salesTaxAndAdditionalExplain != null">
        sales_tax_and_additional_explain,
      </if>
      <if test="landValueAddedTax != null">
        land_value_added_tax,
      </if>
      <if test="landValueAddedTaxExplain != null">
        land_value_added_tax_explain,
      </if>
      <if test="projectDevelopmentIncomeTax != null">
        project_development_income_tax,
      </if>
      <if test="projectDevelopmentIncomeTaxExplain != null">
        project_development_income_tax_explain,
      </if>
      <if test="remunerationRate != null">
        remuneration_rate,
      </if>
      <if test="statutoryLife != null">
        statutory_life,
      </if>
      <if test="remainingYears != null">
        remaining_years,
      </if>
      <if test="amendmentStatusRights != null">
        amendment_status_rights,
      </if>
      <if test="amendmentStatusRightsExplain != null">
        amendment_status_rights_explain,
      </if>
      <if test="otherAmendments != null">
        other_amendments,
      </if>
      <if test="otherAmendmentsExplain != null">
        other_amendments_explain,
      </if>
      <if test="developmentDegreeRevision != null">
        development_degree_revision,
      </if>
      <if test="developmentDegreeRevisionExplain != null">
        development_degree_revision_explain,
      </if>
      <if test="centerId != null">
        center_id,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="gmtCreated != null">
        gmt_created,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
      <if test="landArea != null">
        land_area,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="parcelSettingOuter != null">
        #{parcelSettingOuter,jdbcType=VARCHAR},
      </if>
      <if test="parcelSettingInner != null">
        #{parcelSettingInner,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        #{area,jdbcType=DECIMAL},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="economicId != null">
        #{economicId,jdbcType=INTEGER},
      </if>
      <if test="planDetailsId != null">
        #{planDetailsId,jdbcType=INTEGER},
      </if>
      <if test="constructionCostSubtotal != null">
        #{constructionCostSubtotal,jdbcType=DECIMAL},
      </if>
      <if test="interestInvestment != null">
        #{interestInvestment,jdbcType=DECIMAL},
      </if>
      <if test="investmentProfit != null">
        #{investmentProfit,jdbcType=DECIMAL},
      </if>
      <if test="assessPrice != null">
        #{assessPrice,jdbcType=DECIMAL},
      </if>
      <if test="projectConstructionPeriod != null">
        #{projectConstructionPeriod,jdbcType=DECIMAL},
      </if>
      <if test="developedYear != null">
        #{developedYear,jdbcType=DECIMAL},
      </if>
      <if test="remainingDevelopmentYear != null">
        #{remainingDevelopmentYear,jdbcType=DECIMAL},
      </if>
      <if test="rewardRateId != null">
        #{rewardRateId,jdbcType=INTEGER},
      </if>
      <if test="totalSaleableAreaPrice != null">
        #{totalSaleableAreaPrice,jdbcType=DECIMAL},
      </if>
      <if test="saleableArea != null">
        #{saleableArea,jdbcType=DECIMAL},
      </if>
      <if test="plannedBuildingArea != null">
        #{plannedBuildingArea,jdbcType=DECIMAL},
      </if>
      <if test="unsaleableBuildingArea != null">
        #{unsaleableBuildingArea,jdbcType=DECIMAL},
      </if>
      <if test="transferArea != null">
        #{transferArea,jdbcType=DECIMAL},
      </if>
      <if test="reconnaissanceDesign != null">
        #{reconnaissanceDesign,jdbcType=DECIMAL},
      </if>
      <if test="constructionInstallationEngineeringFeeIds != null">
        #{constructionInstallationEngineeringFeeIds,jdbcType=VARCHAR},
      </if>
      <if test="constructionInstallationEngineeringFee != null">
        #{constructionInstallationEngineeringFee,jdbcType=DECIMAL},
      </if>
      <if test="infrastructureCost != null">
        #{infrastructureCost,jdbcType=DECIMAL},
      </if>
      <if test="infrastructureMatchingCost != null">
        #{infrastructureMatchingCost,jdbcType=DECIMAL},
      </if>
      <if test="devDuring != null">
        #{devDuring,jdbcType=DECIMAL},
      </if>
      <if test="otherEngineeringCost != null">
        #{otherEngineeringCost,jdbcType=DECIMAL},
      </if>
      <if test="unforeseenExpenses != null">
        #{unforeseenExpenses,jdbcType=DECIMAL},
      </if>
      <if test="reconnaissanceDesignExplain != null">
        #{reconnaissanceDesignExplain,jdbcType=VARCHAR},
      </if>
      <if test="infrastructureCostExplain != null">
        #{infrastructureCostExplain,jdbcType=VARCHAR},
      </if>
      <if test="infrastructureMatchingCostExplain != null">
        #{infrastructureMatchingCostExplain,jdbcType=VARCHAR},
      </if>
      <if test="devDuringExplain != null">
        #{devDuringExplain,jdbcType=VARCHAR},
      </if>
      <if test="otherEngineeringCostExplain != null">
        #{otherEngineeringCostExplain,jdbcType=VARCHAR},
      </if>
      <if test="unforeseenExpensesExplain != null">
        #{unforeseenExpensesExplain,jdbcType=VARCHAR},
      </if>
      <if test="deedTaxRate != null">
        #{deedTaxRate,jdbcType=DECIMAL},
      </if>
      <if test="deedTaxRateExplain != null">
        #{deedTaxRateExplain,jdbcType=VARCHAR},
      </if>
      <if test="transactionTaxRate != null">
        #{transactionTaxRate,jdbcType=DECIMAL},
      </if>
      <if test="transactionTaxRateExplain != null">
        #{transactionTaxRateExplain,jdbcType=VARCHAR},
      </if>
      <if test="managementExpense != null">
        #{managementExpense,jdbcType=DECIMAL},
      </if>
      <if test="managementExpenseExplain != null">
        #{managementExpenseExplain,jdbcType=VARCHAR},
      </if>
      <if test="landGetRelevant != null">
        #{landGetRelevant,jdbcType=DECIMAL},
      </if>
      <if test="landGetRelevantExplain != null">
        #{landGetRelevantExplain,jdbcType=VARCHAR},
      </if>
      <if test="salesFee != null">
        #{salesFee,jdbcType=DECIMAL},
      </if>
      <if test="salesFeeExplain != null">
        #{salesFeeExplain,jdbcType=VARCHAR},
      </if>
      <if test="interestInvestmentTax != null">
        #{interestInvestmentTax,jdbcType=DECIMAL},
      </if>
      <if test="interestInvestmentTaxExplain != null">
        #{interestInvestmentTaxExplain,jdbcType=VARCHAR},
      </if>
      <if test="investmentProfitTax != null">
        #{investmentProfitTax,jdbcType=DECIMAL},
      </if>
      <if test="investmentProfitTaxExplain != null">
        #{investmentProfitTaxExplain,jdbcType=VARCHAR},
      </if>
      <if test="salesTaxAndAdditional != null">
        #{salesTaxAndAdditional,jdbcType=DECIMAL},
      </if>
      <if test="salesTaxAndAdditionalExplain != null">
        #{salesTaxAndAdditionalExplain,jdbcType=VARCHAR},
      </if>
      <if test="landValueAddedTax != null">
        #{landValueAddedTax,jdbcType=DECIMAL},
      </if>
      <if test="landValueAddedTaxExplain != null">
        #{landValueAddedTaxExplain,jdbcType=VARCHAR},
      </if>
      <if test="projectDevelopmentIncomeTax != null">
        #{projectDevelopmentIncomeTax,jdbcType=DECIMAL},
      </if>
      <if test="projectDevelopmentIncomeTaxExplain != null">
        #{projectDevelopmentIncomeTaxExplain,jdbcType=VARCHAR},
      </if>
      <if test="remunerationRate != null">
        #{remunerationRate,jdbcType=DECIMAL},
      </if>
      <if test="statutoryLife != null">
        #{statutoryLife,jdbcType=DECIMAL},
      </if>
      <if test="remainingYears != null">
        #{remainingYears,jdbcType=DECIMAL},
      </if>
      <if test="amendmentStatusRights != null">
        #{amendmentStatusRights,jdbcType=DECIMAL},
      </if>
      <if test="amendmentStatusRightsExplain != null">
        #{amendmentStatusRightsExplain,jdbcType=VARCHAR},
      </if>
      <if test="otherAmendments != null">
        #{otherAmendments,jdbcType=DECIMAL},
      </if>
      <if test="otherAmendmentsExplain != null">
        #{otherAmendmentsExplain,jdbcType=VARCHAR},
      </if>
      <if test="developmentDegreeRevision != null">
        #{developmentDegreeRevision,jdbcType=DECIMAL},
      </if>
      <if test="developmentDegreeRevisionExplain != null">
        #{developmentDegreeRevisionExplain,jdbcType=VARCHAR},
      </if>
      <if test="centerId != null">
        #{centerId,jdbcType=INTEGER},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreated != null">
        #{gmtCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="landArea != null">
        #{landArea,jdbcType=DECIMAL},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.copower.pmcc.assess.dal.basis.entity.MdDevelopmentExample" resultType="java.lang.Long">
    select count(*) from tb_md_development
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_md_development
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.parcelSettingOuter != null">
        parcel_setting_outer = #{record.parcelSettingOuter,jdbcType=VARCHAR},
      </if>
      <if test="record.parcelSettingInner != null">
        parcel_setting_inner = #{record.parcelSettingInner,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.area != null">
        area = #{record.area,jdbcType=DECIMAL},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.economicId != null">
        economic_id = #{record.economicId,jdbcType=INTEGER},
      </if>
      <if test="record.planDetailsId != null">
        plan_details_id = #{record.planDetailsId,jdbcType=INTEGER},
      </if>
      <if test="record.constructionCostSubtotal != null">
        construction_cost_subtotal = #{record.constructionCostSubtotal,jdbcType=DECIMAL},
      </if>
      <if test="record.interestInvestment != null">
        interest_investment = #{record.interestInvestment,jdbcType=DECIMAL},
      </if>
      <if test="record.investmentProfit != null">
        investment_profit = #{record.investmentProfit,jdbcType=DECIMAL},
      </if>
      <if test="record.assessPrice != null">
        assess_price = #{record.assessPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.projectConstructionPeriod != null">
        project_construction_period = #{record.projectConstructionPeriod,jdbcType=DECIMAL},
      </if>
      <if test="record.developedYear != null">
        developed_year = #{record.developedYear,jdbcType=DECIMAL},
      </if>
      <if test="record.remainingDevelopmentYear != null">
        remaining_development_year = #{record.remainingDevelopmentYear,jdbcType=DECIMAL},
      </if>
      <if test="record.rewardRateId != null">
        reward_rate_id = #{record.rewardRateId,jdbcType=INTEGER},
      </if>
      <if test="record.totalSaleableAreaPrice != null">
        total_saleable_area_price = #{record.totalSaleableAreaPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.saleableArea != null">
        saleable_area = #{record.saleableArea,jdbcType=DECIMAL},
      </if>
      <if test="record.plannedBuildingArea != null">
        planned_building_area = #{record.plannedBuildingArea,jdbcType=DECIMAL},
      </if>
      <if test="record.unsaleableBuildingArea != null">
        unsaleable_building_area = #{record.unsaleableBuildingArea,jdbcType=DECIMAL},
      </if>
      <if test="record.transferArea != null">
        transfer_area = #{record.transferArea,jdbcType=DECIMAL},
      </if>
      <if test="record.reconnaissanceDesign != null">
        reconnaissance_design = #{record.reconnaissanceDesign,jdbcType=DECIMAL},
      </if>
      <if test="record.constructionInstallationEngineeringFeeIds != null">
        construction_installation_engineering_fee_ids = #{record.constructionInstallationEngineeringFeeIds,jdbcType=VARCHAR},
      </if>
      <if test="record.constructionInstallationEngineeringFee != null">
        construction_installation_engineering_fee = #{record.constructionInstallationEngineeringFee,jdbcType=DECIMAL},
      </if>
      <if test="record.infrastructureCost != null">
        infrastructure_cost = #{record.infrastructureCost,jdbcType=DECIMAL},
      </if>
      <if test="record.infrastructureMatchingCost != null">
        infrastructure_matching_cost = #{record.infrastructureMatchingCost,jdbcType=DECIMAL},
      </if>
      <if test="record.devDuring != null">
        dev_during = #{record.devDuring,jdbcType=DECIMAL},
      </if>
      <if test="record.otherEngineeringCost != null">
        other_engineering_cost = #{record.otherEngineeringCost,jdbcType=DECIMAL},
      </if>
      <if test="record.unforeseenExpenses != null">
        unforeseen_expenses = #{record.unforeseenExpenses,jdbcType=DECIMAL},
      </if>
      <if test="record.reconnaissanceDesignExplain != null">
        reconnaissance_design_explain = #{record.reconnaissanceDesignExplain,jdbcType=VARCHAR},
      </if>
      <if test="record.infrastructureCostExplain != null">
        infrastructure_cost_explain = #{record.infrastructureCostExplain,jdbcType=VARCHAR},
      </if>
      <if test="record.infrastructureMatchingCostExplain != null">
        infrastructure_matching_cost_explain = #{record.infrastructureMatchingCostExplain,jdbcType=VARCHAR},
      </if>
      <if test="record.devDuringExplain != null">
        dev_during_explain = #{record.devDuringExplain,jdbcType=VARCHAR},
      </if>
      <if test="record.otherEngineeringCostExplain != null">
        other_engineering_cost_explain = #{record.otherEngineeringCostExplain,jdbcType=VARCHAR},
      </if>
      <if test="record.unforeseenExpensesExplain != null">
        unforeseen_expenses_explain = #{record.unforeseenExpensesExplain,jdbcType=VARCHAR},
      </if>
      <if test="record.deedTaxRate != null">
        deed_tax_rate = #{record.deedTaxRate,jdbcType=DECIMAL},
      </if>
      <if test="record.deedTaxRateExplain != null">
        deed_tax_rate_explain = #{record.deedTaxRateExplain,jdbcType=VARCHAR},
      </if>
      <if test="record.transactionTaxRate != null">
        transaction_tax_rate = #{record.transactionTaxRate,jdbcType=DECIMAL},
      </if>
      <if test="record.transactionTaxRateExplain != null">
        transaction_tax_rate_explain = #{record.transactionTaxRateExplain,jdbcType=VARCHAR},
      </if>
      <if test="record.managementExpense != null">
        management_expense = #{record.managementExpense,jdbcType=DECIMAL},
      </if>
      <if test="record.managementExpenseExplain != null">
        management_expense_explain = #{record.managementExpenseExplain,jdbcType=VARCHAR},
      </if>
      <if test="record.landGetRelevant != null">
        land_get_relevant = #{record.landGetRelevant,jdbcType=DECIMAL},
      </if>
      <if test="record.landGetRelevantExplain != null">
        land_get_relevant_explain = #{record.landGetRelevantExplain,jdbcType=VARCHAR},
      </if>
      <if test="record.salesFee != null">
        sales_fee = #{record.salesFee,jdbcType=DECIMAL},
      </if>
      <if test="record.salesFeeExplain != null">
        sales_fee_explain = #{record.salesFeeExplain,jdbcType=VARCHAR},
      </if>
      <if test="record.interestInvestmentTax != null">
        interest_investment_tax = #{record.interestInvestmentTax,jdbcType=DECIMAL},
      </if>
      <if test="record.interestInvestmentTaxExplain != null">
        interest_investment_tax_explain = #{record.interestInvestmentTaxExplain,jdbcType=VARCHAR},
      </if>
      <if test="record.investmentProfitTax != null">
        investment_profit_tax = #{record.investmentProfitTax,jdbcType=DECIMAL},
      </if>
      <if test="record.investmentProfitTaxExplain != null">
        investment_profit_tax_explain = #{record.investmentProfitTaxExplain,jdbcType=VARCHAR},
      </if>
      <if test="record.salesTaxAndAdditional != null">
        sales_tax_and_additional = #{record.salesTaxAndAdditional,jdbcType=DECIMAL},
      </if>
      <if test="record.salesTaxAndAdditionalExplain != null">
        sales_tax_and_additional_explain = #{record.salesTaxAndAdditionalExplain,jdbcType=VARCHAR},
      </if>
      <if test="record.landValueAddedTax != null">
        land_value_added_tax = #{record.landValueAddedTax,jdbcType=DECIMAL},
      </if>
      <if test="record.landValueAddedTaxExplain != null">
        land_value_added_tax_explain = #{record.landValueAddedTaxExplain,jdbcType=VARCHAR},
      </if>
      <if test="record.projectDevelopmentIncomeTax != null">
        project_development_income_tax = #{record.projectDevelopmentIncomeTax,jdbcType=DECIMAL},
      </if>
      <if test="record.projectDevelopmentIncomeTaxExplain != null">
        project_development_income_tax_explain = #{record.projectDevelopmentIncomeTaxExplain,jdbcType=VARCHAR},
      </if>
      <if test="record.remunerationRate != null">
        remuneration_rate = #{record.remunerationRate,jdbcType=DECIMAL},
      </if>
      <if test="record.statutoryLife != null">
        statutory_life = #{record.statutoryLife,jdbcType=DECIMAL},
      </if>
      <if test="record.remainingYears != null">
        remaining_years = #{record.remainingYears,jdbcType=DECIMAL},
      </if>
      <if test="record.amendmentStatusRights != null">
        amendment_status_rights = #{record.amendmentStatusRights,jdbcType=DECIMAL},
      </if>
      <if test="record.amendmentStatusRightsExplain != null">
        amendment_status_rights_explain = #{record.amendmentStatusRightsExplain,jdbcType=VARCHAR},
      </if>
      <if test="record.otherAmendments != null">
        other_amendments = #{record.otherAmendments,jdbcType=DECIMAL},
      </if>
      <if test="record.otherAmendmentsExplain != null">
        other_amendments_explain = #{record.otherAmendmentsExplain,jdbcType=VARCHAR},
      </if>
      <if test="record.developmentDegreeRevision != null">
        development_degree_revision = #{record.developmentDegreeRevision,jdbcType=DECIMAL},
      </if>
      <if test="record.developmentDegreeRevisionExplain != null">
        development_degree_revision_explain = #{record.developmentDegreeRevisionExplain,jdbcType=VARCHAR},
      </if>
      <if test="record.centerId != null">
        center_id = #{record.centerId,jdbcType=INTEGER},
      </if>
      <if test="record.creator != null">
        creator = #{record.creator,jdbcType=VARCHAR},
      </if>
      <if test="record.gmtCreated != null">
        gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModified != null">
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="record.landArea != null">
        land_area = #{record.landArea,jdbcType=DECIMAL},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update tb_md_development
    set id = #{record.id,jdbcType=INTEGER},
      parcel_setting_outer = #{record.parcelSettingOuter,jdbcType=VARCHAR},
      parcel_setting_inner = #{record.parcelSettingInner,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      area = #{record.area,jdbcType=DECIMAL},
      price = #{record.price,jdbcType=DECIMAL},
      type = #{record.type,jdbcType=VARCHAR},
      economic_id = #{record.economicId,jdbcType=INTEGER},
      plan_details_id = #{record.planDetailsId,jdbcType=INTEGER},
      construction_cost_subtotal = #{record.constructionCostSubtotal,jdbcType=DECIMAL},
      interest_investment = #{record.interestInvestment,jdbcType=DECIMAL},
      investment_profit = #{record.investmentProfit,jdbcType=DECIMAL},
      assess_price = #{record.assessPrice,jdbcType=DECIMAL},
      project_construction_period = #{record.projectConstructionPeriod,jdbcType=DECIMAL},
      developed_year = #{record.developedYear,jdbcType=DECIMAL},
      remaining_development_year = #{record.remainingDevelopmentYear,jdbcType=DECIMAL},
      reward_rate_id = #{record.rewardRateId,jdbcType=INTEGER},
      total_saleable_area_price = #{record.totalSaleableAreaPrice,jdbcType=DECIMAL},
      saleable_area = #{record.saleableArea,jdbcType=DECIMAL},
      planned_building_area = #{record.plannedBuildingArea,jdbcType=DECIMAL},
      unsaleable_building_area = #{record.unsaleableBuildingArea,jdbcType=DECIMAL},
      transfer_area = #{record.transferArea,jdbcType=DECIMAL},
      reconnaissance_design = #{record.reconnaissanceDesign,jdbcType=DECIMAL},
      construction_installation_engineering_fee_ids = #{record.constructionInstallationEngineeringFeeIds,jdbcType=VARCHAR},
      construction_installation_engineering_fee = #{record.constructionInstallationEngineeringFee,jdbcType=DECIMAL},
      infrastructure_cost = #{record.infrastructureCost,jdbcType=DECIMAL},
      infrastructure_matching_cost = #{record.infrastructureMatchingCost,jdbcType=DECIMAL},
      dev_during = #{record.devDuring,jdbcType=DECIMAL},
      other_engineering_cost = #{record.otherEngineeringCost,jdbcType=DECIMAL},
      unforeseen_expenses = #{record.unforeseenExpenses,jdbcType=DECIMAL},
      reconnaissance_design_explain = #{record.reconnaissanceDesignExplain,jdbcType=VARCHAR},
      infrastructure_cost_explain = #{record.infrastructureCostExplain,jdbcType=VARCHAR},
      infrastructure_matching_cost_explain = #{record.infrastructureMatchingCostExplain,jdbcType=VARCHAR},
      dev_during_explain = #{record.devDuringExplain,jdbcType=VARCHAR},
      other_engineering_cost_explain = #{record.otherEngineeringCostExplain,jdbcType=VARCHAR},
      unforeseen_expenses_explain = #{record.unforeseenExpensesExplain,jdbcType=VARCHAR},
      deed_tax_rate = #{record.deedTaxRate,jdbcType=DECIMAL},
      deed_tax_rate_explain = #{record.deedTaxRateExplain,jdbcType=VARCHAR},
      transaction_tax_rate = #{record.transactionTaxRate,jdbcType=DECIMAL},
      transaction_tax_rate_explain = #{record.transactionTaxRateExplain,jdbcType=VARCHAR},
      management_expense = #{record.managementExpense,jdbcType=DECIMAL},
      management_expense_explain = #{record.managementExpenseExplain,jdbcType=VARCHAR},
      land_get_relevant = #{record.landGetRelevant,jdbcType=DECIMAL},
      land_get_relevant_explain = #{record.landGetRelevantExplain,jdbcType=VARCHAR},
      sales_fee = #{record.salesFee,jdbcType=DECIMAL},
      sales_fee_explain = #{record.salesFeeExplain,jdbcType=VARCHAR},
      interest_investment_tax = #{record.interestInvestmentTax,jdbcType=DECIMAL},
      interest_investment_tax_explain = #{record.interestInvestmentTaxExplain,jdbcType=VARCHAR},
      investment_profit_tax = #{record.investmentProfitTax,jdbcType=DECIMAL},
      investment_profit_tax_explain = #{record.investmentProfitTaxExplain,jdbcType=VARCHAR},
      sales_tax_and_additional = #{record.salesTaxAndAdditional,jdbcType=DECIMAL},
      sales_tax_and_additional_explain = #{record.salesTaxAndAdditionalExplain,jdbcType=VARCHAR},
      land_value_added_tax = #{record.landValueAddedTax,jdbcType=DECIMAL},
      land_value_added_tax_explain = #{record.landValueAddedTaxExplain,jdbcType=VARCHAR},
      project_development_income_tax = #{record.projectDevelopmentIncomeTax,jdbcType=DECIMAL},
      project_development_income_tax_explain = #{record.projectDevelopmentIncomeTaxExplain,jdbcType=VARCHAR},
      remuneration_rate = #{record.remunerationRate,jdbcType=DECIMAL},
      statutory_life = #{record.statutoryLife,jdbcType=DECIMAL},
      remaining_years = #{record.remainingYears,jdbcType=DECIMAL},
      amendment_status_rights = #{record.amendmentStatusRights,jdbcType=DECIMAL},
      amendment_status_rights_explain = #{record.amendmentStatusRightsExplain,jdbcType=VARCHAR},
      other_amendments = #{record.otherAmendments,jdbcType=DECIMAL},
      other_amendments_explain = #{record.otherAmendmentsExplain,jdbcType=VARCHAR},
      development_degree_revision = #{record.developmentDegreeRevision,jdbcType=DECIMAL},
      development_degree_revision_explain = #{record.developmentDegreeRevisionExplain,jdbcType=VARCHAR},
      center_id = #{record.centerId,jdbcType=INTEGER},
      creator = #{record.creator,jdbcType=VARCHAR},
      gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      land_area = #{record.landArea,jdbcType=DECIMAL},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_md_development
    set id = #{record.id,jdbcType=INTEGER},
      parcel_setting_outer = #{record.parcelSettingOuter,jdbcType=VARCHAR},
      parcel_setting_inner = #{record.parcelSettingInner,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      area = #{record.area,jdbcType=DECIMAL},
      price = #{record.price,jdbcType=DECIMAL},
      type = #{record.type,jdbcType=VARCHAR},
      economic_id = #{record.economicId,jdbcType=INTEGER},
      plan_details_id = #{record.planDetailsId,jdbcType=INTEGER},
      construction_cost_subtotal = #{record.constructionCostSubtotal,jdbcType=DECIMAL},
      interest_investment = #{record.interestInvestment,jdbcType=DECIMAL},
      investment_profit = #{record.investmentProfit,jdbcType=DECIMAL},
      assess_price = #{record.assessPrice,jdbcType=DECIMAL},
      project_construction_period = #{record.projectConstructionPeriod,jdbcType=DECIMAL},
      developed_year = #{record.developedYear,jdbcType=DECIMAL},
      remaining_development_year = #{record.remainingDevelopmentYear,jdbcType=DECIMAL},
      reward_rate_id = #{record.rewardRateId,jdbcType=INTEGER},
      total_saleable_area_price = #{record.totalSaleableAreaPrice,jdbcType=DECIMAL},
      saleable_area = #{record.saleableArea,jdbcType=DECIMAL},
      planned_building_area = #{record.plannedBuildingArea,jdbcType=DECIMAL},
      unsaleable_building_area = #{record.unsaleableBuildingArea,jdbcType=DECIMAL},
      transfer_area = #{record.transferArea,jdbcType=DECIMAL},
      reconnaissance_design = #{record.reconnaissanceDesign,jdbcType=DECIMAL},
      construction_installation_engineering_fee_ids = #{record.constructionInstallationEngineeringFeeIds,jdbcType=VARCHAR},
      construction_installation_engineering_fee = #{record.constructionInstallationEngineeringFee,jdbcType=DECIMAL},
      infrastructure_cost = #{record.infrastructureCost,jdbcType=DECIMAL},
      infrastructure_matching_cost = #{record.infrastructureMatchingCost,jdbcType=DECIMAL},
      dev_during = #{record.devDuring,jdbcType=DECIMAL},
      other_engineering_cost = #{record.otherEngineeringCost,jdbcType=DECIMAL},
      unforeseen_expenses = #{record.unforeseenExpenses,jdbcType=DECIMAL},
      reconnaissance_design_explain = #{record.reconnaissanceDesignExplain,jdbcType=VARCHAR},
      infrastructure_cost_explain = #{record.infrastructureCostExplain,jdbcType=VARCHAR},
      infrastructure_matching_cost_explain = #{record.infrastructureMatchingCostExplain,jdbcType=VARCHAR},
      dev_during_explain = #{record.devDuringExplain,jdbcType=VARCHAR},
      other_engineering_cost_explain = #{record.otherEngineeringCostExplain,jdbcType=VARCHAR},
      unforeseen_expenses_explain = #{record.unforeseenExpensesExplain,jdbcType=VARCHAR},
      deed_tax_rate = #{record.deedTaxRate,jdbcType=DECIMAL},
      deed_tax_rate_explain = #{record.deedTaxRateExplain,jdbcType=VARCHAR},
      transaction_tax_rate = #{record.transactionTaxRate,jdbcType=DECIMAL},
      transaction_tax_rate_explain = #{record.transactionTaxRateExplain,jdbcType=VARCHAR},
      management_expense = #{record.managementExpense,jdbcType=DECIMAL},
      management_expense_explain = #{record.managementExpenseExplain,jdbcType=VARCHAR},
      land_get_relevant = #{record.landGetRelevant,jdbcType=DECIMAL},
      land_get_relevant_explain = #{record.landGetRelevantExplain,jdbcType=VARCHAR},
      sales_fee = #{record.salesFee,jdbcType=DECIMAL},
      sales_fee_explain = #{record.salesFeeExplain,jdbcType=VARCHAR},
      interest_investment_tax = #{record.interestInvestmentTax,jdbcType=DECIMAL},
      interest_investment_tax_explain = #{record.interestInvestmentTaxExplain,jdbcType=VARCHAR},
      investment_profit_tax = #{record.investmentProfitTax,jdbcType=DECIMAL},
      investment_profit_tax_explain = #{record.investmentProfitTaxExplain,jdbcType=VARCHAR},
      sales_tax_and_additional = #{record.salesTaxAndAdditional,jdbcType=DECIMAL},
      sales_tax_and_additional_explain = #{record.salesTaxAndAdditionalExplain,jdbcType=VARCHAR},
      land_value_added_tax = #{record.landValueAddedTax,jdbcType=DECIMAL},
      land_value_added_tax_explain = #{record.landValueAddedTaxExplain,jdbcType=VARCHAR},
      project_development_income_tax = #{record.projectDevelopmentIncomeTax,jdbcType=DECIMAL},
      project_development_income_tax_explain = #{record.projectDevelopmentIncomeTaxExplain,jdbcType=VARCHAR},
      remuneration_rate = #{record.remunerationRate,jdbcType=DECIMAL},
      statutory_life = #{record.statutoryLife,jdbcType=DECIMAL},
      remaining_years = #{record.remainingYears,jdbcType=DECIMAL},
      amendment_status_rights = #{record.amendmentStatusRights,jdbcType=DECIMAL},
      amendment_status_rights_explain = #{record.amendmentStatusRightsExplain,jdbcType=VARCHAR},
      other_amendments = #{record.otherAmendments,jdbcType=DECIMAL},
      other_amendments_explain = #{record.otherAmendmentsExplain,jdbcType=VARCHAR},
      development_degree_revision = #{record.developmentDegreeRevision,jdbcType=DECIMAL},
      development_degree_revision_explain = #{record.developmentDegreeRevisionExplain,jdbcType=VARCHAR},
      center_id = #{record.centerId,jdbcType=INTEGER},
      creator = #{record.creator,jdbcType=VARCHAR},
      gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      land_area = #{record.landArea,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.copower.pmcc.assess.dal.basis.entity.MdDevelopment">
    update tb_md_development
    <set>
      <if test="parcelSettingOuter != null">
        parcel_setting_outer = #{parcelSettingOuter,jdbcType=VARCHAR},
      </if>
      <if test="parcelSettingInner != null">
        parcel_setting_inner = #{parcelSettingInner,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        area = #{area,jdbcType=DECIMAL},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="economicId != null">
        economic_id = #{economicId,jdbcType=INTEGER},
      </if>
      <if test="planDetailsId != null">
        plan_details_id = #{planDetailsId,jdbcType=INTEGER},
      </if>
      <if test="constructionCostSubtotal != null">
        construction_cost_subtotal = #{constructionCostSubtotal,jdbcType=DECIMAL},
      </if>
      <if test="interestInvestment != null">
        interest_investment = #{interestInvestment,jdbcType=DECIMAL},
      </if>
      <if test="investmentProfit != null">
        investment_profit = #{investmentProfit,jdbcType=DECIMAL},
      </if>
      <if test="assessPrice != null">
        assess_price = #{assessPrice,jdbcType=DECIMAL},
      </if>
      <if test="projectConstructionPeriod != null">
        project_construction_period = #{projectConstructionPeriod,jdbcType=DECIMAL},
      </if>
      <if test="developedYear != null">
        developed_year = #{developedYear,jdbcType=DECIMAL},
      </if>
      <if test="remainingDevelopmentYear != null">
        remaining_development_year = #{remainingDevelopmentYear,jdbcType=DECIMAL},
      </if>
      <if test="rewardRateId != null">
        reward_rate_id = #{rewardRateId,jdbcType=INTEGER},
      </if>
      <if test="totalSaleableAreaPrice != null">
        total_saleable_area_price = #{totalSaleableAreaPrice,jdbcType=DECIMAL},
      </if>
      <if test="saleableArea != null">
        saleable_area = #{saleableArea,jdbcType=DECIMAL},
      </if>
      <if test="plannedBuildingArea != null">
        planned_building_area = #{plannedBuildingArea,jdbcType=DECIMAL},
      </if>
      <if test="unsaleableBuildingArea != null">
        unsaleable_building_area = #{unsaleableBuildingArea,jdbcType=DECIMAL},
      </if>
      <if test="transferArea != null">
        transfer_area = #{transferArea,jdbcType=DECIMAL},
      </if>
      <if test="reconnaissanceDesign != null">
        reconnaissance_design = #{reconnaissanceDesign,jdbcType=DECIMAL},
      </if>
      <if test="constructionInstallationEngineeringFeeIds != null">
        construction_installation_engineering_fee_ids = #{constructionInstallationEngineeringFeeIds,jdbcType=VARCHAR},
      </if>
      <if test="constructionInstallationEngineeringFee != null">
        construction_installation_engineering_fee = #{constructionInstallationEngineeringFee,jdbcType=DECIMAL},
      </if>
      <if test="infrastructureCost != null">
        infrastructure_cost = #{infrastructureCost,jdbcType=DECIMAL},
      </if>
      <if test="infrastructureMatchingCost != null">
        infrastructure_matching_cost = #{infrastructureMatchingCost,jdbcType=DECIMAL},
      </if>
      <if test="devDuring != null">
        dev_during = #{devDuring,jdbcType=DECIMAL},
      </if>
      <if test="otherEngineeringCost != null">
        other_engineering_cost = #{otherEngineeringCost,jdbcType=DECIMAL},
      </if>
      <if test="unforeseenExpenses != null">
        unforeseen_expenses = #{unforeseenExpenses,jdbcType=DECIMAL},
      </if>
      <if test="reconnaissanceDesignExplain != null">
        reconnaissance_design_explain = #{reconnaissanceDesignExplain,jdbcType=VARCHAR},
      </if>
      <if test="infrastructureCostExplain != null">
        infrastructure_cost_explain = #{infrastructureCostExplain,jdbcType=VARCHAR},
      </if>
      <if test="infrastructureMatchingCostExplain != null">
        infrastructure_matching_cost_explain = #{infrastructureMatchingCostExplain,jdbcType=VARCHAR},
      </if>
      <if test="devDuringExplain != null">
        dev_during_explain = #{devDuringExplain,jdbcType=VARCHAR},
      </if>
      <if test="otherEngineeringCostExplain != null">
        other_engineering_cost_explain = #{otherEngineeringCostExplain,jdbcType=VARCHAR},
      </if>
      <if test="unforeseenExpensesExplain != null">
        unforeseen_expenses_explain = #{unforeseenExpensesExplain,jdbcType=VARCHAR},
      </if>
      <if test="deedTaxRate != null">
        deed_tax_rate = #{deedTaxRate,jdbcType=DECIMAL},
      </if>
      <if test="deedTaxRateExplain != null">
        deed_tax_rate_explain = #{deedTaxRateExplain,jdbcType=VARCHAR},
      </if>
      <if test="transactionTaxRate != null">
        transaction_tax_rate = #{transactionTaxRate,jdbcType=DECIMAL},
      </if>
      <if test="transactionTaxRateExplain != null">
        transaction_tax_rate_explain = #{transactionTaxRateExplain,jdbcType=VARCHAR},
      </if>
      <if test="managementExpense != null">
        management_expense = #{managementExpense,jdbcType=DECIMAL},
      </if>
      <if test="managementExpenseExplain != null">
        management_expense_explain = #{managementExpenseExplain,jdbcType=VARCHAR},
      </if>
      <if test="landGetRelevant != null">
        land_get_relevant = #{landGetRelevant,jdbcType=DECIMAL},
      </if>
      <if test="landGetRelevantExplain != null">
        land_get_relevant_explain = #{landGetRelevantExplain,jdbcType=VARCHAR},
      </if>
      <if test="salesFee != null">
        sales_fee = #{salesFee,jdbcType=DECIMAL},
      </if>
      <if test="salesFeeExplain != null">
        sales_fee_explain = #{salesFeeExplain,jdbcType=VARCHAR},
      </if>
      <if test="interestInvestmentTax != null">
        interest_investment_tax = #{interestInvestmentTax,jdbcType=DECIMAL},
      </if>
      <if test="interestInvestmentTaxExplain != null">
        interest_investment_tax_explain = #{interestInvestmentTaxExplain,jdbcType=VARCHAR},
      </if>
      <if test="investmentProfitTax != null">
        investment_profit_tax = #{investmentProfitTax,jdbcType=DECIMAL},
      </if>
      <if test="investmentProfitTaxExplain != null">
        investment_profit_tax_explain = #{investmentProfitTaxExplain,jdbcType=VARCHAR},
      </if>
      <if test="salesTaxAndAdditional != null">
        sales_tax_and_additional = #{salesTaxAndAdditional,jdbcType=DECIMAL},
      </if>
      <if test="salesTaxAndAdditionalExplain != null">
        sales_tax_and_additional_explain = #{salesTaxAndAdditionalExplain,jdbcType=VARCHAR},
      </if>
      <if test="landValueAddedTax != null">
        land_value_added_tax = #{landValueAddedTax,jdbcType=DECIMAL},
      </if>
      <if test="landValueAddedTaxExplain != null">
        land_value_added_tax_explain = #{landValueAddedTaxExplain,jdbcType=VARCHAR},
      </if>
      <if test="projectDevelopmentIncomeTax != null">
        project_development_income_tax = #{projectDevelopmentIncomeTax,jdbcType=DECIMAL},
      </if>
      <if test="projectDevelopmentIncomeTaxExplain != null">
        project_development_income_tax_explain = #{projectDevelopmentIncomeTaxExplain,jdbcType=VARCHAR},
      </if>
      <if test="remunerationRate != null">
        remuneration_rate = #{remunerationRate,jdbcType=DECIMAL},
      </if>
      <if test="statutoryLife != null">
        statutory_life = #{statutoryLife,jdbcType=DECIMAL},
      </if>
      <if test="remainingYears != null">
        remaining_years = #{remainingYears,jdbcType=DECIMAL},
      </if>
      <if test="amendmentStatusRights != null">
        amendment_status_rights = #{amendmentStatusRights,jdbcType=DECIMAL},
      </if>
      <if test="amendmentStatusRightsExplain != null">
        amendment_status_rights_explain = #{amendmentStatusRightsExplain,jdbcType=VARCHAR},
      </if>
      <if test="otherAmendments != null">
        other_amendments = #{otherAmendments,jdbcType=DECIMAL},
      </if>
      <if test="otherAmendmentsExplain != null">
        other_amendments_explain = #{otherAmendmentsExplain,jdbcType=VARCHAR},
      </if>
      <if test="developmentDegreeRevision != null">
        development_degree_revision = #{developmentDegreeRevision,jdbcType=DECIMAL},
      </if>
      <if test="developmentDegreeRevisionExplain != null">
        development_degree_revision_explain = #{developmentDegreeRevisionExplain,jdbcType=VARCHAR},
      </if>
      <if test="centerId != null">
        center_id = #{centerId,jdbcType=INTEGER},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreated != null">
        gmt_created = #{gmtCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="landArea != null">
        land_area = #{landArea,jdbcType=DECIMAL},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.copower.pmcc.assess.dal.basis.entity.MdDevelopment">
    update tb_md_development
    set parcel_setting_outer = #{parcelSettingOuter,jdbcType=VARCHAR},
      parcel_setting_inner = #{parcelSettingInner,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      area = #{area,jdbcType=DECIMAL},
      price = #{price,jdbcType=DECIMAL},
      type = #{type,jdbcType=VARCHAR},
      economic_id = #{economicId,jdbcType=INTEGER},
      plan_details_id = #{planDetailsId,jdbcType=INTEGER},
      construction_cost_subtotal = #{constructionCostSubtotal,jdbcType=DECIMAL},
      interest_investment = #{interestInvestment,jdbcType=DECIMAL},
      investment_profit = #{investmentProfit,jdbcType=DECIMAL},
      assess_price = #{assessPrice,jdbcType=DECIMAL},
      project_construction_period = #{projectConstructionPeriod,jdbcType=DECIMAL},
      developed_year = #{developedYear,jdbcType=DECIMAL},
      remaining_development_year = #{remainingDevelopmentYear,jdbcType=DECIMAL},
      reward_rate_id = #{rewardRateId,jdbcType=INTEGER},
      total_saleable_area_price = #{totalSaleableAreaPrice,jdbcType=DECIMAL},
      saleable_area = #{saleableArea,jdbcType=DECIMAL},
      planned_building_area = #{plannedBuildingArea,jdbcType=DECIMAL},
      unsaleable_building_area = #{unsaleableBuildingArea,jdbcType=DECIMAL},
      transfer_area = #{transferArea,jdbcType=DECIMAL},
      reconnaissance_design = #{reconnaissanceDesign,jdbcType=DECIMAL},
      construction_installation_engineering_fee_ids = #{constructionInstallationEngineeringFeeIds,jdbcType=VARCHAR},
      construction_installation_engineering_fee = #{constructionInstallationEngineeringFee,jdbcType=DECIMAL},
      infrastructure_cost = #{infrastructureCost,jdbcType=DECIMAL},
      infrastructure_matching_cost = #{infrastructureMatchingCost,jdbcType=DECIMAL},
      dev_during = #{devDuring,jdbcType=DECIMAL},
      other_engineering_cost = #{otherEngineeringCost,jdbcType=DECIMAL},
      unforeseen_expenses = #{unforeseenExpenses,jdbcType=DECIMAL},
      reconnaissance_design_explain = #{reconnaissanceDesignExplain,jdbcType=VARCHAR},
      infrastructure_cost_explain = #{infrastructureCostExplain,jdbcType=VARCHAR},
      infrastructure_matching_cost_explain = #{infrastructureMatchingCostExplain,jdbcType=VARCHAR},
      dev_during_explain = #{devDuringExplain,jdbcType=VARCHAR},
      other_engineering_cost_explain = #{otherEngineeringCostExplain,jdbcType=VARCHAR},
      unforeseen_expenses_explain = #{unforeseenExpensesExplain,jdbcType=VARCHAR},
      deed_tax_rate = #{deedTaxRate,jdbcType=DECIMAL},
      deed_tax_rate_explain = #{deedTaxRateExplain,jdbcType=VARCHAR},
      transaction_tax_rate = #{transactionTaxRate,jdbcType=DECIMAL},
      transaction_tax_rate_explain = #{transactionTaxRateExplain,jdbcType=VARCHAR},
      management_expense = #{managementExpense,jdbcType=DECIMAL},
      management_expense_explain = #{managementExpenseExplain,jdbcType=VARCHAR},
      land_get_relevant = #{landGetRelevant,jdbcType=DECIMAL},
      land_get_relevant_explain = #{landGetRelevantExplain,jdbcType=VARCHAR},
      sales_fee = #{salesFee,jdbcType=DECIMAL},
      sales_fee_explain = #{salesFeeExplain,jdbcType=VARCHAR},
      interest_investment_tax = #{interestInvestmentTax,jdbcType=DECIMAL},
      interest_investment_tax_explain = #{interestInvestmentTaxExplain,jdbcType=VARCHAR},
      investment_profit_tax = #{investmentProfitTax,jdbcType=DECIMAL},
      investment_profit_tax_explain = #{investmentProfitTaxExplain,jdbcType=VARCHAR},
      sales_tax_and_additional = #{salesTaxAndAdditional,jdbcType=DECIMAL},
      sales_tax_and_additional_explain = #{salesTaxAndAdditionalExplain,jdbcType=VARCHAR},
      land_value_added_tax = #{landValueAddedTax,jdbcType=DECIMAL},
      land_value_added_tax_explain = #{landValueAddedTaxExplain,jdbcType=VARCHAR},
      project_development_income_tax = #{projectDevelopmentIncomeTax,jdbcType=DECIMAL},
      project_development_income_tax_explain = #{projectDevelopmentIncomeTaxExplain,jdbcType=VARCHAR},
      remuneration_rate = #{remunerationRate,jdbcType=DECIMAL},
      statutory_life = #{statutoryLife,jdbcType=DECIMAL},
      remaining_years = #{remainingYears,jdbcType=DECIMAL},
      amendment_status_rights = #{amendmentStatusRights,jdbcType=DECIMAL},
      amendment_status_rights_explain = #{amendmentStatusRightsExplain,jdbcType=VARCHAR},
      other_amendments = #{otherAmendments,jdbcType=DECIMAL},
      other_amendments_explain = #{otherAmendmentsExplain,jdbcType=VARCHAR},
      development_degree_revision = #{developmentDegreeRevision,jdbcType=DECIMAL},
      development_degree_revision_explain = #{developmentDegreeRevisionExplain,jdbcType=VARCHAR},
      center_id = #{centerId,jdbcType=INTEGER},
      creator = #{creator,jdbcType=VARCHAR},
      gmt_created = #{gmtCreated,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      land_area = #{landArea,jdbcType=DECIMAL},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.copower.pmcc.assess.dal.basis.entity.MdDevelopment">
    update tb_md_development
    set parcel_setting_outer = #{parcelSettingOuter,jdbcType=VARCHAR},
      parcel_setting_inner = #{parcelSettingInner,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      area = #{area,jdbcType=DECIMAL},
      price = #{price,jdbcType=DECIMAL},
      type = #{type,jdbcType=VARCHAR},
      economic_id = #{economicId,jdbcType=INTEGER},
      plan_details_id = #{planDetailsId,jdbcType=INTEGER},
      construction_cost_subtotal = #{constructionCostSubtotal,jdbcType=DECIMAL},
      interest_investment = #{interestInvestment,jdbcType=DECIMAL},
      investment_profit = #{investmentProfit,jdbcType=DECIMAL},
      assess_price = #{assessPrice,jdbcType=DECIMAL},
      project_construction_period = #{projectConstructionPeriod,jdbcType=DECIMAL},
      developed_year = #{developedYear,jdbcType=DECIMAL},
      remaining_development_year = #{remainingDevelopmentYear,jdbcType=DECIMAL},
      reward_rate_id = #{rewardRateId,jdbcType=INTEGER},
      total_saleable_area_price = #{totalSaleableAreaPrice,jdbcType=DECIMAL},
      saleable_area = #{saleableArea,jdbcType=DECIMAL},
      planned_building_area = #{plannedBuildingArea,jdbcType=DECIMAL},
      unsaleable_building_area = #{unsaleableBuildingArea,jdbcType=DECIMAL},
      transfer_area = #{transferArea,jdbcType=DECIMAL},
      reconnaissance_design = #{reconnaissanceDesign,jdbcType=DECIMAL},
      construction_installation_engineering_fee_ids = #{constructionInstallationEngineeringFeeIds,jdbcType=VARCHAR},
      construction_installation_engineering_fee = #{constructionInstallationEngineeringFee,jdbcType=DECIMAL},
      infrastructure_cost = #{infrastructureCost,jdbcType=DECIMAL},
      infrastructure_matching_cost = #{infrastructureMatchingCost,jdbcType=DECIMAL},
      dev_during = #{devDuring,jdbcType=DECIMAL},
      other_engineering_cost = #{otherEngineeringCost,jdbcType=DECIMAL},
      unforeseen_expenses = #{unforeseenExpenses,jdbcType=DECIMAL},
      reconnaissance_design_explain = #{reconnaissanceDesignExplain,jdbcType=VARCHAR},
      infrastructure_cost_explain = #{infrastructureCostExplain,jdbcType=VARCHAR},
      infrastructure_matching_cost_explain = #{infrastructureMatchingCostExplain,jdbcType=VARCHAR},
      dev_during_explain = #{devDuringExplain,jdbcType=VARCHAR},
      other_engineering_cost_explain = #{otherEngineeringCostExplain,jdbcType=VARCHAR},
      unforeseen_expenses_explain = #{unforeseenExpensesExplain,jdbcType=VARCHAR},
      deed_tax_rate = #{deedTaxRate,jdbcType=DECIMAL},
      deed_tax_rate_explain = #{deedTaxRateExplain,jdbcType=VARCHAR},
      transaction_tax_rate = #{transactionTaxRate,jdbcType=DECIMAL},
      transaction_tax_rate_explain = #{transactionTaxRateExplain,jdbcType=VARCHAR},
      management_expense = #{managementExpense,jdbcType=DECIMAL},
      management_expense_explain = #{managementExpenseExplain,jdbcType=VARCHAR},
      land_get_relevant = #{landGetRelevant,jdbcType=DECIMAL},
      land_get_relevant_explain = #{landGetRelevantExplain,jdbcType=VARCHAR},
      sales_fee = #{salesFee,jdbcType=DECIMAL},
      sales_fee_explain = #{salesFeeExplain,jdbcType=VARCHAR},
      interest_investment_tax = #{interestInvestmentTax,jdbcType=DECIMAL},
      interest_investment_tax_explain = #{interestInvestmentTaxExplain,jdbcType=VARCHAR},
      investment_profit_tax = #{investmentProfitTax,jdbcType=DECIMAL},
      investment_profit_tax_explain = #{investmentProfitTaxExplain,jdbcType=VARCHAR},
      sales_tax_and_additional = #{salesTaxAndAdditional,jdbcType=DECIMAL},
      sales_tax_and_additional_explain = #{salesTaxAndAdditionalExplain,jdbcType=VARCHAR},
      land_value_added_tax = #{landValueAddedTax,jdbcType=DECIMAL},
      land_value_added_tax_explain = #{landValueAddedTaxExplain,jdbcType=VARCHAR},
      project_development_income_tax = #{projectDevelopmentIncomeTax,jdbcType=DECIMAL},
      project_development_income_tax_explain = #{projectDevelopmentIncomeTaxExplain,jdbcType=VARCHAR},
      remuneration_rate = #{remunerationRate,jdbcType=DECIMAL},
      statutory_life = #{statutoryLife,jdbcType=DECIMAL},
      remaining_years = #{remainingYears,jdbcType=DECIMAL},
      amendment_status_rights = #{amendmentStatusRights,jdbcType=DECIMAL},
      amendment_status_rights_explain = #{amendmentStatusRightsExplain,jdbcType=VARCHAR},
      other_amendments = #{otherAmendments,jdbcType=DECIMAL},
      other_amendments_explain = #{otherAmendmentsExplain,jdbcType=VARCHAR},
      development_degree_revision = #{developmentDegreeRevision,jdbcType=DECIMAL},
      development_degree_revision_explain = #{developmentDegreeRevisionExplain,jdbcType=VARCHAR},
      center_id = #{centerId,jdbcType=INTEGER},
      creator = #{creator,jdbcType=VARCHAR},
      gmt_created = #{gmtCreated,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      land_area = #{landArea,jdbcType=DECIMAL}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>