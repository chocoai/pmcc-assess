<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.copower.pmcc.assess.dal.basis.mapper.BasicEstateMapper">
  <resultMap id="BaseResultMap" type="com.copower.pmcc.assess.dal.basis.entity.BasicEstate">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="apply_id" jdbcType="INTEGER" property="applyId" />
    <result column="quote_id" jdbcType="INTEGER" property="quoteId" />
    <result column="classify" jdbcType="INTEGER" property="classify" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="province" jdbcType="VARCHAR" property="province" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="district" jdbcType="VARCHAR" property="district" />
    <result column="block_id" jdbcType="INTEGER" property="blockId" />
    <result column="block_name" jdbcType="VARCHAR" property="blockName" />
    <result column="block_description" jdbcType="VARCHAR" property="blockDescription" />
    <result column="developer" jdbcType="VARCHAR" property="developer" />
    <result column="developer_name" jdbcType="VARCHAR" property="developerName" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="street_number" jdbcType="VARCHAR" property="streetNumber" />
    <result column="street" jdbcType="VARCHAR" property="street" />
    <result column="number" jdbcType="VARCHAR" property="number" />
    <result column="land_level" jdbcType="INTEGER" property="landLevel" />
    <result column="attach_number" jdbcType="VARCHAR" property="attachNumber" />
    <result column="floor_area" jdbcType="DECIMAL" property="floorArea" />
    <result column="cover_an_area" jdbcType="DECIMAL" property="coverAnArea" />
    <result column="volumetric_rate" jdbcType="VARCHAR" property="volumetricRate" />
    <result column="greening_rate" jdbcType="VARCHAR" property="greeningRate" />
    <result column="open_time" jdbcType="TIMESTAMP" property="openTime" />
    <result column="building_number" jdbcType="INTEGER" property="buildingNumber" />
    <result column="position" jdbcType="INTEGER" property="position" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="average_price" jdbcType="VARCHAR" property="averagePrice" />
    <result column="price_range" jdbcType="VARCHAR" property="priceRange" />
    <result column="supply_heating" jdbcType="INTEGER" property="supplyHeating" />
    <result column="supply_power" jdbcType="INTEGER" property="supplyPower" />
    <result column="supply_communication" jdbcType="INTEGER" property="supplyCommunication" />
    <result column="supply_road" jdbcType="INTEGER" property="supplyRoad" />
    <result column="supply_water" jdbcType="INTEGER" property="supplyWater" />
    <result column="drain_water" jdbcType="INTEGER" property="drainWater" />
    <result column="supply_gas" jdbcType="INTEGER" property="supplyGas" />
    <result column="infrastructure" jdbcType="VARCHAR" property="infrastructure" />
    <result column="infrastructure_completeness" jdbcType="INTEGER" property="infrastructureCompleteness" />
    <result column="location_describe" jdbcType="VARCHAR" property="locationDescribe" />
    <result column="display_case_id" jdbcType="INTEGER" property="displayCaseId" />
    <result column="map_id" jdbcType="INTEGER" property="mapId" />
    <result column="relevance_id" jdbcType="INTEGER" property="relevanceId" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="bis_case" jdbcType="BIT" property="bisCase" />
    <result column="average_price_unit" jdbcType="VARCHAR" property="averagePriceUnit" />
    <result column="price_range_unit" jdbcType="VARCHAR" property="priceRangeUnit" />
    <result column="cover_an_area_unit" jdbcType="VARCHAR" property="coverAnAreaUnit" />
    <result column="acquisition_type" jdbcType="VARCHAR" property="acquisitionType" />
    <result column="land_right_nature" jdbcType="VARCHAR" property="landRightNature" />
    <result column="land_right_type" jdbcType="VARCHAR" property="landRightType" />
    <result column="land_piece_numbering" jdbcType="VARCHAR" property="landPieceNumbering" />
    <result column="regional_planning" jdbcType="VARCHAR" property="regionalPlanning" />
    <result column="bis_delete" jdbcType="BIT" property="bisDelete" />
    <result column="bis_enable" jdbcType="BIT" property="bisEnable" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="gmt_created" jdbcType="TIMESTAMP" property="gmtCreated" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, apply_id, quote_id, classify, type, province, city, district, block_id, block_name, 
    block_description, developer, developer_name, name, street_number, street, number, 
    land_level, attach_number, floor_area, cover_an_area, volumetric_rate, greening_rate, 
    open_time, building_number, position, description, average_price, price_range, supply_heating, 
    supply_power, supply_communication, supply_road, supply_water, drain_water, supply_gas, 
    infrastructure, infrastructure_completeness, location_describe, display_case_id, 
    map_id, relevance_id, version, bis_case, average_price_unit, price_range_unit, cover_an_area_unit, 
    acquisition_type, land_right_nature, land_right_type, land_piece_numbering, regional_planning, 
    bis_delete, bis_enable, creator, gmt_created, gmt_modified
  </sql>
  <select id="selectByExample" parameterType="com.copower.pmcc.assess.dal.basis.entity.BasicEstateExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_basic_estate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_basic_estate
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_basic_estate
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.copower.pmcc.assess.dal.basis.entity.BasicEstateExample">
    delete from tb_basic_estate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.copower.pmcc.assess.dal.basis.entity.BasicEstate">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_basic_estate (apply_id, quote_id, classify, 
      type, province, city, 
      district, block_id, block_name, 
      block_description, developer, developer_name, 
      name, street_number, street, 
      number, land_level, attach_number, 
      floor_area, cover_an_area, volumetric_rate, 
      greening_rate, open_time, building_number, 
      position, description, average_price, 
      price_range, supply_heating, supply_power, 
      supply_communication, supply_road, supply_water, 
      drain_water, supply_gas, infrastructure, 
      infrastructure_completeness, location_describe, 
      display_case_id, map_id, relevance_id, 
      version, bis_case, average_price_unit, 
      price_range_unit, cover_an_area_unit, acquisition_type, 
      land_right_nature, land_right_type, land_piece_numbering, 
      regional_planning, bis_delete, bis_enable, 
      creator, gmt_created, gmt_modified
      )
    values (#{applyId,jdbcType=INTEGER}, #{quoteId,jdbcType=INTEGER}, #{classify,jdbcType=INTEGER}, 
      #{type,jdbcType=INTEGER}, #{province,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, 
      #{district,jdbcType=VARCHAR}, #{blockId,jdbcType=INTEGER}, #{blockName,jdbcType=VARCHAR}, 
      #{blockDescription,jdbcType=VARCHAR}, #{developer,jdbcType=VARCHAR}, #{developerName,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{streetNumber,jdbcType=VARCHAR}, #{street,jdbcType=VARCHAR}, 
      #{number,jdbcType=VARCHAR}, #{landLevel,jdbcType=INTEGER}, #{attachNumber,jdbcType=VARCHAR}, 
      #{floorArea,jdbcType=DECIMAL}, #{coverAnArea,jdbcType=DECIMAL}, #{volumetricRate,jdbcType=VARCHAR}, 
      #{greeningRate,jdbcType=VARCHAR}, #{openTime,jdbcType=TIMESTAMP}, #{buildingNumber,jdbcType=INTEGER}, 
      #{position,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR}, #{averagePrice,jdbcType=VARCHAR}, 
      #{priceRange,jdbcType=VARCHAR}, #{supplyHeating,jdbcType=INTEGER}, #{supplyPower,jdbcType=INTEGER}, 
      #{supplyCommunication,jdbcType=INTEGER}, #{supplyRoad,jdbcType=INTEGER}, #{supplyWater,jdbcType=INTEGER}, 
      #{drainWater,jdbcType=INTEGER}, #{supplyGas,jdbcType=INTEGER}, #{infrastructure,jdbcType=VARCHAR}, 
      #{infrastructureCompleteness,jdbcType=INTEGER}, #{locationDescribe,jdbcType=VARCHAR}, 
      #{displayCaseId,jdbcType=INTEGER}, #{mapId,jdbcType=INTEGER}, #{relevanceId,jdbcType=INTEGER}, 
      #{version,jdbcType=INTEGER}, #{bisCase,jdbcType=BIT}, #{averagePriceUnit,jdbcType=VARCHAR}, 
      #{priceRangeUnit,jdbcType=VARCHAR}, #{coverAnAreaUnit,jdbcType=VARCHAR}, #{acquisitionType,jdbcType=VARCHAR}, 
      #{landRightNature,jdbcType=VARCHAR}, #{landRightType,jdbcType=VARCHAR}, #{landPieceNumbering,jdbcType=VARCHAR}, 
      #{regionalPlanning,jdbcType=VARCHAR}, #{bisDelete,jdbcType=BIT}, #{bisEnable,jdbcType=BIT}, 
      #{creator,jdbcType=VARCHAR}, #{gmtCreated,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="map">
    <selectKey keyProperty="record.id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_basic_estate
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.applyId != null">
            apply_id,
          </if>
          <if test="record.quoteId != null">
            quote_id,
          </if>
          <if test="record.classify != null">
            classify,
          </if>
          <if test="record.type != null">
            type,
          </if>
          <if test="record.province != null">
            province,
          </if>
          <if test="record.city != null">
            city,
          </if>
          <if test="record.district != null">
            district,
          </if>
          <if test="record.blockId != null">
            block_id,
          </if>
          <if test="record.blockName != null">
            block_name,
          </if>
          <if test="record.blockDescription != null">
            block_description,
          </if>
          <if test="record.developer != null">
            developer,
          </if>
          <if test="record.developerName != null">
            developer_name,
          </if>
          <if test="record.name != null">
            name,
          </if>
          <if test="record.streetNumber != null">
            street_number,
          </if>
          <if test="record.street != null">
            street,
          </if>
          <if test="record.number != null">
            number,
          </if>
          <if test="record.landLevel != null">
            land_level,
          </if>
          <if test="record.attachNumber != null">
            attach_number,
          </if>
          <if test="record.floorArea != null">
            floor_area,
          </if>
          <if test="record.coverAnArea != null">
            cover_an_area,
          </if>
          <if test="record.volumetricRate != null">
            volumetric_rate,
          </if>
          <if test="record.greeningRate != null">
            greening_rate,
          </if>
          <if test="record.openTime != null">
            open_time,
          </if>
          <if test="record.buildingNumber != null">
            building_number,
          </if>
          <if test="record.position != null">
            position,
          </if>
          <if test="record.description != null">
            description,
          </if>
          <if test="record.averagePrice != null">
            average_price,
          </if>
          <if test="record.priceRange != null">
            price_range,
          </if>
          <if test="record.supplyHeating != null">
            supply_heating,
          </if>
          <if test="record.supplyPower != null">
            supply_power,
          </if>
          <if test="record.supplyCommunication != null">
            supply_communication,
          </if>
          <if test="record.supplyRoad != null">
            supply_road,
          </if>
          <if test="record.supplyWater != null">
            supply_water,
          </if>
          <if test="record.drainWater != null">
            drain_water,
          </if>
          <if test="record.supplyGas != null">
            supply_gas,
          </if>
          <if test="record.infrastructure != null">
            infrastructure,
          </if>
          <if test="record.infrastructureCompleteness != null">
            infrastructure_completeness,
          </if>
          <if test="record.locationDescribe != null">
            location_describe,
          </if>
          <if test="record.displayCaseId != null">
            display_case_id,
          </if>
          <if test="record.mapId != null">
            map_id,
          </if>
          <if test="record.relevanceId != null">
            relevance_id,
          </if>
          <if test="record.version != null">
            version,
          </if>
          <if test="record.bisCase != null">
            bis_case,
          </if>
          <if test="record.averagePriceUnit != null">
            average_price_unit,
          </if>
          <if test="record.priceRangeUnit != null">
            price_range_unit,
          </if>
          <if test="record.coverAnAreaUnit != null">
            cover_an_area_unit,
          </if>
          <if test="record.acquisitionType != null">
            acquisition_type,
          </if>
          <if test="record.landRightNature != null">
            land_right_nature,
          </if>
          <if test="record.landRightType != null">
            land_right_type,
          </if>
          <if test="record.landPieceNumbering != null">
            land_piece_numbering,
          </if>
          <if test="record.regionalPlanning != null">
            regional_planning,
          </if>
          <if test="record.bisDelete != null">
            bis_delete,
          </if>
          <if test="record.bisEnable != null">
            bis_enable,
          </if>
          <if test="record.creator != null">
            creator,
          </if>
          <if test="record.gmtCreated != null">
            gmt_created,
          </if>
          <if test="record.gmtModified != null">
            gmt_modified,
          </if>
        </trim>
        <trim prefix="(" suffix=")" suffixOverrides="," />
      </otherwise>
    </choose>
    values
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.applyId != null">
            #{record.applyId,jdbcType=INTEGER},
          </if>
          <if test="record.quoteId != null">
            #{record.quoteId,jdbcType=INTEGER},
          </if>
          <if test="record.classify != null">
            #{record.classify,jdbcType=INTEGER},
          </if>
          <if test="record.type != null">
            #{record.type,jdbcType=INTEGER},
          </if>
          <if test="record.province != null">
            #{record.province,jdbcType=VARCHAR},
          </if>
          <if test="record.city != null">
            #{record.city,jdbcType=VARCHAR},
          </if>
          <if test="record.district != null">
            #{record.district,jdbcType=VARCHAR},
          </if>
          <if test="record.blockId != null">
            #{record.blockId,jdbcType=INTEGER},
          </if>
          <if test="record.blockName != null">
            #{record.blockName,jdbcType=VARCHAR},
          </if>
          <if test="record.blockDescription != null">
            #{record.blockDescription,jdbcType=VARCHAR},
          </if>
          <if test="record.developer != null">
            #{record.developer,jdbcType=VARCHAR},
          </if>
          <if test="record.developerName != null">
            #{record.developerName,jdbcType=VARCHAR},
          </if>
          <if test="record.name != null">
            #{record.name,jdbcType=VARCHAR},
          </if>
          <if test="record.streetNumber != null">
            #{record.streetNumber,jdbcType=VARCHAR},
          </if>
          <if test="record.street != null">
            #{record.street,jdbcType=VARCHAR},
          </if>
          <if test="record.number != null">
            #{record.number,jdbcType=VARCHAR},
          </if>
          <if test="record.landLevel != null">
            #{record.landLevel,jdbcType=INTEGER},
          </if>
          <if test="record.attachNumber != null">
            #{record.attachNumber,jdbcType=VARCHAR},
          </if>
          <if test="record.floorArea != null">
            #{record.floorArea,jdbcType=DECIMAL},
          </if>
          <if test="record.coverAnArea != null">
            #{record.coverAnArea,jdbcType=DECIMAL},
          </if>
          <if test="record.volumetricRate != null">
            #{record.volumetricRate,jdbcType=VARCHAR},
          </if>
          <if test="record.greeningRate != null">
            #{record.greeningRate,jdbcType=VARCHAR},
          </if>
          <if test="record.openTime != null">
            #{record.openTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.buildingNumber != null">
            #{record.buildingNumber,jdbcType=INTEGER},
          </if>
          <if test="record.position != null">
            #{record.position,jdbcType=INTEGER},
          </if>
          <if test="record.description != null">
            #{record.description,jdbcType=VARCHAR},
          </if>
          <if test="record.averagePrice != null">
            #{record.averagePrice,jdbcType=VARCHAR},
          </if>
          <if test="record.priceRange != null">
            #{record.priceRange,jdbcType=VARCHAR},
          </if>
          <if test="record.supplyHeating != null">
            #{record.supplyHeating,jdbcType=INTEGER},
          </if>
          <if test="record.supplyPower != null">
            #{record.supplyPower,jdbcType=INTEGER},
          </if>
          <if test="record.supplyCommunication != null">
            #{record.supplyCommunication,jdbcType=INTEGER},
          </if>
          <if test="record.supplyRoad != null">
            #{record.supplyRoad,jdbcType=INTEGER},
          </if>
          <if test="record.supplyWater != null">
            #{record.supplyWater,jdbcType=INTEGER},
          </if>
          <if test="record.drainWater != null">
            #{record.drainWater,jdbcType=INTEGER},
          </if>
          <if test="record.supplyGas != null">
            #{record.supplyGas,jdbcType=INTEGER},
          </if>
          <if test="record.infrastructure != null">
            #{record.infrastructure,jdbcType=VARCHAR},
          </if>
          <if test="record.infrastructureCompleteness != null">
            #{record.infrastructureCompleteness,jdbcType=INTEGER},
          </if>
          <if test="record.locationDescribe != null">
            #{record.locationDescribe,jdbcType=VARCHAR},
          </if>
          <if test="record.displayCaseId != null">
            #{record.displayCaseId,jdbcType=INTEGER},
          </if>
          <if test="record.mapId != null">
            #{record.mapId,jdbcType=INTEGER},
          </if>
          <if test="record.relevanceId != null">
            #{record.relevanceId,jdbcType=INTEGER},
          </if>
          <if test="record.version != null">
            #{record.version,jdbcType=INTEGER},
          </if>
          <if test="record.bisCase != null">
            #{record.bisCase,jdbcType=BIT},
          </if>
          <if test="record.averagePriceUnit != null">
            #{record.averagePriceUnit,jdbcType=VARCHAR},
          </if>
          <if test="record.priceRangeUnit != null">
            #{record.priceRangeUnit,jdbcType=VARCHAR},
          </if>
          <if test="record.coverAnAreaUnit != null">
            #{record.coverAnAreaUnit,jdbcType=VARCHAR},
          </if>
          <if test="record.acquisitionType != null">
            #{record.acquisitionType,jdbcType=VARCHAR},
          </if>
          <if test="record.landRightNature != null">
            #{record.landRightNature,jdbcType=VARCHAR},
          </if>
          <if test="record.landRightType != null">
            #{record.landRightType,jdbcType=VARCHAR},
          </if>
          <if test="record.landPieceNumbering != null">
            #{record.landPieceNumbering,jdbcType=VARCHAR},
          </if>
          <if test="record.regionalPlanning != null">
            #{record.regionalPlanning,jdbcType=VARCHAR},
          </if>
          <if test="record.bisDelete != null">
            #{record.bisDelete,jdbcType=BIT},
          </if>
          <if test="record.bisEnable != null">
            #{record.bisEnable,jdbcType=BIT},
          </if>
          <if test="record.creator != null">
            #{record.creator,jdbcType=VARCHAR},
          </if>
          <if test="record.gmtCreated != null">
            #{record.gmtCreated,jdbcType=TIMESTAMP},
          </if>
          <if test="record.gmtModified != null">
            #{record.gmtModified,jdbcType=TIMESTAMP},
          </if>
        </trim>
      </otherwise>
    </choose>
  </insert>
  <select id="countByExample" parameterType="com.copower.pmcc.assess.dal.basis.entity.BasicEstateExample" resultType="java.lang.Long">
    select count(*) from tb_basic_estate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_basic_estate
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.id != null">
            id = #{record.id,jdbcType=INTEGER},
          </if>
          <if test="record.applyId != null">
            apply_id = #{record.applyId,jdbcType=INTEGER},
          </if>
          <if test="record.quoteId != null">
            quote_id = #{record.quoteId,jdbcType=INTEGER},
          </if>
          <if test="record.classify != null">
            classify = #{record.classify,jdbcType=INTEGER},
          </if>
          <if test="record.type != null">
            type = #{record.type,jdbcType=INTEGER},
          </if>
          <if test="record.province != null">
            province = #{record.province,jdbcType=VARCHAR},
          </if>
          <if test="record.city != null">
            city = #{record.city,jdbcType=VARCHAR},
          </if>
          <if test="record.district != null">
            district = #{record.district,jdbcType=VARCHAR},
          </if>
          <if test="record.blockId != null">
            block_id = #{record.blockId,jdbcType=INTEGER},
          </if>
          <if test="record.blockName != null">
            block_name = #{record.blockName,jdbcType=VARCHAR},
          </if>
          <if test="record.blockDescription != null">
            block_description = #{record.blockDescription,jdbcType=VARCHAR},
          </if>
          <if test="record.developer != null">
            developer = #{record.developer,jdbcType=VARCHAR},
          </if>
          <if test="record.developerName != null">
            developer_name = #{record.developerName,jdbcType=VARCHAR},
          </if>
          <if test="record.name != null">
            name = #{record.name,jdbcType=VARCHAR},
          </if>
          <if test="record.streetNumber != null">
            street_number = #{record.streetNumber,jdbcType=VARCHAR},
          </if>
          <if test="record.street != null">
            street = #{record.street,jdbcType=VARCHAR},
          </if>
          <if test="record.number != null">
            number = #{record.number,jdbcType=VARCHAR},
          </if>
          <if test="record.landLevel != null">
            land_level = #{record.landLevel,jdbcType=INTEGER},
          </if>
          <if test="record.attachNumber != null">
            attach_number = #{record.attachNumber,jdbcType=VARCHAR},
          </if>
          <if test="record.floorArea != null">
            floor_area = #{record.floorArea,jdbcType=DECIMAL},
          </if>
          <if test="record.coverAnArea != null">
            cover_an_area = #{record.coverAnArea,jdbcType=DECIMAL},
          </if>
          <if test="record.volumetricRate != null">
            volumetric_rate = #{record.volumetricRate,jdbcType=VARCHAR},
          </if>
          <if test="record.greeningRate != null">
            greening_rate = #{record.greeningRate,jdbcType=VARCHAR},
          </if>
          <if test="record.openTime != null">
            open_time = #{record.openTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.buildingNumber != null">
            building_number = #{record.buildingNumber,jdbcType=INTEGER},
          </if>
          <if test="record.position != null">
            position = #{record.position,jdbcType=INTEGER},
          </if>
          <if test="record.description != null">
            description = #{record.description,jdbcType=VARCHAR},
          </if>
          <if test="record.averagePrice != null">
            average_price = #{record.averagePrice,jdbcType=VARCHAR},
          </if>
          <if test="record.priceRange != null">
            price_range = #{record.priceRange,jdbcType=VARCHAR},
          </if>
          <if test="record.supplyHeating != null">
            supply_heating = #{record.supplyHeating,jdbcType=INTEGER},
          </if>
          <if test="record.supplyPower != null">
            supply_power = #{record.supplyPower,jdbcType=INTEGER},
          </if>
          <if test="record.supplyCommunication != null">
            supply_communication = #{record.supplyCommunication,jdbcType=INTEGER},
          </if>
          <if test="record.supplyRoad != null">
            supply_road = #{record.supplyRoad,jdbcType=INTEGER},
          </if>
          <if test="record.supplyWater != null">
            supply_water = #{record.supplyWater,jdbcType=INTEGER},
          </if>
          <if test="record.drainWater != null">
            drain_water = #{record.drainWater,jdbcType=INTEGER},
          </if>
          <if test="record.supplyGas != null">
            supply_gas = #{record.supplyGas,jdbcType=INTEGER},
          </if>
          <if test="record.infrastructure != null">
            infrastructure = #{record.infrastructure,jdbcType=VARCHAR},
          </if>
          <if test="record.infrastructureCompleteness != null">
            infrastructure_completeness = #{record.infrastructureCompleteness,jdbcType=INTEGER},
          </if>
          <if test="record.locationDescribe != null">
            location_describe = #{record.locationDescribe,jdbcType=VARCHAR},
          </if>
          <if test="record.displayCaseId != null">
            display_case_id = #{record.displayCaseId,jdbcType=INTEGER},
          </if>
          <if test="record.mapId != null">
            map_id = #{record.mapId,jdbcType=INTEGER},
          </if>
          <if test="record.relevanceId != null">
            relevance_id = #{record.relevanceId,jdbcType=INTEGER},
          </if>
          <if test="record.version != null">
            version = #{record.version,jdbcType=INTEGER},
          </if>
          <if test="record.bisCase != null">
            bis_case = #{record.bisCase,jdbcType=BIT},
          </if>
          <if test="record.averagePriceUnit != null">
            average_price_unit = #{record.averagePriceUnit,jdbcType=VARCHAR},
          </if>
          <if test="record.priceRangeUnit != null">
            price_range_unit = #{record.priceRangeUnit,jdbcType=VARCHAR},
          </if>
          <if test="record.coverAnAreaUnit != null">
            cover_an_area_unit = #{record.coverAnAreaUnit,jdbcType=VARCHAR},
          </if>
          <if test="record.acquisitionType != null">
            acquisition_type = #{record.acquisitionType,jdbcType=VARCHAR},
          </if>
          <if test="record.landRightNature != null">
            land_right_nature = #{record.landRightNature,jdbcType=VARCHAR},
          </if>
          <if test="record.landRightType != null">
            land_right_type = #{record.landRightType,jdbcType=VARCHAR},
          </if>
          <if test="record.landPieceNumbering != null">
            land_piece_numbering = #{record.landPieceNumbering,jdbcType=VARCHAR},
          </if>
          <if test="record.regionalPlanning != null">
            regional_planning = #{record.regionalPlanning,jdbcType=VARCHAR},
          </if>
          <if test="record.bisDelete != null">
            bis_delete = #{record.bisDelete,jdbcType=BIT},
          </if>
          <if test="record.bisEnable != null">
            bis_enable = #{record.bisEnable,jdbcType=BIT},
          </if>
          <if test="record.creator != null">
            creator = #{record.creator,jdbcType=VARCHAR},
          </if>
          <if test="record.gmtCreated != null">
            gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
          </if>
          <if test="record.gmtModified != null">
            gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
          </if>
        </trim>
      </otherwise>
    </choose>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_basic_estate
    set id = #{record.id,jdbcType=INTEGER},
      apply_id = #{record.applyId,jdbcType=INTEGER},
      quote_id = #{record.quoteId,jdbcType=INTEGER},
      classify = #{record.classify,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      province = #{record.province,jdbcType=VARCHAR},
      city = #{record.city,jdbcType=VARCHAR},
      district = #{record.district,jdbcType=VARCHAR},
      block_id = #{record.blockId,jdbcType=INTEGER},
      block_name = #{record.blockName,jdbcType=VARCHAR},
      block_description = #{record.blockDescription,jdbcType=VARCHAR},
      developer = #{record.developer,jdbcType=VARCHAR},
      developer_name = #{record.developerName,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      street_number = #{record.streetNumber,jdbcType=VARCHAR},
      street = #{record.street,jdbcType=VARCHAR},
      number = #{record.number,jdbcType=VARCHAR},
      land_level = #{record.landLevel,jdbcType=INTEGER},
      attach_number = #{record.attachNumber,jdbcType=VARCHAR},
      floor_area = #{record.floorArea,jdbcType=DECIMAL},
      cover_an_area = #{record.coverAnArea,jdbcType=DECIMAL},
      volumetric_rate = #{record.volumetricRate,jdbcType=VARCHAR},
      greening_rate = #{record.greeningRate,jdbcType=VARCHAR},
      open_time = #{record.openTime,jdbcType=TIMESTAMP},
      building_number = #{record.buildingNumber,jdbcType=INTEGER},
      position = #{record.position,jdbcType=INTEGER},
      description = #{record.description,jdbcType=VARCHAR},
      average_price = #{record.averagePrice,jdbcType=VARCHAR},
      price_range = #{record.priceRange,jdbcType=VARCHAR},
      supply_heating = #{record.supplyHeating,jdbcType=INTEGER},
      supply_power = #{record.supplyPower,jdbcType=INTEGER},
      supply_communication = #{record.supplyCommunication,jdbcType=INTEGER},
      supply_road = #{record.supplyRoad,jdbcType=INTEGER},
      supply_water = #{record.supplyWater,jdbcType=INTEGER},
      drain_water = #{record.drainWater,jdbcType=INTEGER},
      supply_gas = #{record.supplyGas,jdbcType=INTEGER},
      infrastructure = #{record.infrastructure,jdbcType=VARCHAR},
      infrastructure_completeness = #{record.infrastructureCompleteness,jdbcType=INTEGER},
      location_describe = #{record.locationDescribe,jdbcType=VARCHAR},
      display_case_id = #{record.displayCaseId,jdbcType=INTEGER},
      map_id = #{record.mapId,jdbcType=INTEGER},
      relevance_id = #{record.relevanceId,jdbcType=INTEGER},
      version = #{record.version,jdbcType=INTEGER},
      bis_case = #{record.bisCase,jdbcType=BIT},
      average_price_unit = #{record.averagePriceUnit,jdbcType=VARCHAR},
      price_range_unit = #{record.priceRangeUnit,jdbcType=VARCHAR},
      cover_an_area_unit = #{record.coverAnAreaUnit,jdbcType=VARCHAR},
      acquisition_type = #{record.acquisitionType,jdbcType=VARCHAR},
      land_right_nature = #{record.landRightNature,jdbcType=VARCHAR},
      land_right_type = #{record.landRightType,jdbcType=VARCHAR},
      land_piece_numbering = #{record.landPieceNumbering,jdbcType=VARCHAR},
      regional_planning = #{record.regionalPlanning,jdbcType=VARCHAR},
      bis_delete = #{record.bisDelete,jdbcType=BIT},
      bis_enable = #{record.bisEnable,jdbcType=BIT},
      creator = #{record.creator,jdbcType=VARCHAR},
      gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="map">
    update tb_basic_estate
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.applyId != null">
            apply_id = #{record.applyId,jdbcType=INTEGER},
          </if>
          <if test="record.quoteId != null">
            quote_id = #{record.quoteId,jdbcType=INTEGER},
          </if>
          <if test="record.classify != null">
            classify = #{record.classify,jdbcType=INTEGER},
          </if>
          <if test="record.type != null">
            type = #{record.type,jdbcType=INTEGER},
          </if>
          <if test="record.province != null">
            province = #{record.province,jdbcType=VARCHAR},
          </if>
          <if test="record.city != null">
            city = #{record.city,jdbcType=VARCHAR},
          </if>
          <if test="record.district != null">
            district = #{record.district,jdbcType=VARCHAR},
          </if>
          <if test="record.blockId != null">
            block_id = #{record.blockId,jdbcType=INTEGER},
          </if>
          <if test="record.blockName != null">
            block_name = #{record.blockName,jdbcType=VARCHAR},
          </if>
          <if test="record.blockDescription != null">
            block_description = #{record.blockDescription,jdbcType=VARCHAR},
          </if>
          <if test="record.developer != null">
            developer = #{record.developer,jdbcType=VARCHAR},
          </if>
          <if test="record.developerName != null">
            developer_name = #{record.developerName,jdbcType=VARCHAR},
          </if>
          <if test="record.name != null">
            name = #{record.name,jdbcType=VARCHAR},
          </if>
          <if test="record.streetNumber != null">
            street_number = #{record.streetNumber,jdbcType=VARCHAR},
          </if>
          <if test="record.street != null">
            street = #{record.street,jdbcType=VARCHAR},
          </if>
          <if test="record.number != null">
            number = #{record.number,jdbcType=VARCHAR},
          </if>
          <if test="record.landLevel != null">
            land_level = #{record.landLevel,jdbcType=INTEGER},
          </if>
          <if test="record.attachNumber != null">
            attach_number = #{record.attachNumber,jdbcType=VARCHAR},
          </if>
          <if test="record.floorArea != null">
            floor_area = #{record.floorArea,jdbcType=DECIMAL},
          </if>
          <if test="record.coverAnArea != null">
            cover_an_area = #{record.coverAnArea,jdbcType=DECIMAL},
          </if>
          <if test="record.volumetricRate != null">
            volumetric_rate = #{record.volumetricRate,jdbcType=VARCHAR},
          </if>
          <if test="record.greeningRate != null">
            greening_rate = #{record.greeningRate,jdbcType=VARCHAR},
          </if>
          <if test="record.openTime != null">
            open_time = #{record.openTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.buildingNumber != null">
            building_number = #{record.buildingNumber,jdbcType=INTEGER},
          </if>
          <if test="record.position != null">
            position = #{record.position,jdbcType=INTEGER},
          </if>
          <if test="record.description != null">
            description = #{record.description,jdbcType=VARCHAR},
          </if>
          <if test="record.averagePrice != null">
            average_price = #{record.averagePrice,jdbcType=VARCHAR},
          </if>
          <if test="record.priceRange != null">
            price_range = #{record.priceRange,jdbcType=VARCHAR},
          </if>
          <if test="record.supplyHeating != null">
            supply_heating = #{record.supplyHeating,jdbcType=INTEGER},
          </if>
          <if test="record.supplyPower != null">
            supply_power = #{record.supplyPower,jdbcType=INTEGER},
          </if>
          <if test="record.supplyCommunication != null">
            supply_communication = #{record.supplyCommunication,jdbcType=INTEGER},
          </if>
          <if test="record.supplyRoad != null">
            supply_road = #{record.supplyRoad,jdbcType=INTEGER},
          </if>
          <if test="record.supplyWater != null">
            supply_water = #{record.supplyWater,jdbcType=INTEGER},
          </if>
          <if test="record.drainWater != null">
            drain_water = #{record.drainWater,jdbcType=INTEGER},
          </if>
          <if test="record.supplyGas != null">
            supply_gas = #{record.supplyGas,jdbcType=INTEGER},
          </if>
          <if test="record.infrastructure != null">
            infrastructure = #{record.infrastructure,jdbcType=VARCHAR},
          </if>
          <if test="record.infrastructureCompleteness != null">
            infrastructure_completeness = #{record.infrastructureCompleteness,jdbcType=INTEGER},
          </if>
          <if test="record.locationDescribe != null">
            location_describe = #{record.locationDescribe,jdbcType=VARCHAR},
          </if>
          <if test="record.displayCaseId != null">
            display_case_id = #{record.displayCaseId,jdbcType=INTEGER},
          </if>
          <if test="record.mapId != null">
            map_id = #{record.mapId,jdbcType=INTEGER},
          </if>
          <if test="record.relevanceId != null">
            relevance_id = #{record.relevanceId,jdbcType=INTEGER},
          </if>
          <if test="record.version != null">
            version = #{record.version,jdbcType=INTEGER},
          </if>
          <if test="record.bisCase != null">
            bis_case = #{record.bisCase,jdbcType=BIT},
          </if>
          <if test="record.averagePriceUnit != null">
            average_price_unit = #{record.averagePriceUnit,jdbcType=VARCHAR},
          </if>
          <if test="record.priceRangeUnit != null">
            price_range_unit = #{record.priceRangeUnit,jdbcType=VARCHAR},
          </if>
          <if test="record.coverAnAreaUnit != null">
            cover_an_area_unit = #{record.coverAnAreaUnit,jdbcType=VARCHAR},
          </if>
          <if test="record.acquisitionType != null">
            acquisition_type = #{record.acquisitionType,jdbcType=VARCHAR},
          </if>
          <if test="record.landRightNature != null">
            land_right_nature = #{record.landRightNature,jdbcType=VARCHAR},
          </if>
          <if test="record.landRightType != null">
            land_right_type = #{record.landRightType,jdbcType=VARCHAR},
          </if>
          <if test="record.landPieceNumbering != null">
            land_piece_numbering = #{record.landPieceNumbering,jdbcType=VARCHAR},
          </if>
          <if test="record.regionalPlanning != null">
            regional_planning = #{record.regionalPlanning,jdbcType=VARCHAR},
          </if>
          <if test="record.bisDelete != null">
            bis_delete = #{record.bisDelete,jdbcType=BIT},
          </if>
          <if test="record.bisEnable != null">
            bis_enable = #{record.bisEnable,jdbcType=BIT},
          </if>
          <if test="record.creator != null">
            creator = #{record.creator,jdbcType=VARCHAR},
          </if>
          <if test="record.gmtCreated != null">
            gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
          </if>
          <if test="record.gmtModified != null">
            gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
          </if>
        </trim>
      </otherwise>
    </choose>
    where id = #{record.id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.copower.pmcc.assess.dal.basis.entity.BasicEstate">
    update tb_basic_estate
    set apply_id = #{applyId,jdbcType=INTEGER},
      quote_id = #{quoteId,jdbcType=INTEGER},
      classify = #{classify,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      province = #{province,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      district = #{district,jdbcType=VARCHAR},
      block_id = #{blockId,jdbcType=INTEGER},
      block_name = #{blockName,jdbcType=VARCHAR},
      block_description = #{blockDescription,jdbcType=VARCHAR},
      developer = #{developer,jdbcType=VARCHAR},
      developer_name = #{developerName,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      street_number = #{streetNumber,jdbcType=VARCHAR},
      street = #{street,jdbcType=VARCHAR},
      number = #{number,jdbcType=VARCHAR},
      land_level = #{landLevel,jdbcType=INTEGER},
      attach_number = #{attachNumber,jdbcType=VARCHAR},
      floor_area = #{floorArea,jdbcType=DECIMAL},
      cover_an_area = #{coverAnArea,jdbcType=DECIMAL},
      volumetric_rate = #{volumetricRate,jdbcType=VARCHAR},
      greening_rate = #{greeningRate,jdbcType=VARCHAR},
      open_time = #{openTime,jdbcType=TIMESTAMP},
      building_number = #{buildingNumber,jdbcType=INTEGER},
      position = #{position,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR},
      average_price = #{averagePrice,jdbcType=VARCHAR},
      price_range = #{priceRange,jdbcType=VARCHAR},
      supply_heating = #{supplyHeating,jdbcType=INTEGER},
      supply_power = #{supplyPower,jdbcType=INTEGER},
      supply_communication = #{supplyCommunication,jdbcType=INTEGER},
      supply_road = #{supplyRoad,jdbcType=INTEGER},
      supply_water = #{supplyWater,jdbcType=INTEGER},
      drain_water = #{drainWater,jdbcType=INTEGER},
      supply_gas = #{supplyGas,jdbcType=INTEGER},
      infrastructure = #{infrastructure,jdbcType=VARCHAR},
      infrastructure_completeness = #{infrastructureCompleteness,jdbcType=INTEGER},
      location_describe = #{locationDescribe,jdbcType=VARCHAR},
      display_case_id = #{displayCaseId,jdbcType=INTEGER},
      map_id = #{mapId,jdbcType=INTEGER},
      relevance_id = #{relevanceId,jdbcType=INTEGER},
      version = #{version,jdbcType=INTEGER},
      bis_case = #{bisCase,jdbcType=BIT},
      average_price_unit = #{averagePriceUnit,jdbcType=VARCHAR},
      price_range_unit = #{priceRangeUnit,jdbcType=VARCHAR},
      cover_an_area_unit = #{coverAnAreaUnit,jdbcType=VARCHAR},
      acquisition_type = #{acquisitionType,jdbcType=VARCHAR},
      land_right_nature = #{landRightNature,jdbcType=VARCHAR},
      land_right_type = #{landRightType,jdbcType=VARCHAR},
      land_piece_numbering = #{landPieceNumbering,jdbcType=VARCHAR},
      regional_planning = #{regionalPlanning,jdbcType=VARCHAR},
      bis_delete = #{bisDelete,jdbcType=BIT},
      bis_enable = #{bisEnable,jdbcType=BIT},
      creator = #{creator,jdbcType=VARCHAR},
      gmt_created = #{gmtCreated,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    insert into tb_basic_estate
    (apply_id, quote_id, classify, type, province, city, district, block_id, block_name, 
      block_description, developer, developer_name, name, street_number, street, number, 
      land_level, attach_number, floor_area, cover_an_area, volumetric_rate, greening_rate, 
      open_time, building_number, position, description, average_price, price_range, 
      supply_heating, supply_power, supply_communication, supply_road, supply_water, 
      drain_water, supply_gas, infrastructure, infrastructure_completeness, location_describe, 
      display_case_id, map_id, relevance_id, version, bis_case, average_price_unit, price_range_unit, 
      cover_an_area_unit, acquisition_type, land_right_nature, land_right_type, land_piece_numbering, 
      regional_planning, bis_delete, bis_enable, creator, gmt_created, gmt_modified)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.applyId,jdbcType=INTEGER}, #{item.quoteId,jdbcType=INTEGER}, #{item.classify,jdbcType=INTEGER}, 
        #{item.type,jdbcType=INTEGER}, #{item.province,jdbcType=VARCHAR}, #{item.city,jdbcType=VARCHAR}, 
        #{item.district,jdbcType=VARCHAR}, #{item.blockId,jdbcType=INTEGER}, #{item.blockName,jdbcType=VARCHAR}, 
        #{item.blockDescription,jdbcType=VARCHAR}, #{item.developer,jdbcType=VARCHAR}, 
        #{item.developerName,jdbcType=VARCHAR}, #{item.name,jdbcType=VARCHAR}, #{item.streetNumber,jdbcType=VARCHAR}, 
        #{item.street,jdbcType=VARCHAR}, #{item.number,jdbcType=VARCHAR}, #{item.landLevel,jdbcType=INTEGER}, 
        #{item.attachNumber,jdbcType=VARCHAR}, #{item.floorArea,jdbcType=DECIMAL}, #{item.coverAnArea,jdbcType=DECIMAL}, 
        #{item.volumetricRate,jdbcType=VARCHAR}, #{item.greeningRate,jdbcType=VARCHAR}, 
        #{item.openTime,jdbcType=TIMESTAMP}, #{item.buildingNumber,jdbcType=INTEGER}, #{item.position,jdbcType=INTEGER}, 
        #{item.description,jdbcType=VARCHAR}, #{item.averagePrice,jdbcType=VARCHAR}, #{item.priceRange,jdbcType=VARCHAR}, 
        #{item.supplyHeating,jdbcType=INTEGER}, #{item.supplyPower,jdbcType=INTEGER}, #{item.supplyCommunication,jdbcType=INTEGER}, 
        #{item.supplyRoad,jdbcType=INTEGER}, #{item.supplyWater,jdbcType=INTEGER}, #{item.drainWater,jdbcType=INTEGER}, 
        #{item.supplyGas,jdbcType=INTEGER}, #{item.infrastructure,jdbcType=VARCHAR}, #{item.infrastructureCompleteness,jdbcType=INTEGER}, 
        #{item.locationDescribe,jdbcType=VARCHAR}, #{item.displayCaseId,jdbcType=INTEGER}, 
        #{item.mapId,jdbcType=INTEGER}, #{item.relevanceId,jdbcType=INTEGER}, #{item.version,jdbcType=INTEGER}, 
        #{item.bisCase,jdbcType=BIT}, #{item.averagePriceUnit,jdbcType=VARCHAR}, #{item.priceRangeUnit,jdbcType=VARCHAR}, 
        #{item.coverAnAreaUnit,jdbcType=VARCHAR}, #{item.acquisitionType,jdbcType=VARCHAR}, 
        #{item.landRightNature,jdbcType=VARCHAR}, #{item.landRightType,jdbcType=VARCHAR}, 
        #{item.landPieceNumbering,jdbcType=VARCHAR}, #{item.regionalPlanning,jdbcType=VARCHAR}, 
        #{item.bisDelete,jdbcType=BIT}, #{item.bisEnable,jdbcType=BIT}, #{item.creator,jdbcType=VARCHAR}, 
        #{item.gmtCreated,jdbcType=TIMESTAMP}, #{item.gmtModified,jdbcType=TIMESTAMP})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" keyColumn="id" keyProperty="list.id" parameterType="map" useGeneratedKeys="true">
    insert into tb_basic_estate (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'apply_id'.toString() == column.value">
          #{item.applyId,jdbcType=INTEGER}
        </if>
        <if test="'quote_id'.toString() == column.value">
          #{item.quoteId,jdbcType=INTEGER}
        </if>
        <if test="'classify'.toString() == column.value">
          #{item.classify,jdbcType=INTEGER}
        </if>
        <if test="'type'.toString() == column.value">
          #{item.type,jdbcType=INTEGER}
        </if>
        <if test="'province'.toString() == column.value">
          #{item.province,jdbcType=VARCHAR}
        </if>
        <if test="'city'.toString() == column.value">
          #{item.city,jdbcType=VARCHAR}
        </if>
        <if test="'district'.toString() == column.value">
          #{item.district,jdbcType=VARCHAR}
        </if>
        <if test="'block_id'.toString() == column.value">
          #{item.blockId,jdbcType=INTEGER}
        </if>
        <if test="'block_name'.toString() == column.value">
          #{item.blockName,jdbcType=VARCHAR}
        </if>
        <if test="'block_description'.toString() == column.value">
          #{item.blockDescription,jdbcType=VARCHAR}
        </if>
        <if test="'developer'.toString() == column.value">
          #{item.developer,jdbcType=VARCHAR}
        </if>
        <if test="'developer_name'.toString() == column.value">
          #{item.developerName,jdbcType=VARCHAR}
        </if>
        <if test="'name'.toString() == column.value">
          #{item.name,jdbcType=VARCHAR}
        </if>
        <if test="'street_number'.toString() == column.value">
          #{item.streetNumber,jdbcType=VARCHAR}
        </if>
        <if test="'street'.toString() == column.value">
          #{item.street,jdbcType=VARCHAR}
        </if>
        <if test="'number'.toString() == column.value">
          #{item.number,jdbcType=VARCHAR}
        </if>
        <if test="'land_level'.toString() == column.value">
          #{item.landLevel,jdbcType=INTEGER}
        </if>
        <if test="'attach_number'.toString() == column.value">
          #{item.attachNumber,jdbcType=VARCHAR}
        </if>
        <if test="'floor_area'.toString() == column.value">
          #{item.floorArea,jdbcType=DECIMAL}
        </if>
        <if test="'cover_an_area'.toString() == column.value">
          #{item.coverAnArea,jdbcType=DECIMAL}
        </if>
        <if test="'volumetric_rate'.toString() == column.value">
          #{item.volumetricRate,jdbcType=VARCHAR}
        </if>
        <if test="'greening_rate'.toString() == column.value">
          #{item.greeningRate,jdbcType=VARCHAR}
        </if>
        <if test="'open_time'.toString() == column.value">
          #{item.openTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'building_number'.toString() == column.value">
          #{item.buildingNumber,jdbcType=INTEGER}
        </if>
        <if test="'position'.toString() == column.value">
          #{item.position,jdbcType=INTEGER}
        </if>
        <if test="'description'.toString() == column.value">
          #{item.description,jdbcType=VARCHAR}
        </if>
        <if test="'average_price'.toString() == column.value">
          #{item.averagePrice,jdbcType=VARCHAR}
        </if>
        <if test="'price_range'.toString() == column.value">
          #{item.priceRange,jdbcType=VARCHAR}
        </if>
        <if test="'supply_heating'.toString() == column.value">
          #{item.supplyHeating,jdbcType=INTEGER}
        </if>
        <if test="'supply_power'.toString() == column.value">
          #{item.supplyPower,jdbcType=INTEGER}
        </if>
        <if test="'supply_communication'.toString() == column.value">
          #{item.supplyCommunication,jdbcType=INTEGER}
        </if>
        <if test="'supply_road'.toString() == column.value">
          #{item.supplyRoad,jdbcType=INTEGER}
        </if>
        <if test="'supply_water'.toString() == column.value">
          #{item.supplyWater,jdbcType=INTEGER}
        </if>
        <if test="'drain_water'.toString() == column.value">
          #{item.drainWater,jdbcType=INTEGER}
        </if>
        <if test="'supply_gas'.toString() == column.value">
          #{item.supplyGas,jdbcType=INTEGER}
        </if>
        <if test="'infrastructure'.toString() == column.value">
          #{item.infrastructure,jdbcType=VARCHAR}
        </if>
        <if test="'infrastructure_completeness'.toString() == column.value">
          #{item.infrastructureCompleteness,jdbcType=INTEGER}
        </if>
        <if test="'location_describe'.toString() == column.value">
          #{item.locationDescribe,jdbcType=VARCHAR}
        </if>
        <if test="'display_case_id'.toString() == column.value">
          #{item.displayCaseId,jdbcType=INTEGER}
        </if>
        <if test="'map_id'.toString() == column.value">
          #{item.mapId,jdbcType=INTEGER}
        </if>
        <if test="'relevance_id'.toString() == column.value">
          #{item.relevanceId,jdbcType=INTEGER}
        </if>
        <if test="'version'.toString() == column.value">
          #{item.version,jdbcType=INTEGER}
        </if>
        <if test="'bis_case'.toString() == column.value">
          #{item.bisCase,jdbcType=BIT}
        </if>
        <if test="'average_price_unit'.toString() == column.value">
          #{item.averagePriceUnit,jdbcType=VARCHAR}
        </if>
        <if test="'price_range_unit'.toString() == column.value">
          #{item.priceRangeUnit,jdbcType=VARCHAR}
        </if>
        <if test="'cover_an_area_unit'.toString() == column.value">
          #{item.coverAnAreaUnit,jdbcType=VARCHAR}
        </if>
        <if test="'acquisition_type'.toString() == column.value">
          #{item.acquisitionType,jdbcType=VARCHAR}
        </if>
        <if test="'land_right_nature'.toString() == column.value">
          #{item.landRightNature,jdbcType=VARCHAR}
        </if>
        <if test="'land_right_type'.toString() == column.value">
          #{item.landRightType,jdbcType=VARCHAR}
        </if>
        <if test="'land_piece_numbering'.toString() == column.value">
          #{item.landPieceNumbering,jdbcType=VARCHAR}
        </if>
        <if test="'regional_planning'.toString() == column.value">
          #{item.regionalPlanning,jdbcType=VARCHAR}
        </if>
        <if test="'bis_delete'.toString() == column.value">
          #{item.bisDelete,jdbcType=BIT}
        </if>
        <if test="'bis_enable'.toString() == column.value">
          #{item.bisEnable,jdbcType=BIT}
        </if>
        <if test="'creator'.toString() == column.value">
          #{item.creator,jdbcType=VARCHAR}
        </if>
        <if test="'gmt_created'.toString() == column.value">
          #{item.gmtCreated,jdbcType=TIMESTAMP}
        </if>
        <if test="'gmt_modified'.toString() == column.value">
          #{item.gmtModified,jdbcType=TIMESTAMP}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>