<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.copower.pmcc.assess.dal.basis.mapper.SurveyAssetInventoryMapper" >
  <resultMap id="BaseResultMap" type="com.copower.pmcc.assess.dal.basis.entity.SurveyAssetInventory" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="project_id" property="projectId" jdbcType="INTEGER" />
    <result column="plan_detail_id" property="planDetailId" jdbcType="INTEGER" />
    <result column="process_ins_id" property="processInsId" jdbcType="VARCHAR" />
    <result column="declare_record_id" property="declareRecordId" jdbcType="INTEGER" />
    <result column="evaluator" property="evaluator" jdbcType="VARCHAR" />
    <result column="check_date" property="checkDate" jdbcType="TIMESTAMP" />
    <result column="bis_check_original" property="bisCheckOriginal" jdbcType="BIT" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="special_case" property="specialCase" jdbcType="VARCHAR" />
    <result column="segmentation_limit" property="segmentationLimit" jdbcType="VARCHAR" />
    <result column="can_use" property="canUse" jdbcType="VARCHAR" />
    <result column="application" property="application" jdbcType="INTEGER" />
    <result column="certificate" property="certificate" jdbcType="VARCHAR" />
    <result column="rim_is_normal" property="rimIsNormal" jdbcType="VARCHAR" />
    <result column="zone_damage" property="zoneDamage" jdbcType="VARCHAR" />
    <result column="abnormality" property="abnormality" jdbcType="VARCHAR" />
    <result column="entity_is_damage" property="entityIsDamage" jdbcType="VARCHAR" />
    <result column="entity_damage" property="entityDamage" jdbcType="VARCHAR" />
    <result column="damage_remark" property="damageRemark" jdbcType="VARCHAR" />
    <result column="payment_status" property="paymentStatus" jdbcType="VARCHAR" />
    <result column="payment_content" property="paymentContent" jdbcType="VARCHAR" />
    <result column="transfer_limit" property="transferLimit" jdbcType="VARCHAR" />
    <result column="creator" property="creator" jdbcType="VARCHAR" />
    <result column="gmt_created" property="gmtCreated" jdbcType="TIMESTAMP" />
    <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP" />
    <result column="other_project" property="otherProject" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.copower.pmcc.assess.dal.basis.entity.SurveyAssetInventory" extends="BaseResultMap" >
    <result column="location" property="location" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, project_id, plan_detail_id, process_ins_id, declare_record_id, evaluator, check_date, 
    bis_check_original, remark, special_case, segmentation_limit, can_use, application, 
    certificate, rim_is_normal, zone_damage, abnormality, entity_is_damage, entity_damage, 
    damage_remark, payment_status, payment_content, transfer_limit, creator, gmt_created, 
    gmt_modified, other_project
  </sql>
  <sql id="Blob_Column_List" >
    location
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.copower.pmcc.assess.dal.basis.entity.SurveyAssetInventoryExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_survey_asset_inventory
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.copower.pmcc.assess.dal.basis.entity.SurveyAssetInventoryExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_survey_asset_inventory
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_survey_asset_inventory
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_survey_asset_inventory
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.copower.pmcc.assess.dal.basis.entity.SurveyAssetInventoryExample" >
    delete from tb_survey_asset_inventory
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.copower.pmcc.assess.dal.basis.entity.SurveyAssetInventory" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_survey_asset_inventory (project_id, plan_detail_id, process_ins_id, 
      declare_record_id, evaluator, check_date, 
      bis_check_original, remark, special_case, 
      segmentation_limit, can_use, application, 
      certificate, rim_is_normal, zone_damage, 
      abnormality, entity_is_damage, entity_damage, 
      damage_remark, payment_status, payment_content, 
      transfer_limit, creator, gmt_created, 
      gmt_modified, other_project, location
      )
    values (#{projectId,jdbcType=INTEGER}, #{planDetailId,jdbcType=INTEGER}, #{processInsId,jdbcType=VARCHAR}, 
      #{declareRecordId,jdbcType=INTEGER}, #{evaluator,jdbcType=VARCHAR}, #{checkDate,jdbcType=TIMESTAMP}, 
      #{bisCheckOriginal,jdbcType=BIT}, #{remark,jdbcType=VARCHAR}, #{specialCase,jdbcType=VARCHAR}, 
      #{segmentationLimit,jdbcType=VARCHAR}, #{canUse,jdbcType=VARCHAR}, #{application,jdbcType=INTEGER}, 
      #{certificate,jdbcType=VARCHAR}, #{rimIsNormal,jdbcType=VARCHAR}, #{zoneDamage,jdbcType=VARCHAR}, 
      #{abnormality,jdbcType=VARCHAR}, #{entityIsDamage,jdbcType=VARCHAR}, #{entityDamage,jdbcType=VARCHAR}, 
      #{damageRemark,jdbcType=VARCHAR}, #{paymentStatus,jdbcType=VARCHAR}, #{paymentContent,jdbcType=VARCHAR}, 
      #{transferLimit,jdbcType=VARCHAR}, #{creator,jdbcType=VARCHAR}, #{gmtCreated,jdbcType=TIMESTAMP}, 
      #{gmtModified,jdbcType=TIMESTAMP}, #{otherProject,jdbcType=VARCHAR}, #{location,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.copower.pmcc.assess.dal.basis.entity.SurveyAssetInventory" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_survey_asset_inventory
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="projectId != null" >
        project_id,
      </if>
      <if test="planDetailId != null" >
        plan_detail_id,
      </if>
      <if test="processInsId != null" >
        process_ins_id,
      </if>
      <if test="declareRecordId != null" >
        declare_record_id,
      </if>
      <if test="evaluator != null" >
        evaluator,
      </if>
      <if test="checkDate != null" >
        check_date,
      </if>
      <if test="bisCheckOriginal != null" >
        bis_check_original,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="specialCase != null" >
        special_case,
      </if>
      <if test="segmentationLimit != null" >
        segmentation_limit,
      </if>
      <if test="canUse != null" >
        can_use,
      </if>
      <if test="application != null" >
        application,
      </if>
      <if test="certificate != null" >
        certificate,
      </if>
      <if test="rimIsNormal != null" >
        rim_is_normal,
      </if>
      <if test="zoneDamage != null" >
        zone_damage,
      </if>
      <if test="abnormality != null" >
        abnormality,
      </if>
      <if test="entityIsDamage != null" >
        entity_is_damage,
      </if>
      <if test="entityDamage != null" >
        entity_damage,
      </if>
      <if test="damageRemark != null" >
        damage_remark,
      </if>
      <if test="paymentStatus != null" >
        payment_status,
      </if>
      <if test="paymentContent != null" >
        payment_content,
      </if>
      <if test="transferLimit != null" >
        transfer_limit,
      </if>
      <if test="creator != null" >
        creator,
      </if>
      <if test="gmtCreated != null" >
        gmt_created,
      </if>
      <if test="gmtModified != null" >
        gmt_modified,
      </if>
      <if test="otherProject != null" >
        other_project,
      </if>
      <if test="location != null" >
        location,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="projectId != null" >
        #{projectId,jdbcType=INTEGER},
      </if>
      <if test="planDetailId != null" >
        #{planDetailId,jdbcType=INTEGER},
      </if>
      <if test="processInsId != null" >
        #{processInsId,jdbcType=VARCHAR},
      </if>
      <if test="declareRecordId != null" >
        #{declareRecordId,jdbcType=INTEGER},
      </if>
      <if test="evaluator != null" >
        #{evaluator,jdbcType=VARCHAR},
      </if>
      <if test="checkDate != null" >
        #{checkDate,jdbcType=TIMESTAMP},
      </if>
      <if test="bisCheckOriginal != null" >
        #{bisCheckOriginal,jdbcType=BIT},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="specialCase != null" >
        #{specialCase,jdbcType=VARCHAR},
      </if>
      <if test="segmentationLimit != null" >
        #{segmentationLimit,jdbcType=VARCHAR},
      </if>
      <if test="canUse != null" >
        #{canUse,jdbcType=VARCHAR},
      </if>
      <if test="application != null" >
        #{application,jdbcType=INTEGER},
      </if>
      <if test="certificate != null" >
        #{certificate,jdbcType=VARCHAR},
      </if>
      <if test="rimIsNormal != null" >
        #{rimIsNormal,jdbcType=VARCHAR},
      </if>
      <if test="zoneDamage != null" >
        #{zoneDamage,jdbcType=VARCHAR},
      </if>
      <if test="abnormality != null" >
        #{abnormality,jdbcType=VARCHAR},
      </if>
      <if test="entityIsDamage != null" >
        #{entityIsDamage,jdbcType=VARCHAR},
      </if>
      <if test="entityDamage != null" >
        #{entityDamage,jdbcType=VARCHAR},
      </if>
      <if test="damageRemark != null" >
        #{damageRemark,jdbcType=VARCHAR},
      </if>
      <if test="paymentStatus != null" >
        #{paymentStatus,jdbcType=VARCHAR},
      </if>
      <if test="paymentContent != null" >
        #{paymentContent,jdbcType=VARCHAR},
      </if>
      <if test="transferLimit != null" >
        #{transferLimit,jdbcType=VARCHAR},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreated != null" >
        #{gmtCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null" >
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="otherProject != null" >
        #{otherProject,jdbcType=VARCHAR},
      </if>
      <if test="location != null" >
        #{location,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.copower.pmcc.assess.dal.basis.entity.SurveyAssetInventoryExample" resultType="java.lang.Integer" >
    select count(*) from tb_survey_asset_inventory
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_survey_asset_inventory
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.projectId != null" >
        project_id = #{record.projectId,jdbcType=INTEGER},
      </if>
      <if test="record.planDetailId != null" >
        plan_detail_id = #{record.planDetailId,jdbcType=INTEGER},
      </if>
      <if test="record.processInsId != null" >
        process_ins_id = #{record.processInsId,jdbcType=VARCHAR},
      </if>
      <if test="record.declareRecordId != null" >
        declare_record_id = #{record.declareRecordId,jdbcType=INTEGER},
      </if>
      <if test="record.evaluator != null" >
        evaluator = #{record.evaluator,jdbcType=VARCHAR},
      </if>
      <if test="record.checkDate != null" >
        check_date = #{record.checkDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.bisCheckOriginal != null" >
        bis_check_original = #{record.bisCheckOriginal,jdbcType=BIT},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.specialCase != null" >
        special_case = #{record.specialCase,jdbcType=VARCHAR},
      </if>
      <if test="record.segmentationLimit != null" >
        segmentation_limit = #{record.segmentationLimit,jdbcType=VARCHAR},
      </if>
      <if test="record.canUse != null" >
        can_use = #{record.canUse,jdbcType=VARCHAR},
      </if>
      <if test="record.application != null" >
        application = #{record.application,jdbcType=INTEGER},
      </if>
      <if test="record.certificate != null" >
        certificate = #{record.certificate,jdbcType=VARCHAR},
      </if>
      <if test="record.rimIsNormal != null" >
        rim_is_normal = #{record.rimIsNormal,jdbcType=VARCHAR},
      </if>
      <if test="record.zoneDamage != null" >
        zone_damage = #{record.zoneDamage,jdbcType=VARCHAR},
      </if>
      <if test="record.abnormality != null" >
        abnormality = #{record.abnormality,jdbcType=VARCHAR},
      </if>
      <if test="record.entityIsDamage != null" >
        entity_is_damage = #{record.entityIsDamage,jdbcType=VARCHAR},
      </if>
      <if test="record.entityDamage != null" >
        entity_damage = #{record.entityDamage,jdbcType=VARCHAR},
      </if>
      <if test="record.damageRemark != null" >
        damage_remark = #{record.damageRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentStatus != null" >
        payment_status = #{record.paymentStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentContent != null" >
        payment_content = #{record.paymentContent,jdbcType=VARCHAR},
      </if>
      <if test="record.transferLimit != null" >
        transfer_limit = #{record.transferLimit,jdbcType=VARCHAR},
      </if>
      <if test="record.creator != null" >
        creator = #{record.creator,jdbcType=VARCHAR},
      </if>
      <if test="record.gmtCreated != null" >
        gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModified != null" >
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="record.otherProject != null" >
        other_project = #{record.otherProject,jdbcType=VARCHAR},
      </if>
      <if test="record.location != null" >
        location = #{record.location,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update tb_survey_asset_inventory
    set id = #{record.id,jdbcType=INTEGER},
      project_id = #{record.projectId,jdbcType=INTEGER},
      plan_detail_id = #{record.planDetailId,jdbcType=INTEGER},
      process_ins_id = #{record.processInsId,jdbcType=VARCHAR},
      declare_record_id = #{record.declareRecordId,jdbcType=INTEGER},
      evaluator = #{record.evaluator,jdbcType=VARCHAR},
      check_date = #{record.checkDate,jdbcType=TIMESTAMP},
      bis_check_original = #{record.bisCheckOriginal,jdbcType=BIT},
      remark = #{record.remark,jdbcType=VARCHAR},
      special_case = #{record.specialCase,jdbcType=VARCHAR},
      segmentation_limit = #{record.segmentationLimit,jdbcType=VARCHAR},
      can_use = #{record.canUse,jdbcType=VARCHAR},
      application = #{record.application,jdbcType=INTEGER},
      certificate = #{record.certificate,jdbcType=VARCHAR},
      rim_is_normal = #{record.rimIsNormal,jdbcType=VARCHAR},
      zone_damage = #{record.zoneDamage,jdbcType=VARCHAR},
      abnormality = #{record.abnormality,jdbcType=VARCHAR},
      entity_is_damage = #{record.entityIsDamage,jdbcType=VARCHAR},
      entity_damage = #{record.entityDamage,jdbcType=VARCHAR},
      damage_remark = #{record.damageRemark,jdbcType=VARCHAR},
      payment_status = #{record.paymentStatus,jdbcType=VARCHAR},
      payment_content = #{record.paymentContent,jdbcType=VARCHAR},
      transfer_limit = #{record.transferLimit,jdbcType=VARCHAR},
      creator = #{record.creator,jdbcType=VARCHAR},
      gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      other_project = #{record.otherProject,jdbcType=VARCHAR},
      location = #{record.location,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_survey_asset_inventory
    set id = #{record.id,jdbcType=INTEGER},
      project_id = #{record.projectId,jdbcType=INTEGER},
      plan_detail_id = #{record.planDetailId,jdbcType=INTEGER},
      process_ins_id = #{record.processInsId,jdbcType=VARCHAR},
      declare_record_id = #{record.declareRecordId,jdbcType=INTEGER},
      evaluator = #{record.evaluator,jdbcType=VARCHAR},
      check_date = #{record.checkDate,jdbcType=TIMESTAMP},
      bis_check_original = #{record.bisCheckOriginal,jdbcType=BIT},
      remark = #{record.remark,jdbcType=VARCHAR},
      special_case = #{record.specialCase,jdbcType=VARCHAR},
      segmentation_limit = #{record.segmentationLimit,jdbcType=VARCHAR},
      can_use = #{record.canUse,jdbcType=VARCHAR},
      application = #{record.application,jdbcType=INTEGER},
      certificate = #{record.certificate,jdbcType=VARCHAR},
      rim_is_normal = #{record.rimIsNormal,jdbcType=VARCHAR},
      zone_damage = #{record.zoneDamage,jdbcType=VARCHAR},
      abnormality = #{record.abnormality,jdbcType=VARCHAR},
      entity_is_damage = #{record.entityIsDamage,jdbcType=VARCHAR},
      entity_damage = #{record.entityDamage,jdbcType=VARCHAR},
      damage_remark = #{record.damageRemark,jdbcType=VARCHAR},
      payment_status = #{record.paymentStatus,jdbcType=VARCHAR},
      payment_content = #{record.paymentContent,jdbcType=VARCHAR},
      transfer_limit = #{record.transferLimit,jdbcType=VARCHAR},
      creator = #{record.creator,jdbcType=VARCHAR},
      gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      other_project = #{record.otherProject,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.copower.pmcc.assess.dal.basis.entity.SurveyAssetInventory" >
    update tb_survey_asset_inventory
    <set >
      <if test="projectId != null" >
        project_id = #{projectId,jdbcType=INTEGER},
      </if>
      <if test="planDetailId != null" >
        plan_detail_id = #{planDetailId,jdbcType=INTEGER},
      </if>
      <if test="processInsId != null" >
        process_ins_id = #{processInsId,jdbcType=VARCHAR},
      </if>
      <if test="declareRecordId != null" >
        declare_record_id = #{declareRecordId,jdbcType=INTEGER},
      </if>
      <if test="evaluator != null" >
        evaluator = #{evaluator,jdbcType=VARCHAR},
      </if>
      <if test="checkDate != null" >
        check_date = #{checkDate,jdbcType=TIMESTAMP},
      </if>
      <if test="bisCheckOriginal != null" >
        bis_check_original = #{bisCheckOriginal,jdbcType=BIT},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="specialCase != null" >
        special_case = #{specialCase,jdbcType=VARCHAR},
      </if>
      <if test="segmentationLimit != null" >
        segmentation_limit = #{segmentationLimit,jdbcType=VARCHAR},
      </if>
      <if test="canUse != null" >
        can_use = #{canUse,jdbcType=VARCHAR},
      </if>
      <if test="application != null" >
        application = #{application,jdbcType=INTEGER},
      </if>
      <if test="certificate != null" >
        certificate = #{certificate,jdbcType=VARCHAR},
      </if>
      <if test="rimIsNormal != null" >
        rim_is_normal = #{rimIsNormal,jdbcType=VARCHAR},
      </if>
      <if test="zoneDamage != null" >
        zone_damage = #{zoneDamage,jdbcType=VARCHAR},
      </if>
      <if test="abnormality != null" >
        abnormality = #{abnormality,jdbcType=VARCHAR},
      </if>
      <if test="entityIsDamage != null" >
        entity_is_damage = #{entityIsDamage,jdbcType=VARCHAR},
      </if>
      <if test="entityDamage != null" >
        entity_damage = #{entityDamage,jdbcType=VARCHAR},
      </if>
      <if test="damageRemark != null" >
        damage_remark = #{damageRemark,jdbcType=VARCHAR},
      </if>
      <if test="paymentStatus != null" >
        payment_status = #{paymentStatus,jdbcType=VARCHAR},
      </if>
      <if test="paymentContent != null" >
        payment_content = #{paymentContent,jdbcType=VARCHAR},
      </if>
      <if test="transferLimit != null" >
        transfer_limit = #{transferLimit,jdbcType=VARCHAR},
      </if>
      <if test="creator != null" >
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreated != null" >
        gmt_created = #{gmtCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null" >
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="otherProject != null" >
        other_project = #{otherProject,jdbcType=VARCHAR},
      </if>
      <if test="location != null" >
        location = #{location,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.copower.pmcc.assess.dal.basis.entity.SurveyAssetInventory" >
    update tb_survey_asset_inventory
    set project_id = #{projectId,jdbcType=INTEGER},
      plan_detail_id = #{planDetailId,jdbcType=INTEGER},
      process_ins_id = #{processInsId,jdbcType=VARCHAR},
      declare_record_id = #{declareRecordId,jdbcType=INTEGER},
      evaluator = #{evaluator,jdbcType=VARCHAR},
      check_date = #{checkDate,jdbcType=TIMESTAMP},
      bis_check_original = #{bisCheckOriginal,jdbcType=BIT},
      remark = #{remark,jdbcType=VARCHAR},
      special_case = #{specialCase,jdbcType=VARCHAR},
      segmentation_limit = #{segmentationLimit,jdbcType=VARCHAR},
      can_use = #{canUse,jdbcType=VARCHAR},
      application = #{application,jdbcType=INTEGER},
      certificate = #{certificate,jdbcType=VARCHAR},
      rim_is_normal = #{rimIsNormal,jdbcType=VARCHAR},
      zone_damage = #{zoneDamage,jdbcType=VARCHAR},
      abnormality = #{abnormality,jdbcType=VARCHAR},
      entity_is_damage = #{entityIsDamage,jdbcType=VARCHAR},
      entity_damage = #{entityDamage,jdbcType=VARCHAR},
      damage_remark = #{damageRemark,jdbcType=VARCHAR},
      payment_status = #{paymentStatus,jdbcType=VARCHAR},
      payment_content = #{paymentContent,jdbcType=VARCHAR},
      transfer_limit = #{transferLimit,jdbcType=VARCHAR},
      creator = #{creator,jdbcType=VARCHAR},
      gmt_created = #{gmtCreated,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      other_project = #{otherProject,jdbcType=VARCHAR},
      location = #{location,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.copower.pmcc.assess.dal.basis.entity.SurveyAssetInventory" >
    update tb_survey_asset_inventory
    set project_id = #{projectId,jdbcType=INTEGER},
      plan_detail_id = #{planDetailId,jdbcType=INTEGER},
      process_ins_id = #{processInsId,jdbcType=VARCHAR},
      declare_record_id = #{declareRecordId,jdbcType=INTEGER},
      evaluator = #{evaluator,jdbcType=VARCHAR},
      check_date = #{checkDate,jdbcType=TIMESTAMP},
      bis_check_original = #{bisCheckOriginal,jdbcType=BIT},
      remark = #{remark,jdbcType=VARCHAR},
      special_case = #{specialCase,jdbcType=VARCHAR},
      segmentation_limit = #{segmentationLimit,jdbcType=VARCHAR},
      can_use = #{canUse,jdbcType=VARCHAR},
      application = #{application,jdbcType=INTEGER},
      certificate = #{certificate,jdbcType=VARCHAR},
      rim_is_normal = #{rimIsNormal,jdbcType=VARCHAR},
      zone_damage = #{zoneDamage,jdbcType=VARCHAR},
      abnormality = #{abnormality,jdbcType=VARCHAR},
      entity_is_damage = #{entityIsDamage,jdbcType=VARCHAR},
      entity_damage = #{entityDamage,jdbcType=VARCHAR},
      damage_remark = #{damageRemark,jdbcType=VARCHAR},
      payment_status = #{paymentStatus,jdbcType=VARCHAR},
      payment_content = #{paymentContent,jdbcType=VARCHAR},
      transfer_limit = #{transferLimit,jdbcType=VARCHAR},
      creator = #{creator,jdbcType=VARCHAR},
      gmt_created = #{gmtCreated,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      other_project = #{otherProject,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>