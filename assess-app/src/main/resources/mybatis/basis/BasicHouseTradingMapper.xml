<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.copower.pmcc.assess.dal.basis.mapper.BasicHouseTradingMapper">
  <resultMap id="BaseResultMap" type="com.copower.pmcc.assess.dal.basis.entity.BasicHouseTrading">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="apply_id" jdbcType="INTEGER" property="applyId" />
    <result column="house_id" jdbcType="INTEGER" property="houseId" />
    <result column="trading_time" jdbcType="TIMESTAMP" property="tradingTime" />
    <result column="trading_type" jdbcType="INTEGER" property="tradingType" />
    <result column="trading_total_price" jdbcType="DECIMAL" property="tradingTotalPrice" />
    <result column="transaction_level" jdbcType="VARCHAR" property="transactionLevel" />
    <result column="trading_unit_price" jdbcType="DECIMAL" property="tradingUnitPrice" />
    <result column="buyer_extra_tax" jdbcType="VARCHAR" property="buyerExtraTax" />
    <result column="buyer_extra_fee" jdbcType="VARCHAR" property="buyerExtraFee" />
    <result column="renting_extra_tax" jdbcType="VARCHAR" property="rentingExtraTax" />
    <result column="renting_extra_fee" jdbcType="VARCHAR" property="rentingExtraFee" />
    <result column="description_type" jdbcType="INTEGER" property="descriptionType" />
    <result column="description_content" jdbcType="VARCHAR" property="descriptionContent" />
    <result column="installment_interest_rate" jdbcType="VARCHAR" property="installmentInterestRate" />
    <result column="payment_method" jdbcType="INTEGER" property="paymentMethod" />
    <result column="transaction_situation" jdbcType="INTEGER" property="transactionSituation" />
    <result column="tax_burden" jdbcType="INTEGER" property="taxBurden" />
    <result column="scope_property" jdbcType="INTEGER" property="scopeProperty" />
    <result column="scope_include" jdbcType="VARCHAR" property="scopeInclude" />
    <result column="scope_not_include" jdbcType="VARCHAR" property="scopeNotInclude" />
    <result column="scope_property_explain" jdbcType="VARCHAR" property="scopePropertyExplain" />
    <result column="down_payment_ratio" jdbcType="VARCHAR" property="downPaymentRatio" />
    <result column="lending_rate" jdbcType="VARCHAR" property="lendingRate" />
    <result column="loan_period" jdbcType="INTEGER" property="loanPeriod" />
    <result column="deposit" jdbcType="VARCHAR" property="deposit" />
    <result column="information_type" jdbcType="INTEGER" property="informationType" />
    <result column="information_category" jdbcType="INTEGER" property="informationCategory" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="land_buyer_seller" jdbcType="VARCHAR" property="landBuyerSeller" />
    <result column="price_type" jdbcType="INTEGER" property="priceType" />
    <result column="price_connotation" jdbcType="INTEGER" property="priceConnotation" />
    <result column="price_connotation_unit" jdbcType="VARCHAR" property="priceConnotationUnit" />
    <result column="per_mu_price" jdbcType="DECIMAL" property="perMuPrice" />
    <result column="cost" jdbcType="DECIMAL" property="cost" />
    <result column="bis_mark" jdbcType="BIT" property="bisMark" />
    <result column="bis_delete" jdbcType="BIT" property="bisDelete" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="gmt_created" jdbcType="TIMESTAMP" property="gmtCreated" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, apply_id, house_id, trading_time, trading_type, trading_total_price, transaction_level, 
    trading_unit_price, buyer_extra_tax, buyer_extra_fee, renting_extra_tax, renting_extra_fee, 
    description_type, description_content, installment_interest_rate, payment_method, 
    transaction_situation, tax_burden, scope_property, scope_include, scope_not_include, 
    scope_property_explain, down_payment_ratio, lending_rate, loan_period, deposit, information_type, 
    information_category, name, phone, land_buyer_seller, price_type, price_connotation, 
    price_connotation_unit, per_mu_price, cost, bis_mark, bis_delete, creator, gmt_created, 
    gmt_modified
  </sql>
  <select id="selectByExample" parameterType="com.copower.pmcc.assess.dal.basis.entity.BasicHouseTradingExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_basic_house_trading
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_basic_house_trading
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_basic_house_trading
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.copower.pmcc.assess.dal.basis.entity.BasicHouseTradingExample">
    delete from tb_basic_house_trading
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.copower.pmcc.assess.dal.basis.entity.BasicHouseTrading">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_basic_house_trading (apply_id, house_id, trading_time, 
      trading_type, trading_total_price, transaction_level, 
      trading_unit_price, buyer_extra_tax, buyer_extra_fee, 
      renting_extra_tax, renting_extra_fee, description_type, 
      description_content, installment_interest_rate, 
      payment_method, transaction_situation, tax_burden, 
      scope_property, scope_include, scope_not_include, 
      scope_property_explain, down_payment_ratio, 
      lending_rate, loan_period, deposit, 
      information_type, information_category, name, 
      phone, land_buyer_seller, price_type, 
      price_connotation, price_connotation_unit, 
      per_mu_price, cost, bis_mark, 
      bis_delete, creator, gmt_created, 
      gmt_modified)
    values (#{applyId,jdbcType=INTEGER}, #{houseId,jdbcType=INTEGER}, #{tradingTime,jdbcType=TIMESTAMP}, 
      #{tradingType,jdbcType=INTEGER}, #{tradingTotalPrice,jdbcType=DECIMAL}, #{transactionLevel,jdbcType=VARCHAR}, 
      #{tradingUnitPrice,jdbcType=DECIMAL}, #{buyerExtraTax,jdbcType=VARCHAR}, #{buyerExtraFee,jdbcType=VARCHAR}, 
      #{rentingExtraTax,jdbcType=VARCHAR}, #{rentingExtraFee,jdbcType=VARCHAR}, #{descriptionType,jdbcType=INTEGER}, 
      #{descriptionContent,jdbcType=VARCHAR}, #{installmentInterestRate,jdbcType=VARCHAR}, 
      #{paymentMethod,jdbcType=INTEGER}, #{transactionSituation,jdbcType=INTEGER}, #{taxBurden,jdbcType=INTEGER}, 
      #{scopeProperty,jdbcType=INTEGER}, #{scopeInclude,jdbcType=VARCHAR}, #{scopeNotInclude,jdbcType=VARCHAR}, 
      #{scopePropertyExplain,jdbcType=VARCHAR}, #{downPaymentRatio,jdbcType=VARCHAR}, 
      #{lendingRate,jdbcType=VARCHAR}, #{loanPeriod,jdbcType=INTEGER}, #{deposit,jdbcType=VARCHAR}, 
      #{informationType,jdbcType=INTEGER}, #{informationCategory,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{landBuyerSeller,jdbcType=VARCHAR}, #{priceType,jdbcType=INTEGER}, 
      #{priceConnotation,jdbcType=INTEGER}, #{priceConnotationUnit,jdbcType=VARCHAR}, 
      #{perMuPrice,jdbcType=DECIMAL}, #{cost,jdbcType=DECIMAL}, #{bisMark,jdbcType=BIT}, 
      #{bisDelete,jdbcType=BIT}, #{creator,jdbcType=VARCHAR}, #{gmtCreated,jdbcType=TIMESTAMP}, 
      #{gmtModified,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="map">
    <selectKey keyProperty="record.id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_basic_house_trading
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.applyId != null">
            apply_id,
          </if>
          <if test="record.houseId != null">
            house_id,
          </if>
          <if test="record.tradingTime != null">
            trading_time,
          </if>
          <if test="record.tradingType != null">
            trading_type,
          </if>
          <if test="record.tradingTotalPrice != null">
            trading_total_price,
          </if>
          <if test="record.transactionLevel != null">
            transaction_level,
          </if>
          <if test="record.tradingUnitPrice != null">
            trading_unit_price,
          </if>
          <if test="record.buyerExtraTax != null">
            buyer_extra_tax,
          </if>
          <if test="record.buyerExtraFee != null">
            buyer_extra_fee,
          </if>
          <if test="record.rentingExtraTax != null">
            renting_extra_tax,
          </if>
          <if test="record.rentingExtraFee != null">
            renting_extra_fee,
          </if>
          <if test="record.descriptionType != null">
            description_type,
          </if>
          <if test="record.descriptionContent != null">
            description_content,
          </if>
          <if test="record.installmentInterestRate != null">
            installment_interest_rate,
          </if>
          <if test="record.paymentMethod != null">
            payment_method,
          </if>
          <if test="record.transactionSituation != null">
            transaction_situation,
          </if>
          <if test="record.taxBurden != null">
            tax_burden,
          </if>
          <if test="record.scopeProperty != null">
            scope_property,
          </if>
          <if test="record.scopeInclude != null">
            scope_include,
          </if>
          <if test="record.scopeNotInclude != null">
            scope_not_include,
          </if>
          <if test="record.scopePropertyExplain != null">
            scope_property_explain,
          </if>
          <if test="record.downPaymentRatio != null">
            down_payment_ratio,
          </if>
          <if test="record.lendingRate != null">
            lending_rate,
          </if>
          <if test="record.loanPeriod != null">
            loan_period,
          </if>
          <if test="record.deposit != null">
            deposit,
          </if>
          <if test="record.informationType != null">
            information_type,
          </if>
          <if test="record.informationCategory != null">
            information_category,
          </if>
          <if test="record.name != null">
            name,
          </if>
          <if test="record.phone != null">
            phone,
          </if>
          <if test="record.landBuyerSeller != null">
            land_buyer_seller,
          </if>
          <if test="record.priceType != null">
            price_type,
          </if>
          <if test="record.priceConnotation != null">
            price_connotation,
          </if>
          <if test="record.priceConnotationUnit != null">
            price_connotation_unit,
          </if>
          <if test="record.perMuPrice != null">
            per_mu_price,
          </if>
          <if test="record.cost != null">
            cost,
          </if>
          <if test="record.bisMark != null">
            bis_mark,
          </if>
          <if test="record.bisDelete != null">
            bis_delete,
          </if>
          <if test="record.creator != null">
            creator,
          </if>
          <if test="record.gmtCreated != null">
            gmt_created,
          </if>
          <if test="record.gmtModified != null">
            gmt_modified,
          </if>
        </trim>
        <trim prefix="(" suffix=")" suffixOverrides="," />
      </otherwise>
    </choose>
    values
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.applyId != null">
            #{record.applyId,jdbcType=INTEGER},
          </if>
          <if test="record.houseId != null">
            #{record.houseId,jdbcType=INTEGER},
          </if>
          <if test="record.tradingTime != null">
            #{record.tradingTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.tradingType != null">
            #{record.tradingType,jdbcType=INTEGER},
          </if>
          <if test="record.tradingTotalPrice != null">
            #{record.tradingTotalPrice,jdbcType=DECIMAL},
          </if>
          <if test="record.transactionLevel != null">
            #{record.transactionLevel,jdbcType=VARCHAR},
          </if>
          <if test="record.tradingUnitPrice != null">
            #{record.tradingUnitPrice,jdbcType=DECIMAL},
          </if>
          <if test="record.buyerExtraTax != null">
            #{record.buyerExtraTax,jdbcType=VARCHAR},
          </if>
          <if test="record.buyerExtraFee != null">
            #{record.buyerExtraFee,jdbcType=VARCHAR},
          </if>
          <if test="record.rentingExtraTax != null">
            #{record.rentingExtraTax,jdbcType=VARCHAR},
          </if>
          <if test="record.rentingExtraFee != null">
            #{record.rentingExtraFee,jdbcType=VARCHAR},
          </if>
          <if test="record.descriptionType != null">
            #{record.descriptionType,jdbcType=INTEGER},
          </if>
          <if test="record.descriptionContent != null">
            #{record.descriptionContent,jdbcType=VARCHAR},
          </if>
          <if test="record.installmentInterestRate != null">
            #{record.installmentInterestRate,jdbcType=VARCHAR},
          </if>
          <if test="record.paymentMethod != null">
            #{record.paymentMethod,jdbcType=INTEGER},
          </if>
          <if test="record.transactionSituation != null">
            #{record.transactionSituation,jdbcType=INTEGER},
          </if>
          <if test="record.taxBurden != null">
            #{record.taxBurden,jdbcType=INTEGER},
          </if>
          <if test="record.scopeProperty != null">
            #{record.scopeProperty,jdbcType=INTEGER},
          </if>
          <if test="record.scopeInclude != null">
            #{record.scopeInclude,jdbcType=VARCHAR},
          </if>
          <if test="record.scopeNotInclude != null">
            #{record.scopeNotInclude,jdbcType=VARCHAR},
          </if>
          <if test="record.scopePropertyExplain != null">
            #{record.scopePropertyExplain,jdbcType=VARCHAR},
          </if>
          <if test="record.downPaymentRatio != null">
            #{record.downPaymentRatio,jdbcType=VARCHAR},
          </if>
          <if test="record.lendingRate != null">
            #{record.lendingRate,jdbcType=VARCHAR},
          </if>
          <if test="record.loanPeriod != null">
            #{record.loanPeriod,jdbcType=INTEGER},
          </if>
          <if test="record.deposit != null">
            #{record.deposit,jdbcType=VARCHAR},
          </if>
          <if test="record.informationType != null">
            #{record.informationType,jdbcType=INTEGER},
          </if>
          <if test="record.informationCategory != null">
            #{record.informationCategory,jdbcType=INTEGER},
          </if>
          <if test="record.name != null">
            #{record.name,jdbcType=VARCHAR},
          </if>
          <if test="record.phone != null">
            #{record.phone,jdbcType=VARCHAR},
          </if>
          <if test="record.landBuyerSeller != null">
            #{record.landBuyerSeller,jdbcType=VARCHAR},
          </if>
          <if test="record.priceType != null">
            #{record.priceType,jdbcType=INTEGER},
          </if>
          <if test="record.priceConnotation != null">
            #{record.priceConnotation,jdbcType=INTEGER},
          </if>
          <if test="record.priceConnotationUnit != null">
            #{record.priceConnotationUnit,jdbcType=VARCHAR},
          </if>
          <if test="record.perMuPrice != null">
            #{record.perMuPrice,jdbcType=DECIMAL},
          </if>
          <if test="record.cost != null">
            #{record.cost,jdbcType=DECIMAL},
          </if>
          <if test="record.bisMark != null">
            #{record.bisMark,jdbcType=BIT},
          </if>
          <if test="record.bisDelete != null">
            #{record.bisDelete,jdbcType=BIT},
          </if>
          <if test="record.creator != null">
            #{record.creator,jdbcType=VARCHAR},
          </if>
          <if test="record.gmtCreated != null">
            #{record.gmtCreated,jdbcType=TIMESTAMP},
          </if>
          <if test="record.gmtModified != null">
            #{record.gmtModified,jdbcType=TIMESTAMP},
          </if>
        </trim>
      </otherwise>
    </choose>
  </insert>
  <select id="countByExample" parameterType="com.copower.pmcc.assess.dal.basis.entity.BasicHouseTradingExample" resultType="java.lang.Long">
    select count(*) from tb_basic_house_trading
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_basic_house_trading
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.id != null">
            id = #{record.id,jdbcType=INTEGER},
          </if>
          <if test="record.applyId != null">
            apply_id = #{record.applyId,jdbcType=INTEGER},
          </if>
          <if test="record.houseId != null">
            house_id = #{record.houseId,jdbcType=INTEGER},
          </if>
          <if test="record.tradingTime != null">
            trading_time = #{record.tradingTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.tradingType != null">
            trading_type = #{record.tradingType,jdbcType=INTEGER},
          </if>
          <if test="record.tradingTotalPrice != null">
            trading_total_price = #{record.tradingTotalPrice,jdbcType=DECIMAL},
          </if>
          <if test="record.transactionLevel != null">
            transaction_level = #{record.transactionLevel,jdbcType=VARCHAR},
          </if>
          <if test="record.tradingUnitPrice != null">
            trading_unit_price = #{record.tradingUnitPrice,jdbcType=DECIMAL},
          </if>
          <if test="record.buyerExtraTax != null">
            buyer_extra_tax = #{record.buyerExtraTax,jdbcType=VARCHAR},
          </if>
          <if test="record.buyerExtraFee != null">
            buyer_extra_fee = #{record.buyerExtraFee,jdbcType=VARCHAR},
          </if>
          <if test="record.rentingExtraTax != null">
            renting_extra_tax = #{record.rentingExtraTax,jdbcType=VARCHAR},
          </if>
          <if test="record.rentingExtraFee != null">
            renting_extra_fee = #{record.rentingExtraFee,jdbcType=VARCHAR},
          </if>
          <if test="record.descriptionType != null">
            description_type = #{record.descriptionType,jdbcType=INTEGER},
          </if>
          <if test="record.descriptionContent != null">
            description_content = #{record.descriptionContent,jdbcType=VARCHAR},
          </if>
          <if test="record.installmentInterestRate != null">
            installment_interest_rate = #{record.installmentInterestRate,jdbcType=VARCHAR},
          </if>
          <if test="record.paymentMethod != null">
            payment_method = #{record.paymentMethod,jdbcType=INTEGER},
          </if>
          <if test="record.transactionSituation != null">
            transaction_situation = #{record.transactionSituation,jdbcType=INTEGER},
          </if>
          <if test="record.taxBurden != null">
            tax_burden = #{record.taxBurden,jdbcType=INTEGER},
          </if>
          <if test="record.scopeProperty != null">
            scope_property = #{record.scopeProperty,jdbcType=INTEGER},
          </if>
          <if test="record.scopeInclude != null">
            scope_include = #{record.scopeInclude,jdbcType=VARCHAR},
          </if>
          <if test="record.scopeNotInclude != null">
            scope_not_include = #{record.scopeNotInclude,jdbcType=VARCHAR},
          </if>
          <if test="record.scopePropertyExplain != null">
            scope_property_explain = #{record.scopePropertyExplain,jdbcType=VARCHAR},
          </if>
          <if test="record.downPaymentRatio != null">
            down_payment_ratio = #{record.downPaymentRatio,jdbcType=VARCHAR},
          </if>
          <if test="record.lendingRate != null">
            lending_rate = #{record.lendingRate,jdbcType=VARCHAR},
          </if>
          <if test="record.loanPeriod != null">
            loan_period = #{record.loanPeriod,jdbcType=INTEGER},
          </if>
          <if test="record.deposit != null">
            deposit = #{record.deposit,jdbcType=VARCHAR},
          </if>
          <if test="record.informationType != null">
            information_type = #{record.informationType,jdbcType=INTEGER},
          </if>
          <if test="record.informationCategory != null">
            information_category = #{record.informationCategory,jdbcType=INTEGER},
          </if>
          <if test="record.name != null">
            name = #{record.name,jdbcType=VARCHAR},
          </if>
          <if test="record.phone != null">
            phone = #{record.phone,jdbcType=VARCHAR},
          </if>
          <if test="record.landBuyerSeller != null">
            land_buyer_seller = #{record.landBuyerSeller,jdbcType=VARCHAR},
          </if>
          <if test="record.priceType != null">
            price_type = #{record.priceType,jdbcType=INTEGER},
          </if>
          <if test="record.priceConnotation != null">
            price_connotation = #{record.priceConnotation,jdbcType=INTEGER},
          </if>
          <if test="record.priceConnotationUnit != null">
            price_connotation_unit = #{record.priceConnotationUnit,jdbcType=VARCHAR},
          </if>
          <if test="record.perMuPrice != null">
            per_mu_price = #{record.perMuPrice,jdbcType=DECIMAL},
          </if>
          <if test="record.cost != null">
            cost = #{record.cost,jdbcType=DECIMAL},
          </if>
          <if test="record.bisMark != null">
            bis_mark = #{record.bisMark,jdbcType=BIT},
          </if>
          <if test="record.bisDelete != null">
            bis_delete = #{record.bisDelete,jdbcType=BIT},
          </if>
          <if test="record.creator != null">
            creator = #{record.creator,jdbcType=VARCHAR},
          </if>
          <if test="record.gmtCreated != null">
            gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
          </if>
          <if test="record.gmtModified != null">
            gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
          </if>
        </trim>
      </otherwise>
    </choose>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_basic_house_trading
    set id = #{record.id,jdbcType=INTEGER},
      apply_id = #{record.applyId,jdbcType=INTEGER},
      house_id = #{record.houseId,jdbcType=INTEGER},
      trading_time = #{record.tradingTime,jdbcType=TIMESTAMP},
      trading_type = #{record.tradingType,jdbcType=INTEGER},
      trading_total_price = #{record.tradingTotalPrice,jdbcType=DECIMAL},
      transaction_level = #{record.transactionLevel,jdbcType=VARCHAR},
      trading_unit_price = #{record.tradingUnitPrice,jdbcType=DECIMAL},
      buyer_extra_tax = #{record.buyerExtraTax,jdbcType=VARCHAR},
      buyer_extra_fee = #{record.buyerExtraFee,jdbcType=VARCHAR},
      renting_extra_tax = #{record.rentingExtraTax,jdbcType=VARCHAR},
      renting_extra_fee = #{record.rentingExtraFee,jdbcType=VARCHAR},
      description_type = #{record.descriptionType,jdbcType=INTEGER},
      description_content = #{record.descriptionContent,jdbcType=VARCHAR},
      installment_interest_rate = #{record.installmentInterestRate,jdbcType=VARCHAR},
      payment_method = #{record.paymentMethod,jdbcType=INTEGER},
      transaction_situation = #{record.transactionSituation,jdbcType=INTEGER},
      tax_burden = #{record.taxBurden,jdbcType=INTEGER},
      scope_property = #{record.scopeProperty,jdbcType=INTEGER},
      scope_include = #{record.scopeInclude,jdbcType=VARCHAR},
      scope_not_include = #{record.scopeNotInclude,jdbcType=VARCHAR},
      scope_property_explain = #{record.scopePropertyExplain,jdbcType=VARCHAR},
      down_payment_ratio = #{record.downPaymentRatio,jdbcType=VARCHAR},
      lending_rate = #{record.lendingRate,jdbcType=VARCHAR},
      loan_period = #{record.loanPeriod,jdbcType=INTEGER},
      deposit = #{record.deposit,jdbcType=VARCHAR},
      information_type = #{record.informationType,jdbcType=INTEGER},
      information_category = #{record.informationCategory,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      land_buyer_seller = #{record.landBuyerSeller,jdbcType=VARCHAR},
      price_type = #{record.priceType,jdbcType=INTEGER},
      price_connotation = #{record.priceConnotation,jdbcType=INTEGER},
      price_connotation_unit = #{record.priceConnotationUnit,jdbcType=VARCHAR},
      per_mu_price = #{record.perMuPrice,jdbcType=DECIMAL},
      cost = #{record.cost,jdbcType=DECIMAL},
      bis_mark = #{record.bisMark,jdbcType=BIT},
      bis_delete = #{record.bisDelete,jdbcType=BIT},
      creator = #{record.creator,jdbcType=VARCHAR},
      gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="map">
    update tb_basic_house_trading
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.applyId != null">
            apply_id = #{record.applyId,jdbcType=INTEGER},
          </if>
          <if test="record.houseId != null">
            house_id = #{record.houseId,jdbcType=INTEGER},
          </if>
          <if test="record.tradingTime != null">
            trading_time = #{record.tradingTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.tradingType != null">
            trading_type = #{record.tradingType,jdbcType=INTEGER},
          </if>
          <if test="record.tradingTotalPrice != null">
            trading_total_price = #{record.tradingTotalPrice,jdbcType=DECIMAL},
          </if>
          <if test="record.transactionLevel != null">
            transaction_level = #{record.transactionLevel,jdbcType=VARCHAR},
          </if>
          <if test="record.tradingUnitPrice != null">
            trading_unit_price = #{record.tradingUnitPrice,jdbcType=DECIMAL},
          </if>
          <if test="record.buyerExtraTax != null">
            buyer_extra_tax = #{record.buyerExtraTax,jdbcType=VARCHAR},
          </if>
          <if test="record.buyerExtraFee != null">
            buyer_extra_fee = #{record.buyerExtraFee,jdbcType=VARCHAR},
          </if>
          <if test="record.rentingExtraTax != null">
            renting_extra_tax = #{record.rentingExtraTax,jdbcType=VARCHAR},
          </if>
          <if test="record.rentingExtraFee != null">
            renting_extra_fee = #{record.rentingExtraFee,jdbcType=VARCHAR},
          </if>
          <if test="record.descriptionType != null">
            description_type = #{record.descriptionType,jdbcType=INTEGER},
          </if>
          <if test="record.descriptionContent != null">
            description_content = #{record.descriptionContent,jdbcType=VARCHAR},
          </if>
          <if test="record.installmentInterestRate != null">
            installment_interest_rate = #{record.installmentInterestRate,jdbcType=VARCHAR},
          </if>
          <if test="record.paymentMethod != null">
            payment_method = #{record.paymentMethod,jdbcType=INTEGER},
          </if>
          <if test="record.transactionSituation != null">
            transaction_situation = #{record.transactionSituation,jdbcType=INTEGER},
          </if>
          <if test="record.taxBurden != null">
            tax_burden = #{record.taxBurden,jdbcType=INTEGER},
          </if>
          <if test="record.scopeProperty != null">
            scope_property = #{record.scopeProperty,jdbcType=INTEGER},
          </if>
          <if test="record.scopeInclude != null">
            scope_include = #{record.scopeInclude,jdbcType=VARCHAR},
          </if>
          <if test="record.scopeNotInclude != null">
            scope_not_include = #{record.scopeNotInclude,jdbcType=VARCHAR},
          </if>
          <if test="record.scopePropertyExplain != null">
            scope_property_explain = #{record.scopePropertyExplain,jdbcType=VARCHAR},
          </if>
          <if test="record.downPaymentRatio != null">
            down_payment_ratio = #{record.downPaymentRatio,jdbcType=VARCHAR},
          </if>
          <if test="record.lendingRate != null">
            lending_rate = #{record.lendingRate,jdbcType=VARCHAR},
          </if>
          <if test="record.loanPeriod != null">
            loan_period = #{record.loanPeriod,jdbcType=INTEGER},
          </if>
          <if test="record.deposit != null">
            deposit = #{record.deposit,jdbcType=VARCHAR},
          </if>
          <if test="record.informationType != null">
            information_type = #{record.informationType,jdbcType=INTEGER},
          </if>
          <if test="record.informationCategory != null">
            information_category = #{record.informationCategory,jdbcType=INTEGER},
          </if>
          <if test="record.name != null">
            name = #{record.name,jdbcType=VARCHAR},
          </if>
          <if test="record.phone != null">
            phone = #{record.phone,jdbcType=VARCHAR},
          </if>
          <if test="record.landBuyerSeller != null">
            land_buyer_seller = #{record.landBuyerSeller,jdbcType=VARCHAR},
          </if>
          <if test="record.priceType != null">
            price_type = #{record.priceType,jdbcType=INTEGER},
          </if>
          <if test="record.priceConnotation != null">
            price_connotation = #{record.priceConnotation,jdbcType=INTEGER},
          </if>
          <if test="record.priceConnotationUnit != null">
            price_connotation_unit = #{record.priceConnotationUnit,jdbcType=VARCHAR},
          </if>
          <if test="record.perMuPrice != null">
            per_mu_price = #{record.perMuPrice,jdbcType=DECIMAL},
          </if>
          <if test="record.cost != null">
            cost = #{record.cost,jdbcType=DECIMAL},
          </if>
          <if test="record.bisMark != null">
            bis_mark = #{record.bisMark,jdbcType=BIT},
          </if>
          <if test="record.bisDelete != null">
            bis_delete = #{record.bisDelete,jdbcType=BIT},
          </if>
          <if test="record.creator != null">
            creator = #{record.creator,jdbcType=VARCHAR},
          </if>
          <if test="record.gmtCreated != null">
            gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
          </if>
          <if test="record.gmtModified != null">
            gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
          </if>
        </trim>
      </otherwise>
    </choose>
    where id = #{record.id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.copower.pmcc.assess.dal.basis.entity.BasicHouseTrading">
    update tb_basic_house_trading
    set apply_id = #{applyId,jdbcType=INTEGER},
      house_id = #{houseId,jdbcType=INTEGER},
      trading_time = #{tradingTime,jdbcType=TIMESTAMP},
      trading_type = #{tradingType,jdbcType=INTEGER},
      trading_total_price = #{tradingTotalPrice,jdbcType=DECIMAL},
      transaction_level = #{transactionLevel,jdbcType=VARCHAR},
      trading_unit_price = #{tradingUnitPrice,jdbcType=DECIMAL},
      buyer_extra_tax = #{buyerExtraTax,jdbcType=VARCHAR},
      buyer_extra_fee = #{buyerExtraFee,jdbcType=VARCHAR},
      renting_extra_tax = #{rentingExtraTax,jdbcType=VARCHAR},
      renting_extra_fee = #{rentingExtraFee,jdbcType=VARCHAR},
      description_type = #{descriptionType,jdbcType=INTEGER},
      description_content = #{descriptionContent,jdbcType=VARCHAR},
      installment_interest_rate = #{installmentInterestRate,jdbcType=VARCHAR},
      payment_method = #{paymentMethod,jdbcType=INTEGER},
      transaction_situation = #{transactionSituation,jdbcType=INTEGER},
      tax_burden = #{taxBurden,jdbcType=INTEGER},
      scope_property = #{scopeProperty,jdbcType=INTEGER},
      scope_include = #{scopeInclude,jdbcType=VARCHAR},
      scope_not_include = #{scopeNotInclude,jdbcType=VARCHAR},
      scope_property_explain = #{scopePropertyExplain,jdbcType=VARCHAR},
      down_payment_ratio = #{downPaymentRatio,jdbcType=VARCHAR},
      lending_rate = #{lendingRate,jdbcType=VARCHAR},
      loan_period = #{loanPeriod,jdbcType=INTEGER},
      deposit = #{deposit,jdbcType=VARCHAR},
      information_type = #{informationType,jdbcType=INTEGER},
      information_category = #{informationCategory,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      land_buyer_seller = #{landBuyerSeller,jdbcType=VARCHAR},
      price_type = #{priceType,jdbcType=INTEGER},
      price_connotation = #{priceConnotation,jdbcType=INTEGER},
      price_connotation_unit = #{priceConnotationUnit,jdbcType=VARCHAR},
      per_mu_price = #{perMuPrice,jdbcType=DECIMAL},
      cost = #{cost,jdbcType=DECIMAL},
      bis_mark = #{bisMark,jdbcType=BIT},
      bis_delete = #{bisDelete,jdbcType=BIT},
      creator = #{creator,jdbcType=VARCHAR},
      gmt_created = #{gmtCreated,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    insert into tb_basic_house_trading
    (apply_id, house_id, trading_time, trading_type, trading_total_price, transaction_level, 
      trading_unit_price, buyer_extra_tax, buyer_extra_fee, renting_extra_tax, renting_extra_fee, 
      description_type, description_content, installment_interest_rate, payment_method, 
      transaction_situation, tax_burden, scope_property, scope_include, scope_not_include, 
      scope_property_explain, down_payment_ratio, lending_rate, loan_period, deposit, 
      information_type, information_category, name, phone, land_buyer_seller, price_type, 
      price_connotation, price_connotation_unit, per_mu_price, cost, bis_mark, bis_delete, 
      creator, gmt_created, gmt_modified)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.applyId,jdbcType=INTEGER}, #{item.houseId,jdbcType=INTEGER}, #{item.tradingTime,jdbcType=TIMESTAMP}, 
        #{item.tradingType,jdbcType=INTEGER}, #{item.tradingTotalPrice,jdbcType=DECIMAL}, 
        #{item.transactionLevel,jdbcType=VARCHAR}, #{item.tradingUnitPrice,jdbcType=DECIMAL}, 
        #{item.buyerExtraTax,jdbcType=VARCHAR}, #{item.buyerExtraFee,jdbcType=VARCHAR}, 
        #{item.rentingExtraTax,jdbcType=VARCHAR}, #{item.rentingExtraFee,jdbcType=VARCHAR}, 
        #{item.descriptionType,jdbcType=INTEGER}, #{item.descriptionContent,jdbcType=VARCHAR}, 
        #{item.installmentInterestRate,jdbcType=VARCHAR}, #{item.paymentMethod,jdbcType=INTEGER}, 
        #{item.transactionSituation,jdbcType=INTEGER}, #{item.taxBurden,jdbcType=INTEGER}, 
        #{item.scopeProperty,jdbcType=INTEGER}, #{item.scopeInclude,jdbcType=VARCHAR}, 
        #{item.scopeNotInclude,jdbcType=VARCHAR}, #{item.scopePropertyExplain,jdbcType=VARCHAR}, 
        #{item.downPaymentRatio,jdbcType=VARCHAR}, #{item.lendingRate,jdbcType=VARCHAR}, 
        #{item.loanPeriod,jdbcType=INTEGER}, #{item.deposit,jdbcType=VARCHAR}, #{item.informationType,jdbcType=INTEGER}, 
        #{item.informationCategory,jdbcType=INTEGER}, #{item.name,jdbcType=VARCHAR}, #{item.phone,jdbcType=VARCHAR}, 
        #{item.landBuyerSeller,jdbcType=VARCHAR}, #{item.priceType,jdbcType=INTEGER}, #{item.priceConnotation,jdbcType=INTEGER}, 
        #{item.priceConnotationUnit,jdbcType=VARCHAR}, #{item.perMuPrice,jdbcType=DECIMAL}, 
        #{item.cost,jdbcType=DECIMAL}, #{item.bisMark,jdbcType=BIT}, #{item.bisDelete,jdbcType=BIT}, 
        #{item.creator,jdbcType=VARCHAR}, #{item.gmtCreated,jdbcType=TIMESTAMP}, #{item.gmtModified,jdbcType=TIMESTAMP}
        )
    </foreach>
  </insert>
  <insert id="batchInsertSelective" keyColumn="id" keyProperty="list.id" parameterType="map" useGeneratedKeys="true">
    insert into tb_basic_house_trading (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'apply_id'.toString() == column.value">
          #{item.applyId,jdbcType=INTEGER}
        </if>
        <if test="'house_id'.toString() == column.value">
          #{item.houseId,jdbcType=INTEGER}
        </if>
        <if test="'trading_time'.toString() == column.value">
          #{item.tradingTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'trading_type'.toString() == column.value">
          #{item.tradingType,jdbcType=INTEGER}
        </if>
        <if test="'trading_total_price'.toString() == column.value">
          #{item.tradingTotalPrice,jdbcType=DECIMAL}
        </if>
        <if test="'transaction_level'.toString() == column.value">
          #{item.transactionLevel,jdbcType=VARCHAR}
        </if>
        <if test="'trading_unit_price'.toString() == column.value">
          #{item.tradingUnitPrice,jdbcType=DECIMAL}
        </if>
        <if test="'buyer_extra_tax'.toString() == column.value">
          #{item.buyerExtraTax,jdbcType=VARCHAR}
        </if>
        <if test="'buyer_extra_fee'.toString() == column.value">
          #{item.buyerExtraFee,jdbcType=VARCHAR}
        </if>
        <if test="'renting_extra_tax'.toString() == column.value">
          #{item.rentingExtraTax,jdbcType=VARCHAR}
        </if>
        <if test="'renting_extra_fee'.toString() == column.value">
          #{item.rentingExtraFee,jdbcType=VARCHAR}
        </if>
        <if test="'description_type'.toString() == column.value">
          #{item.descriptionType,jdbcType=INTEGER}
        </if>
        <if test="'description_content'.toString() == column.value">
          #{item.descriptionContent,jdbcType=VARCHAR}
        </if>
        <if test="'installment_interest_rate'.toString() == column.value">
          #{item.installmentInterestRate,jdbcType=VARCHAR}
        </if>
        <if test="'payment_method'.toString() == column.value">
          #{item.paymentMethod,jdbcType=INTEGER}
        </if>
        <if test="'transaction_situation'.toString() == column.value">
          #{item.transactionSituation,jdbcType=INTEGER}
        </if>
        <if test="'tax_burden'.toString() == column.value">
          #{item.taxBurden,jdbcType=INTEGER}
        </if>
        <if test="'scope_property'.toString() == column.value">
          #{item.scopeProperty,jdbcType=INTEGER}
        </if>
        <if test="'scope_include'.toString() == column.value">
          #{item.scopeInclude,jdbcType=VARCHAR}
        </if>
        <if test="'scope_not_include'.toString() == column.value">
          #{item.scopeNotInclude,jdbcType=VARCHAR}
        </if>
        <if test="'scope_property_explain'.toString() == column.value">
          #{item.scopePropertyExplain,jdbcType=VARCHAR}
        </if>
        <if test="'down_payment_ratio'.toString() == column.value">
          #{item.downPaymentRatio,jdbcType=VARCHAR}
        </if>
        <if test="'lending_rate'.toString() == column.value">
          #{item.lendingRate,jdbcType=VARCHAR}
        </if>
        <if test="'loan_period'.toString() == column.value">
          #{item.loanPeriod,jdbcType=INTEGER}
        </if>
        <if test="'deposit'.toString() == column.value">
          #{item.deposit,jdbcType=VARCHAR}
        </if>
        <if test="'information_type'.toString() == column.value">
          #{item.informationType,jdbcType=INTEGER}
        </if>
        <if test="'information_category'.toString() == column.value">
          #{item.informationCategory,jdbcType=INTEGER}
        </if>
        <if test="'name'.toString() == column.value">
          #{item.name,jdbcType=VARCHAR}
        </if>
        <if test="'phone'.toString() == column.value">
          #{item.phone,jdbcType=VARCHAR}
        </if>
        <if test="'land_buyer_seller'.toString() == column.value">
          #{item.landBuyerSeller,jdbcType=VARCHAR}
        </if>
        <if test="'price_type'.toString() == column.value">
          #{item.priceType,jdbcType=INTEGER}
        </if>
        <if test="'price_connotation'.toString() == column.value">
          #{item.priceConnotation,jdbcType=INTEGER}
        </if>
        <if test="'price_connotation_unit'.toString() == column.value">
          #{item.priceConnotationUnit,jdbcType=VARCHAR}
        </if>
        <if test="'per_mu_price'.toString() == column.value">
          #{item.perMuPrice,jdbcType=DECIMAL}
        </if>
        <if test="'cost'.toString() == column.value">
          #{item.cost,jdbcType=DECIMAL}
        </if>
        <if test="'bis_mark'.toString() == column.value">
          #{item.bisMark,jdbcType=BIT}
        </if>
        <if test="'bis_delete'.toString() == column.value">
          #{item.bisDelete,jdbcType=BIT}
        </if>
        <if test="'creator'.toString() == column.value">
          #{item.creator,jdbcType=VARCHAR}
        </if>
        <if test="'gmt_created'.toString() == column.value">
          #{item.gmtCreated,jdbcType=TIMESTAMP}
        </if>
        <if test="'gmt_modified'.toString() == column.value">
          #{item.gmtModified,jdbcType=TIMESTAMP}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>