<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.copower.pmcc.assess.dal.basis.mapper.DeclareRealtyRealEstateCertMapper">
  <resultMap id="BaseResultMap" type="com.copower.pmcc.assess.dal.basis.entity.DeclareRealtyRealEstateCert">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="pid" jdbcType="INTEGER" property="pid" />
    <result column="plan_details_id" jdbcType="INTEGER" property="planDetailsId" />
    <result column="auto_init_number" jdbcType="INTEGER" property="autoInitNumber" />
    <result column="province" jdbcType="VARCHAR" property="province" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="district" jdbcType="VARCHAR" property="district" />
    <result column="land_cert_get_question" jdbcType="INTEGER" property="landCertGetQuestion" />
    <result column="cert_name" jdbcType="VARCHAR" property="certName" />
    <result column="location" jdbcType="VARCHAR" property="location" />
    <result column="be_located" jdbcType="VARCHAR" property="beLocated" />
    <result column="number" jdbcType="VARCHAR" property="number" />
    <result column="year" jdbcType="VARCHAR" property="year" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="ownership" jdbcType="VARCHAR" property="ownership" />
    <result column="public_situation" jdbcType="INTEGER" property="publicSituation" />
    <result column="public_situation_remark" jdbcType="VARCHAR" property="publicSituationRemark" />
    <result column="street_number" jdbcType="VARCHAR" property="streetNumber" />
    <result column="attached_number" jdbcType="VARCHAR" property="attachedNumber" />
    <result column="building_number" jdbcType="VARCHAR" property="buildingNumber" />
    <result column="unit" jdbcType="VARCHAR" property="unit" />
    <result column="floor" jdbcType="VARCHAR" property="floor" />
    <result column="room_number" jdbcType="VARCHAR" property="roomNumber" />
    <result column="registration_time" jdbcType="TIMESTAMP" property="registrationTime" />
    <result column="nature" jdbcType="INTEGER" property="nature" />
    <result column="house_cert_use" jdbcType="VARCHAR" property="houseCertUse" />
    <result column="house_cert_use_category" jdbcType="VARCHAR" property="houseCertUseCategory" />
    <result column="housing_structure" jdbcType="VARCHAR" property="housingStructure" />
    <result column="floor_count" jdbcType="VARCHAR" property="floorCount" />
    <result column="floor_area" jdbcType="DECIMAL" property="floorArea" />
    <result column="evidence_area" jdbcType="DECIMAL" property="evidenceArea" />
    <result column="inner_area" jdbcType="DECIMAL" property="innerArea" />
    <result column="other" jdbcType="VARCHAR" property="other" />
    <result column="land_number" jdbcType="VARCHAR" property="landNumber" />
    <result column="graph_number" jdbcType="VARCHAR" property="graphNumber" />
    <result column="land_acquisition" jdbcType="VARCHAR" property="landAcquisition" />
    <result column="use_start_date" jdbcType="TIMESTAMP" property="useStartDate" />
    <result column="use_end_date" jdbcType="TIMESTAMP" property="useEndDate" />
    <result column="public_area" jdbcType="DECIMAL" property="publicArea" />
    <result column="other_note" jdbcType="VARCHAR" property="otherNote" />
    <result column="registration_authority" jdbcType="VARCHAR" property="registrationAuthority" />
    <result column="registration_date" jdbcType="TIMESTAMP" property="registrationDate" />
    <result column="land_right_nature" jdbcType="INTEGER" property="landRightNature" />
    <result column="land_right_type" jdbcType="INTEGER" property="landRightType" />
    <result column="acquisition_price" jdbcType="DECIMAL" property="acquisitionPrice" />
    <result column="land_cert_use" jdbcType="VARCHAR" property="landCertUse" />
    <result column="land_cert_use_category" jdbcType="VARCHAR" property="landCertUseCategory" />
    <result column="acquisition_type" jdbcType="VARCHAR" property="acquisitionType" />
    <result column="termination_date" jdbcType="TIMESTAMP" property="terminationDate" />
    <result column="memo" jdbcType="VARCHAR" property="memo" />
    <result column="apportionment_area" jdbcType="DECIMAL" property="apportionmentArea" />
    <result column="acreage" jdbcType="DECIMAL" property="acreage" />
    <result column="use_right_area" jdbcType="DECIMAL" property="useRightArea" />
    <result column="enable" jdbcType="VARCHAR" property="enable" />
    <result column="declare_type" jdbcType="VARCHAR" property="declareType" />
    <result column="approval_mechanism" jdbcType="VARCHAR" property="approvalMechanism" />
    <result column="approval_time" jdbcType="TIMESTAMP" property="approvalTime" />
    <result column="approval_name" jdbcType="VARCHAR" property="approvalName" />
    <result column="real_estate_unit_number" jdbcType="VARCHAR" property="realEstateUnitNumber" />
    <result column="land_apportion_area" jdbcType="DECIMAL" property="landApportionArea" />
    <result column="bis_record" jdbcType="BIT" property="bisRecord" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="gmt_created" jdbcType="TIMESTAMP" property="gmtCreated" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, pid, plan_details_id, auto_init_number, province, city, district, land_cert_get_question, 
    cert_name, location, be_located, number, year, name, ownership, public_situation, 
    public_situation_remark, street_number, attached_number, building_number, unit, floor, 
    room_number, registration_time, nature, house_cert_use, house_cert_use_category, 
    housing_structure, floor_count, floor_area, evidence_area, inner_area, other, land_number, 
    graph_number, land_acquisition, use_start_date, use_end_date, public_area, other_note, 
    registration_authority, registration_date, land_right_nature, land_right_type, acquisition_price, 
    land_cert_use, land_cert_use_category, acquisition_type, termination_date, memo, 
    apportionment_area, acreage, use_right_area, enable, declare_type, approval_mechanism, 
    approval_time, approval_name, real_estate_unit_number, land_apportion_area, bis_record, 
    creator, gmt_created, gmt_modified
  </sql>
  <select id="selectByExample" parameterType="com.copower.pmcc.assess.dal.basis.entity.DeclareRealtyRealEstateCertExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_declare_realty_real_estate_cert
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_declare_realty_real_estate_cert
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_declare_realty_real_estate_cert
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.copower.pmcc.assess.dal.basis.entity.DeclareRealtyRealEstateCertExample">
    delete from tb_declare_realty_real_estate_cert
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.copower.pmcc.assess.dal.basis.entity.DeclareRealtyRealEstateCert">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_declare_realty_real_estate_cert (pid, plan_details_id, auto_init_number, 
      province, city, district, 
      land_cert_get_question, cert_name, location, 
      be_located, number, year, 
      name, ownership, public_situation, 
      public_situation_remark, street_number, attached_number, 
      building_number, unit, floor, 
      room_number, registration_time, nature, 
      house_cert_use, house_cert_use_category, housing_structure, 
      floor_count, floor_area, evidence_area, 
      inner_area, other, land_number, 
      graph_number, land_acquisition, use_start_date, 
      use_end_date, public_area, other_note, 
      registration_authority, registration_date, 
      land_right_nature, land_right_type, acquisition_price, 
      land_cert_use, land_cert_use_category, acquisition_type, 
      termination_date, memo, apportionment_area, 
      acreage, use_right_area, enable, 
      declare_type, approval_mechanism, approval_time, 
      approval_name, real_estate_unit_number, land_apportion_area, 
      bis_record, creator, gmt_created, 
      gmt_modified)
    values (#{pid,jdbcType=INTEGER}, #{planDetailsId,jdbcType=INTEGER}, #{autoInitNumber,jdbcType=INTEGER}, 
      #{province,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, #{district,jdbcType=VARCHAR}, 
      #{landCertGetQuestion,jdbcType=INTEGER}, #{certName,jdbcType=VARCHAR}, #{location,jdbcType=VARCHAR}, 
      #{beLocated,jdbcType=VARCHAR}, #{number,jdbcType=VARCHAR}, #{year,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{ownership,jdbcType=VARCHAR}, #{publicSituation,jdbcType=INTEGER}, 
      #{publicSituationRemark,jdbcType=VARCHAR}, #{streetNumber,jdbcType=VARCHAR}, #{attachedNumber,jdbcType=VARCHAR}, 
      #{buildingNumber,jdbcType=VARCHAR}, #{unit,jdbcType=VARCHAR}, #{floor,jdbcType=VARCHAR}, 
      #{roomNumber,jdbcType=VARCHAR}, #{registrationTime,jdbcType=TIMESTAMP}, #{nature,jdbcType=INTEGER}, 
      #{houseCertUse,jdbcType=VARCHAR}, #{houseCertUseCategory,jdbcType=VARCHAR}, #{housingStructure,jdbcType=VARCHAR}, 
      #{floorCount,jdbcType=VARCHAR}, #{floorArea,jdbcType=DECIMAL}, #{evidenceArea,jdbcType=DECIMAL}, 
      #{innerArea,jdbcType=DECIMAL}, #{other,jdbcType=VARCHAR}, #{landNumber,jdbcType=VARCHAR}, 
      #{graphNumber,jdbcType=VARCHAR}, #{landAcquisition,jdbcType=VARCHAR}, #{useStartDate,jdbcType=TIMESTAMP}, 
      #{useEndDate,jdbcType=TIMESTAMP}, #{publicArea,jdbcType=DECIMAL}, #{otherNote,jdbcType=VARCHAR}, 
      #{registrationAuthority,jdbcType=VARCHAR}, #{registrationDate,jdbcType=TIMESTAMP}, 
      #{landRightNature,jdbcType=INTEGER}, #{landRightType,jdbcType=INTEGER}, #{acquisitionPrice,jdbcType=DECIMAL}, 
      #{landCertUse,jdbcType=VARCHAR}, #{landCertUseCategory,jdbcType=VARCHAR}, #{acquisitionType,jdbcType=VARCHAR}, 
      #{terminationDate,jdbcType=TIMESTAMP}, #{memo,jdbcType=VARCHAR}, #{apportionmentArea,jdbcType=DECIMAL}, 
      #{acreage,jdbcType=DECIMAL}, #{useRightArea,jdbcType=DECIMAL}, #{enable,jdbcType=VARCHAR}, 
      #{declareType,jdbcType=VARCHAR}, #{approvalMechanism,jdbcType=VARCHAR}, #{approvalTime,jdbcType=TIMESTAMP}, 
      #{approvalName,jdbcType=VARCHAR}, #{realEstateUnitNumber,jdbcType=VARCHAR}, #{landApportionArea,jdbcType=DECIMAL}, 
      #{bisRecord,jdbcType=BIT}, #{creator,jdbcType=VARCHAR}, #{gmtCreated,jdbcType=TIMESTAMP}, 
      #{gmtModified,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="map">
    <selectKey keyProperty="record.id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_declare_realty_real_estate_cert
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.pid != null">
            pid,
          </if>
          <if test="record.planDetailsId != null">
            plan_details_id,
          </if>
          <if test="record.autoInitNumber != null">
            auto_init_number,
          </if>
          <if test="record.province != null">
            province,
          </if>
          <if test="record.city != null">
            city,
          </if>
          <if test="record.district != null">
            district,
          </if>
          <if test="record.landCertGetQuestion != null">
            land_cert_get_question,
          </if>
          <if test="record.certName != null">
            cert_name,
          </if>
          <if test="record.location != null">
            location,
          </if>
          <if test="record.beLocated != null">
            be_located,
          </if>
          <if test="record.number != null">
            number,
          </if>
          <if test="record.year != null">
            year,
          </if>
          <if test="record.name != null">
            name,
          </if>
          <if test="record.ownership != null">
            ownership,
          </if>
          <if test="record.publicSituation != null">
            public_situation,
          </if>
          <if test="record.publicSituationRemark != null">
            public_situation_remark,
          </if>
          <if test="record.streetNumber != null">
            street_number,
          </if>
          <if test="record.attachedNumber != null">
            attached_number,
          </if>
          <if test="record.buildingNumber != null">
            building_number,
          </if>
          <if test="record.unit != null">
            unit,
          </if>
          <if test="record.floor != null">
            floor,
          </if>
          <if test="record.roomNumber != null">
            room_number,
          </if>
          <if test="record.registrationTime != null">
            registration_time,
          </if>
          <if test="record.nature != null">
            nature,
          </if>
          <if test="record.houseCertUse != null">
            house_cert_use,
          </if>
          <if test="record.houseCertUseCategory != null">
            house_cert_use_category,
          </if>
          <if test="record.housingStructure != null">
            housing_structure,
          </if>
          <if test="record.floorCount != null">
            floor_count,
          </if>
          <if test="record.floorArea != null">
            floor_area,
          </if>
          <if test="record.evidenceArea != null">
            evidence_area,
          </if>
          <if test="record.innerArea != null">
            inner_area,
          </if>
          <if test="record.other != null">
            other,
          </if>
          <if test="record.landNumber != null">
            land_number,
          </if>
          <if test="record.graphNumber != null">
            graph_number,
          </if>
          <if test="record.landAcquisition != null">
            land_acquisition,
          </if>
          <if test="record.useStartDate != null">
            use_start_date,
          </if>
          <if test="record.useEndDate != null">
            use_end_date,
          </if>
          <if test="record.publicArea != null">
            public_area,
          </if>
          <if test="record.otherNote != null">
            other_note,
          </if>
          <if test="record.registrationAuthority != null">
            registration_authority,
          </if>
          <if test="record.registrationDate != null">
            registration_date,
          </if>
          <if test="record.landRightNature != null">
            land_right_nature,
          </if>
          <if test="record.landRightType != null">
            land_right_type,
          </if>
          <if test="record.acquisitionPrice != null">
            acquisition_price,
          </if>
          <if test="record.landCertUse != null">
            land_cert_use,
          </if>
          <if test="record.landCertUseCategory != null">
            land_cert_use_category,
          </if>
          <if test="record.acquisitionType != null">
            acquisition_type,
          </if>
          <if test="record.terminationDate != null">
            termination_date,
          </if>
          <if test="record.memo != null">
            memo,
          </if>
          <if test="record.apportionmentArea != null">
            apportionment_area,
          </if>
          <if test="record.acreage != null">
            acreage,
          </if>
          <if test="record.useRightArea != null">
            use_right_area,
          </if>
          <if test="record.enable != null">
            enable,
          </if>
          <if test="record.declareType != null">
            declare_type,
          </if>
          <if test="record.approvalMechanism != null">
            approval_mechanism,
          </if>
          <if test="record.approvalTime != null">
            approval_time,
          </if>
          <if test="record.approvalName != null">
            approval_name,
          </if>
          <if test="record.realEstateUnitNumber != null">
            real_estate_unit_number,
          </if>
          <if test="record.landApportionArea != null">
            land_apportion_area,
          </if>
          <if test="record.bisRecord != null">
            bis_record,
          </if>
          <if test="record.creator != null">
            creator,
          </if>
          <if test="record.gmtCreated != null">
            gmt_created,
          </if>
          <if test="record.gmtModified != null">
            gmt_modified,
          </if>
        </trim>
        <trim prefix="(" suffix=")" suffixOverrides="," />
      </otherwise>
    </choose>
    values
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.pid != null">
            #{record.pid,jdbcType=INTEGER},
          </if>
          <if test="record.planDetailsId != null">
            #{record.planDetailsId,jdbcType=INTEGER},
          </if>
          <if test="record.autoInitNumber != null">
            #{record.autoInitNumber,jdbcType=INTEGER},
          </if>
          <if test="record.province != null">
            #{record.province,jdbcType=VARCHAR},
          </if>
          <if test="record.city != null">
            #{record.city,jdbcType=VARCHAR},
          </if>
          <if test="record.district != null">
            #{record.district,jdbcType=VARCHAR},
          </if>
          <if test="record.landCertGetQuestion != null">
            #{record.landCertGetQuestion,jdbcType=INTEGER},
          </if>
          <if test="record.certName != null">
            #{record.certName,jdbcType=VARCHAR},
          </if>
          <if test="record.location != null">
            #{record.location,jdbcType=VARCHAR},
          </if>
          <if test="record.beLocated != null">
            #{record.beLocated,jdbcType=VARCHAR},
          </if>
          <if test="record.number != null">
            #{record.number,jdbcType=VARCHAR},
          </if>
          <if test="record.year != null">
            #{record.year,jdbcType=VARCHAR},
          </if>
          <if test="record.name != null">
            #{record.name,jdbcType=VARCHAR},
          </if>
          <if test="record.ownership != null">
            #{record.ownership,jdbcType=VARCHAR},
          </if>
          <if test="record.publicSituation != null">
            #{record.publicSituation,jdbcType=INTEGER},
          </if>
          <if test="record.publicSituationRemark != null">
            #{record.publicSituationRemark,jdbcType=VARCHAR},
          </if>
          <if test="record.streetNumber != null">
            #{record.streetNumber,jdbcType=VARCHAR},
          </if>
          <if test="record.attachedNumber != null">
            #{record.attachedNumber,jdbcType=VARCHAR},
          </if>
          <if test="record.buildingNumber != null">
            #{record.buildingNumber,jdbcType=VARCHAR},
          </if>
          <if test="record.unit != null">
            #{record.unit,jdbcType=VARCHAR},
          </if>
          <if test="record.floor != null">
            #{record.floor,jdbcType=VARCHAR},
          </if>
          <if test="record.roomNumber != null">
            #{record.roomNumber,jdbcType=VARCHAR},
          </if>
          <if test="record.registrationTime != null">
            #{record.registrationTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.nature != null">
            #{record.nature,jdbcType=INTEGER},
          </if>
          <if test="record.houseCertUse != null">
            #{record.houseCertUse,jdbcType=VARCHAR},
          </if>
          <if test="record.houseCertUseCategory != null">
            #{record.houseCertUseCategory,jdbcType=VARCHAR},
          </if>
          <if test="record.housingStructure != null">
            #{record.housingStructure,jdbcType=VARCHAR},
          </if>
          <if test="record.floorCount != null">
            #{record.floorCount,jdbcType=VARCHAR},
          </if>
          <if test="record.floorArea != null">
            #{record.floorArea,jdbcType=DECIMAL},
          </if>
          <if test="record.evidenceArea != null">
            #{record.evidenceArea,jdbcType=DECIMAL},
          </if>
          <if test="record.innerArea != null">
            #{record.innerArea,jdbcType=DECIMAL},
          </if>
          <if test="record.other != null">
            #{record.other,jdbcType=VARCHAR},
          </if>
          <if test="record.landNumber != null">
            #{record.landNumber,jdbcType=VARCHAR},
          </if>
          <if test="record.graphNumber != null">
            #{record.graphNumber,jdbcType=VARCHAR},
          </if>
          <if test="record.landAcquisition != null">
            #{record.landAcquisition,jdbcType=VARCHAR},
          </if>
          <if test="record.useStartDate != null">
            #{record.useStartDate,jdbcType=TIMESTAMP},
          </if>
          <if test="record.useEndDate != null">
            #{record.useEndDate,jdbcType=TIMESTAMP},
          </if>
          <if test="record.publicArea != null">
            #{record.publicArea,jdbcType=DECIMAL},
          </if>
          <if test="record.otherNote != null">
            #{record.otherNote,jdbcType=VARCHAR},
          </if>
          <if test="record.registrationAuthority != null">
            #{record.registrationAuthority,jdbcType=VARCHAR},
          </if>
          <if test="record.registrationDate != null">
            #{record.registrationDate,jdbcType=TIMESTAMP},
          </if>
          <if test="record.landRightNature != null">
            #{record.landRightNature,jdbcType=INTEGER},
          </if>
          <if test="record.landRightType != null">
            #{record.landRightType,jdbcType=INTEGER},
          </if>
          <if test="record.acquisitionPrice != null">
            #{record.acquisitionPrice,jdbcType=DECIMAL},
          </if>
          <if test="record.landCertUse != null">
            #{record.landCertUse,jdbcType=VARCHAR},
          </if>
          <if test="record.landCertUseCategory != null">
            #{record.landCertUseCategory,jdbcType=VARCHAR},
          </if>
          <if test="record.acquisitionType != null">
            #{record.acquisitionType,jdbcType=VARCHAR},
          </if>
          <if test="record.terminationDate != null">
            #{record.terminationDate,jdbcType=TIMESTAMP},
          </if>
          <if test="record.memo != null">
            #{record.memo,jdbcType=VARCHAR},
          </if>
          <if test="record.apportionmentArea != null">
            #{record.apportionmentArea,jdbcType=DECIMAL},
          </if>
          <if test="record.acreage != null">
            #{record.acreage,jdbcType=DECIMAL},
          </if>
          <if test="record.useRightArea != null">
            #{record.useRightArea,jdbcType=DECIMAL},
          </if>
          <if test="record.enable != null">
            #{record.enable,jdbcType=VARCHAR},
          </if>
          <if test="record.declareType != null">
            #{record.declareType,jdbcType=VARCHAR},
          </if>
          <if test="record.approvalMechanism != null">
            #{record.approvalMechanism,jdbcType=VARCHAR},
          </if>
          <if test="record.approvalTime != null">
            #{record.approvalTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.approvalName != null">
            #{record.approvalName,jdbcType=VARCHAR},
          </if>
          <if test="record.realEstateUnitNumber != null">
            #{record.realEstateUnitNumber,jdbcType=VARCHAR},
          </if>
          <if test="record.landApportionArea != null">
            #{record.landApportionArea,jdbcType=DECIMAL},
          </if>
          <if test="record.bisRecord != null">
            #{record.bisRecord,jdbcType=BIT},
          </if>
          <if test="record.creator != null">
            #{record.creator,jdbcType=VARCHAR},
          </if>
          <if test="record.gmtCreated != null">
            #{record.gmtCreated,jdbcType=TIMESTAMP},
          </if>
          <if test="record.gmtModified != null">
            #{record.gmtModified,jdbcType=TIMESTAMP},
          </if>
        </trim>
      </otherwise>
    </choose>
  </insert>
  <select id="countByExample" parameterType="com.copower.pmcc.assess.dal.basis.entity.DeclareRealtyRealEstateCertExample" resultType="java.lang.Long">
    select count(*) from tb_declare_realty_real_estate_cert
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_declare_realty_real_estate_cert
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.id != null">
            id = #{record.id,jdbcType=INTEGER},
          </if>
          <if test="record.pid != null">
            pid = #{record.pid,jdbcType=INTEGER},
          </if>
          <if test="record.planDetailsId != null">
            plan_details_id = #{record.planDetailsId,jdbcType=INTEGER},
          </if>
          <if test="record.autoInitNumber != null">
            auto_init_number = #{record.autoInitNumber,jdbcType=INTEGER},
          </if>
          <if test="record.province != null">
            province = #{record.province,jdbcType=VARCHAR},
          </if>
          <if test="record.city != null">
            city = #{record.city,jdbcType=VARCHAR},
          </if>
          <if test="record.district != null">
            district = #{record.district,jdbcType=VARCHAR},
          </if>
          <if test="record.landCertGetQuestion != null">
            land_cert_get_question = #{record.landCertGetQuestion,jdbcType=INTEGER},
          </if>
          <if test="record.certName != null">
            cert_name = #{record.certName,jdbcType=VARCHAR},
          </if>
          <if test="record.location != null">
            location = #{record.location,jdbcType=VARCHAR},
          </if>
          <if test="record.beLocated != null">
            be_located = #{record.beLocated,jdbcType=VARCHAR},
          </if>
          <if test="record.number != null">
            number = #{record.number,jdbcType=VARCHAR},
          </if>
          <if test="record.year != null">
            year = #{record.year,jdbcType=VARCHAR},
          </if>
          <if test="record.name != null">
            name = #{record.name,jdbcType=VARCHAR},
          </if>
          <if test="record.ownership != null">
            ownership = #{record.ownership,jdbcType=VARCHAR},
          </if>
          <if test="record.publicSituation != null">
            public_situation = #{record.publicSituation,jdbcType=INTEGER},
          </if>
          <if test="record.publicSituationRemark != null">
            public_situation_remark = #{record.publicSituationRemark,jdbcType=VARCHAR},
          </if>
          <if test="record.streetNumber != null">
            street_number = #{record.streetNumber,jdbcType=VARCHAR},
          </if>
          <if test="record.attachedNumber != null">
            attached_number = #{record.attachedNumber,jdbcType=VARCHAR},
          </if>
          <if test="record.buildingNumber != null">
            building_number = #{record.buildingNumber,jdbcType=VARCHAR},
          </if>
          <if test="record.unit != null">
            unit = #{record.unit,jdbcType=VARCHAR},
          </if>
          <if test="record.floor != null">
            floor = #{record.floor,jdbcType=VARCHAR},
          </if>
          <if test="record.roomNumber != null">
            room_number = #{record.roomNumber,jdbcType=VARCHAR},
          </if>
          <if test="record.registrationTime != null">
            registration_time = #{record.registrationTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.nature != null">
            nature = #{record.nature,jdbcType=INTEGER},
          </if>
          <if test="record.houseCertUse != null">
            house_cert_use = #{record.houseCertUse,jdbcType=VARCHAR},
          </if>
          <if test="record.houseCertUseCategory != null">
            house_cert_use_category = #{record.houseCertUseCategory,jdbcType=VARCHAR},
          </if>
          <if test="record.housingStructure != null">
            housing_structure = #{record.housingStructure,jdbcType=VARCHAR},
          </if>
          <if test="record.floorCount != null">
            floor_count = #{record.floorCount,jdbcType=VARCHAR},
          </if>
          <if test="record.floorArea != null">
            floor_area = #{record.floorArea,jdbcType=DECIMAL},
          </if>
          <if test="record.evidenceArea != null">
            evidence_area = #{record.evidenceArea,jdbcType=DECIMAL},
          </if>
          <if test="record.innerArea != null">
            inner_area = #{record.innerArea,jdbcType=DECIMAL},
          </if>
          <if test="record.other != null">
            other = #{record.other,jdbcType=VARCHAR},
          </if>
          <if test="record.landNumber != null">
            land_number = #{record.landNumber,jdbcType=VARCHAR},
          </if>
          <if test="record.graphNumber != null">
            graph_number = #{record.graphNumber,jdbcType=VARCHAR},
          </if>
          <if test="record.landAcquisition != null">
            land_acquisition = #{record.landAcquisition,jdbcType=VARCHAR},
          </if>
          <if test="record.useStartDate != null">
            use_start_date = #{record.useStartDate,jdbcType=TIMESTAMP},
          </if>
          <if test="record.useEndDate != null">
            use_end_date = #{record.useEndDate,jdbcType=TIMESTAMP},
          </if>
          <if test="record.publicArea != null">
            public_area = #{record.publicArea,jdbcType=DECIMAL},
          </if>
          <if test="record.otherNote != null">
            other_note = #{record.otherNote,jdbcType=VARCHAR},
          </if>
          <if test="record.registrationAuthority != null">
            registration_authority = #{record.registrationAuthority,jdbcType=VARCHAR},
          </if>
          <if test="record.registrationDate != null">
            registration_date = #{record.registrationDate,jdbcType=TIMESTAMP},
          </if>
          <if test="record.landRightNature != null">
            land_right_nature = #{record.landRightNature,jdbcType=INTEGER},
          </if>
          <if test="record.landRightType != null">
            land_right_type = #{record.landRightType,jdbcType=INTEGER},
          </if>
          <if test="record.acquisitionPrice != null">
            acquisition_price = #{record.acquisitionPrice,jdbcType=DECIMAL},
          </if>
          <if test="record.landCertUse != null">
            land_cert_use = #{record.landCertUse,jdbcType=VARCHAR},
          </if>
          <if test="record.landCertUseCategory != null">
            land_cert_use_category = #{record.landCertUseCategory,jdbcType=VARCHAR},
          </if>
          <if test="record.acquisitionType != null">
            acquisition_type = #{record.acquisitionType,jdbcType=VARCHAR},
          </if>
          <if test="record.terminationDate != null">
            termination_date = #{record.terminationDate,jdbcType=TIMESTAMP},
          </if>
          <if test="record.memo != null">
            memo = #{record.memo,jdbcType=VARCHAR},
          </if>
          <if test="record.apportionmentArea != null">
            apportionment_area = #{record.apportionmentArea,jdbcType=DECIMAL},
          </if>
          <if test="record.acreage != null">
            acreage = #{record.acreage,jdbcType=DECIMAL},
          </if>
          <if test="record.useRightArea != null">
            use_right_area = #{record.useRightArea,jdbcType=DECIMAL},
          </if>
          <if test="record.enable != null">
            enable = #{record.enable,jdbcType=VARCHAR},
          </if>
          <if test="record.declareType != null">
            declare_type = #{record.declareType,jdbcType=VARCHAR},
          </if>
          <if test="record.approvalMechanism != null">
            approval_mechanism = #{record.approvalMechanism,jdbcType=VARCHAR},
          </if>
          <if test="record.approvalTime != null">
            approval_time = #{record.approvalTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.approvalName != null">
            approval_name = #{record.approvalName,jdbcType=VARCHAR},
          </if>
          <if test="record.realEstateUnitNumber != null">
            real_estate_unit_number = #{record.realEstateUnitNumber,jdbcType=VARCHAR},
          </if>
          <if test="record.landApportionArea != null">
            land_apportion_area = #{record.landApportionArea,jdbcType=DECIMAL},
          </if>
          <if test="record.bisRecord != null">
            bis_record = #{record.bisRecord,jdbcType=BIT},
          </if>
          <if test="record.creator != null">
            creator = #{record.creator,jdbcType=VARCHAR},
          </if>
          <if test="record.gmtCreated != null">
            gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
          </if>
          <if test="record.gmtModified != null">
            gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
          </if>
        </trim>
      </otherwise>
    </choose>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_declare_realty_real_estate_cert
    set id = #{record.id,jdbcType=INTEGER},
      pid = #{record.pid,jdbcType=INTEGER},
      plan_details_id = #{record.planDetailsId,jdbcType=INTEGER},
      auto_init_number = #{record.autoInitNumber,jdbcType=INTEGER},
      province = #{record.province,jdbcType=VARCHAR},
      city = #{record.city,jdbcType=VARCHAR},
      district = #{record.district,jdbcType=VARCHAR},
      land_cert_get_question = #{record.landCertGetQuestion,jdbcType=INTEGER},
      cert_name = #{record.certName,jdbcType=VARCHAR},
      location = #{record.location,jdbcType=VARCHAR},
      be_located = #{record.beLocated,jdbcType=VARCHAR},
      number = #{record.number,jdbcType=VARCHAR},
      year = #{record.year,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      ownership = #{record.ownership,jdbcType=VARCHAR},
      public_situation = #{record.publicSituation,jdbcType=INTEGER},
      public_situation_remark = #{record.publicSituationRemark,jdbcType=VARCHAR},
      street_number = #{record.streetNumber,jdbcType=VARCHAR},
      attached_number = #{record.attachedNumber,jdbcType=VARCHAR},
      building_number = #{record.buildingNumber,jdbcType=VARCHAR},
      unit = #{record.unit,jdbcType=VARCHAR},
      floor = #{record.floor,jdbcType=VARCHAR},
      room_number = #{record.roomNumber,jdbcType=VARCHAR},
      registration_time = #{record.registrationTime,jdbcType=TIMESTAMP},
      nature = #{record.nature,jdbcType=INTEGER},
      house_cert_use = #{record.houseCertUse,jdbcType=VARCHAR},
      house_cert_use_category = #{record.houseCertUseCategory,jdbcType=VARCHAR},
      housing_structure = #{record.housingStructure,jdbcType=VARCHAR},
      floor_count = #{record.floorCount,jdbcType=VARCHAR},
      floor_area = #{record.floorArea,jdbcType=DECIMAL},
      evidence_area = #{record.evidenceArea,jdbcType=DECIMAL},
      inner_area = #{record.innerArea,jdbcType=DECIMAL},
      other = #{record.other,jdbcType=VARCHAR},
      land_number = #{record.landNumber,jdbcType=VARCHAR},
      graph_number = #{record.graphNumber,jdbcType=VARCHAR},
      land_acquisition = #{record.landAcquisition,jdbcType=VARCHAR},
      use_start_date = #{record.useStartDate,jdbcType=TIMESTAMP},
      use_end_date = #{record.useEndDate,jdbcType=TIMESTAMP},
      public_area = #{record.publicArea,jdbcType=DECIMAL},
      other_note = #{record.otherNote,jdbcType=VARCHAR},
      registration_authority = #{record.registrationAuthority,jdbcType=VARCHAR},
      registration_date = #{record.registrationDate,jdbcType=TIMESTAMP},
      land_right_nature = #{record.landRightNature,jdbcType=INTEGER},
      land_right_type = #{record.landRightType,jdbcType=INTEGER},
      acquisition_price = #{record.acquisitionPrice,jdbcType=DECIMAL},
      land_cert_use = #{record.landCertUse,jdbcType=VARCHAR},
      land_cert_use_category = #{record.landCertUseCategory,jdbcType=VARCHAR},
      acquisition_type = #{record.acquisitionType,jdbcType=VARCHAR},
      termination_date = #{record.terminationDate,jdbcType=TIMESTAMP},
      memo = #{record.memo,jdbcType=VARCHAR},
      apportionment_area = #{record.apportionmentArea,jdbcType=DECIMAL},
      acreage = #{record.acreage,jdbcType=DECIMAL},
      use_right_area = #{record.useRightArea,jdbcType=DECIMAL},
      enable = #{record.enable,jdbcType=VARCHAR},
      declare_type = #{record.declareType,jdbcType=VARCHAR},
      approval_mechanism = #{record.approvalMechanism,jdbcType=VARCHAR},
      approval_time = #{record.approvalTime,jdbcType=TIMESTAMP},
      approval_name = #{record.approvalName,jdbcType=VARCHAR},
      real_estate_unit_number = #{record.realEstateUnitNumber,jdbcType=VARCHAR},
      land_apportion_area = #{record.landApportionArea,jdbcType=DECIMAL},
      bis_record = #{record.bisRecord,jdbcType=BIT},
      creator = #{record.creator,jdbcType=VARCHAR},
      gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="map">
    update tb_declare_realty_real_estate_cert
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.pid != null">
            pid = #{record.pid,jdbcType=INTEGER},
          </if>
          <if test="record.planDetailsId != null">
            plan_details_id = #{record.planDetailsId,jdbcType=INTEGER},
          </if>
          <if test="record.autoInitNumber != null">
            auto_init_number = #{record.autoInitNumber,jdbcType=INTEGER},
          </if>
          <if test="record.province != null">
            province = #{record.province,jdbcType=VARCHAR},
          </if>
          <if test="record.city != null">
            city = #{record.city,jdbcType=VARCHAR},
          </if>
          <if test="record.district != null">
            district = #{record.district,jdbcType=VARCHAR},
          </if>
          <if test="record.landCertGetQuestion != null">
            land_cert_get_question = #{record.landCertGetQuestion,jdbcType=INTEGER},
          </if>
          <if test="record.certName != null">
            cert_name = #{record.certName,jdbcType=VARCHAR},
          </if>
          <if test="record.location != null">
            location = #{record.location,jdbcType=VARCHAR},
          </if>
          <if test="record.beLocated != null">
            be_located = #{record.beLocated,jdbcType=VARCHAR},
          </if>
          <if test="record.number != null">
            number = #{record.number,jdbcType=VARCHAR},
          </if>
          <if test="record.year != null">
            year = #{record.year,jdbcType=VARCHAR},
          </if>
          <if test="record.name != null">
            name = #{record.name,jdbcType=VARCHAR},
          </if>
          <if test="record.ownership != null">
            ownership = #{record.ownership,jdbcType=VARCHAR},
          </if>
          <if test="record.publicSituation != null">
            public_situation = #{record.publicSituation,jdbcType=INTEGER},
          </if>
          <if test="record.publicSituationRemark != null">
            public_situation_remark = #{record.publicSituationRemark,jdbcType=VARCHAR},
          </if>
          <if test="record.streetNumber != null">
            street_number = #{record.streetNumber,jdbcType=VARCHAR},
          </if>
          <if test="record.attachedNumber != null">
            attached_number = #{record.attachedNumber,jdbcType=VARCHAR},
          </if>
          <if test="record.buildingNumber != null">
            building_number = #{record.buildingNumber,jdbcType=VARCHAR},
          </if>
          <if test="record.unit != null">
            unit = #{record.unit,jdbcType=VARCHAR},
          </if>
          <if test="record.floor != null">
            floor = #{record.floor,jdbcType=VARCHAR},
          </if>
          <if test="record.roomNumber != null">
            room_number = #{record.roomNumber,jdbcType=VARCHAR},
          </if>
          <if test="record.registrationTime != null">
            registration_time = #{record.registrationTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.nature != null">
            nature = #{record.nature,jdbcType=INTEGER},
          </if>
          <if test="record.houseCertUse != null">
            house_cert_use = #{record.houseCertUse,jdbcType=VARCHAR},
          </if>
          <if test="record.houseCertUseCategory != null">
            house_cert_use_category = #{record.houseCertUseCategory,jdbcType=VARCHAR},
          </if>
          <if test="record.housingStructure != null">
            housing_structure = #{record.housingStructure,jdbcType=VARCHAR},
          </if>
          <if test="record.floorCount != null">
            floor_count = #{record.floorCount,jdbcType=VARCHAR},
          </if>
          <if test="record.floorArea != null">
            floor_area = #{record.floorArea,jdbcType=DECIMAL},
          </if>
          <if test="record.evidenceArea != null">
            evidence_area = #{record.evidenceArea,jdbcType=DECIMAL},
          </if>
          <if test="record.innerArea != null">
            inner_area = #{record.innerArea,jdbcType=DECIMAL},
          </if>
          <if test="record.other != null">
            other = #{record.other,jdbcType=VARCHAR},
          </if>
          <if test="record.landNumber != null">
            land_number = #{record.landNumber,jdbcType=VARCHAR},
          </if>
          <if test="record.graphNumber != null">
            graph_number = #{record.graphNumber,jdbcType=VARCHAR},
          </if>
          <if test="record.landAcquisition != null">
            land_acquisition = #{record.landAcquisition,jdbcType=VARCHAR},
          </if>
          <if test="record.useStartDate != null">
            use_start_date = #{record.useStartDate,jdbcType=TIMESTAMP},
          </if>
          <if test="record.useEndDate != null">
            use_end_date = #{record.useEndDate,jdbcType=TIMESTAMP},
          </if>
          <if test="record.publicArea != null">
            public_area = #{record.publicArea,jdbcType=DECIMAL},
          </if>
          <if test="record.otherNote != null">
            other_note = #{record.otherNote,jdbcType=VARCHAR},
          </if>
          <if test="record.registrationAuthority != null">
            registration_authority = #{record.registrationAuthority,jdbcType=VARCHAR},
          </if>
          <if test="record.registrationDate != null">
            registration_date = #{record.registrationDate,jdbcType=TIMESTAMP},
          </if>
          <if test="record.landRightNature != null">
            land_right_nature = #{record.landRightNature,jdbcType=INTEGER},
          </if>
          <if test="record.landRightType != null">
            land_right_type = #{record.landRightType,jdbcType=INTEGER},
          </if>
          <if test="record.acquisitionPrice != null">
            acquisition_price = #{record.acquisitionPrice,jdbcType=DECIMAL},
          </if>
          <if test="record.landCertUse != null">
            land_cert_use = #{record.landCertUse,jdbcType=VARCHAR},
          </if>
          <if test="record.landCertUseCategory != null">
            land_cert_use_category = #{record.landCertUseCategory,jdbcType=VARCHAR},
          </if>
          <if test="record.acquisitionType != null">
            acquisition_type = #{record.acquisitionType,jdbcType=VARCHAR},
          </if>
          <if test="record.terminationDate != null">
            termination_date = #{record.terminationDate,jdbcType=TIMESTAMP},
          </if>
          <if test="record.memo != null">
            memo = #{record.memo,jdbcType=VARCHAR},
          </if>
          <if test="record.apportionmentArea != null">
            apportionment_area = #{record.apportionmentArea,jdbcType=DECIMAL},
          </if>
          <if test="record.acreage != null">
            acreage = #{record.acreage,jdbcType=DECIMAL},
          </if>
          <if test="record.useRightArea != null">
            use_right_area = #{record.useRightArea,jdbcType=DECIMAL},
          </if>
          <if test="record.enable != null">
            enable = #{record.enable,jdbcType=VARCHAR},
          </if>
          <if test="record.declareType != null">
            declare_type = #{record.declareType,jdbcType=VARCHAR},
          </if>
          <if test="record.approvalMechanism != null">
            approval_mechanism = #{record.approvalMechanism,jdbcType=VARCHAR},
          </if>
          <if test="record.approvalTime != null">
            approval_time = #{record.approvalTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.approvalName != null">
            approval_name = #{record.approvalName,jdbcType=VARCHAR},
          </if>
          <if test="record.realEstateUnitNumber != null">
            real_estate_unit_number = #{record.realEstateUnitNumber,jdbcType=VARCHAR},
          </if>
          <if test="record.landApportionArea != null">
            land_apportion_area = #{record.landApportionArea,jdbcType=DECIMAL},
          </if>
          <if test="record.bisRecord != null">
            bis_record = #{record.bisRecord,jdbcType=BIT},
          </if>
          <if test="record.creator != null">
            creator = #{record.creator,jdbcType=VARCHAR},
          </if>
          <if test="record.gmtCreated != null">
            gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
          </if>
          <if test="record.gmtModified != null">
            gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
          </if>
        </trim>
      </otherwise>
    </choose>
    where id = #{record.id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.copower.pmcc.assess.dal.basis.entity.DeclareRealtyRealEstateCert">
    update tb_declare_realty_real_estate_cert
    set pid = #{pid,jdbcType=INTEGER},
      plan_details_id = #{planDetailsId,jdbcType=INTEGER},
      auto_init_number = #{autoInitNumber,jdbcType=INTEGER},
      province = #{province,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      district = #{district,jdbcType=VARCHAR},
      land_cert_get_question = #{landCertGetQuestion,jdbcType=INTEGER},
      cert_name = #{certName,jdbcType=VARCHAR},
      location = #{location,jdbcType=VARCHAR},
      be_located = #{beLocated,jdbcType=VARCHAR},
      number = #{number,jdbcType=VARCHAR},
      year = #{year,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      ownership = #{ownership,jdbcType=VARCHAR},
      public_situation = #{publicSituation,jdbcType=INTEGER},
      public_situation_remark = #{publicSituationRemark,jdbcType=VARCHAR},
      street_number = #{streetNumber,jdbcType=VARCHAR},
      attached_number = #{attachedNumber,jdbcType=VARCHAR},
      building_number = #{buildingNumber,jdbcType=VARCHAR},
      unit = #{unit,jdbcType=VARCHAR},
      floor = #{floor,jdbcType=VARCHAR},
      room_number = #{roomNumber,jdbcType=VARCHAR},
      registration_time = #{registrationTime,jdbcType=TIMESTAMP},
      nature = #{nature,jdbcType=INTEGER},
      house_cert_use = #{houseCertUse,jdbcType=VARCHAR},
      house_cert_use_category = #{houseCertUseCategory,jdbcType=VARCHAR},
      housing_structure = #{housingStructure,jdbcType=VARCHAR},
      floor_count = #{floorCount,jdbcType=VARCHAR},
      floor_area = #{floorArea,jdbcType=DECIMAL},
      evidence_area = #{evidenceArea,jdbcType=DECIMAL},
      inner_area = #{innerArea,jdbcType=DECIMAL},
      other = #{other,jdbcType=VARCHAR},
      land_number = #{landNumber,jdbcType=VARCHAR},
      graph_number = #{graphNumber,jdbcType=VARCHAR},
      land_acquisition = #{landAcquisition,jdbcType=VARCHAR},
      use_start_date = #{useStartDate,jdbcType=TIMESTAMP},
      use_end_date = #{useEndDate,jdbcType=TIMESTAMP},
      public_area = #{publicArea,jdbcType=DECIMAL},
      other_note = #{otherNote,jdbcType=VARCHAR},
      registration_authority = #{registrationAuthority,jdbcType=VARCHAR},
      registration_date = #{registrationDate,jdbcType=TIMESTAMP},
      land_right_nature = #{landRightNature,jdbcType=INTEGER},
      land_right_type = #{landRightType,jdbcType=INTEGER},
      acquisition_price = #{acquisitionPrice,jdbcType=DECIMAL},
      land_cert_use = #{landCertUse,jdbcType=VARCHAR},
      land_cert_use_category = #{landCertUseCategory,jdbcType=VARCHAR},
      acquisition_type = #{acquisitionType,jdbcType=VARCHAR},
      termination_date = #{terminationDate,jdbcType=TIMESTAMP},
      memo = #{memo,jdbcType=VARCHAR},
      apportionment_area = #{apportionmentArea,jdbcType=DECIMAL},
      acreage = #{acreage,jdbcType=DECIMAL},
      use_right_area = #{useRightArea,jdbcType=DECIMAL},
      enable = #{enable,jdbcType=VARCHAR},
      declare_type = #{declareType,jdbcType=VARCHAR},
      approval_mechanism = #{approvalMechanism,jdbcType=VARCHAR},
      approval_time = #{approvalTime,jdbcType=TIMESTAMP},
      approval_name = #{approvalName,jdbcType=VARCHAR},
      real_estate_unit_number = #{realEstateUnitNumber,jdbcType=VARCHAR},
      land_apportion_area = #{landApportionArea,jdbcType=DECIMAL},
      bis_record = #{bisRecord,jdbcType=BIT},
      creator = #{creator,jdbcType=VARCHAR},
      gmt_created = #{gmtCreated,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    insert into tb_declare_realty_real_estate_cert
    (pid, plan_details_id, auto_init_number, province, city, district, land_cert_get_question, 
      cert_name, location, be_located, number, year, name, ownership, public_situation, 
      public_situation_remark, street_number, attached_number, building_number, unit, 
      floor, room_number, registration_time, nature, house_cert_use, house_cert_use_category, 
      housing_structure, floor_count, floor_area, evidence_area, inner_area, other, land_number, 
      graph_number, land_acquisition, use_start_date, use_end_date, public_area, other_note, 
      registration_authority, registration_date, land_right_nature, land_right_type, 
      acquisition_price, land_cert_use, land_cert_use_category, acquisition_type, termination_date, 
      memo, apportionment_area, acreage, use_right_area, enable, declare_type, approval_mechanism, 
      approval_time, approval_name, real_estate_unit_number, land_apportion_area, bis_record, 
      creator, gmt_created, gmt_modified)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.pid,jdbcType=INTEGER}, #{item.planDetailsId,jdbcType=INTEGER}, #{item.autoInitNumber,jdbcType=INTEGER}, 
        #{item.province,jdbcType=VARCHAR}, #{item.city,jdbcType=VARCHAR}, #{item.district,jdbcType=VARCHAR}, 
        #{item.landCertGetQuestion,jdbcType=INTEGER}, #{item.certName,jdbcType=VARCHAR}, 
        #{item.location,jdbcType=VARCHAR}, #{item.beLocated,jdbcType=VARCHAR}, #{item.number,jdbcType=VARCHAR}, 
        #{item.year,jdbcType=VARCHAR}, #{item.name,jdbcType=VARCHAR}, #{item.ownership,jdbcType=VARCHAR}, 
        #{item.publicSituation,jdbcType=INTEGER}, #{item.publicSituationRemark,jdbcType=VARCHAR}, 
        #{item.streetNumber,jdbcType=VARCHAR}, #{item.attachedNumber,jdbcType=VARCHAR}, 
        #{item.buildingNumber,jdbcType=VARCHAR}, #{item.unit,jdbcType=VARCHAR}, #{item.floor,jdbcType=VARCHAR}, 
        #{item.roomNumber,jdbcType=VARCHAR}, #{item.registrationTime,jdbcType=TIMESTAMP}, 
        #{item.nature,jdbcType=INTEGER}, #{item.houseCertUse,jdbcType=VARCHAR}, #{item.houseCertUseCategory,jdbcType=VARCHAR}, 
        #{item.housingStructure,jdbcType=VARCHAR}, #{item.floorCount,jdbcType=VARCHAR}, 
        #{item.floorArea,jdbcType=DECIMAL}, #{item.evidenceArea,jdbcType=DECIMAL}, #{item.innerArea,jdbcType=DECIMAL}, 
        #{item.other,jdbcType=VARCHAR}, #{item.landNumber,jdbcType=VARCHAR}, #{item.graphNumber,jdbcType=VARCHAR}, 
        #{item.landAcquisition,jdbcType=VARCHAR}, #{item.useStartDate,jdbcType=TIMESTAMP}, 
        #{item.useEndDate,jdbcType=TIMESTAMP}, #{item.publicArea,jdbcType=DECIMAL}, #{item.otherNote,jdbcType=VARCHAR}, 
        #{item.registrationAuthority,jdbcType=VARCHAR}, #{item.registrationDate,jdbcType=TIMESTAMP}, 
        #{item.landRightNature,jdbcType=INTEGER}, #{item.landRightType,jdbcType=INTEGER}, 
        #{item.acquisitionPrice,jdbcType=DECIMAL}, #{item.landCertUse,jdbcType=VARCHAR}, 
        #{item.landCertUseCategory,jdbcType=VARCHAR}, #{item.acquisitionType,jdbcType=VARCHAR}, 
        #{item.terminationDate,jdbcType=TIMESTAMP}, #{item.memo,jdbcType=VARCHAR}, #{item.apportionmentArea,jdbcType=DECIMAL}, 
        #{item.acreage,jdbcType=DECIMAL}, #{item.useRightArea,jdbcType=DECIMAL}, #{item.enable,jdbcType=VARCHAR}, 
        #{item.declareType,jdbcType=VARCHAR}, #{item.approvalMechanism,jdbcType=VARCHAR}, 
        #{item.approvalTime,jdbcType=TIMESTAMP}, #{item.approvalName,jdbcType=VARCHAR}, 
        #{item.realEstateUnitNumber,jdbcType=VARCHAR}, #{item.landApportionArea,jdbcType=DECIMAL}, 
        #{item.bisRecord,jdbcType=BIT}, #{item.creator,jdbcType=VARCHAR}, #{item.gmtCreated,jdbcType=TIMESTAMP}, 
        #{item.gmtModified,jdbcType=TIMESTAMP})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" keyColumn="id" keyProperty="list.id" parameterType="map" useGeneratedKeys="true">
    insert into tb_declare_realty_real_estate_cert (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'pid'.toString() == column.value">
          #{item.pid,jdbcType=INTEGER}
        </if>
        <if test="'plan_details_id'.toString() == column.value">
          #{item.planDetailsId,jdbcType=INTEGER}
        </if>
        <if test="'auto_init_number'.toString() == column.value">
          #{item.autoInitNumber,jdbcType=INTEGER}
        </if>
        <if test="'province'.toString() == column.value">
          #{item.province,jdbcType=VARCHAR}
        </if>
        <if test="'city'.toString() == column.value">
          #{item.city,jdbcType=VARCHAR}
        </if>
        <if test="'district'.toString() == column.value">
          #{item.district,jdbcType=VARCHAR}
        </if>
        <if test="'land_cert_get_question'.toString() == column.value">
          #{item.landCertGetQuestion,jdbcType=INTEGER}
        </if>
        <if test="'cert_name'.toString() == column.value">
          #{item.certName,jdbcType=VARCHAR}
        </if>
        <if test="'location'.toString() == column.value">
          #{item.location,jdbcType=VARCHAR}
        </if>
        <if test="'be_located'.toString() == column.value">
          #{item.beLocated,jdbcType=VARCHAR}
        </if>
        <if test="'number'.toString() == column.value">
          #{item.number,jdbcType=VARCHAR}
        </if>
        <if test="'year'.toString() == column.value">
          #{item.year,jdbcType=VARCHAR}
        </if>
        <if test="'name'.toString() == column.value">
          #{item.name,jdbcType=VARCHAR}
        </if>
        <if test="'ownership'.toString() == column.value">
          #{item.ownership,jdbcType=VARCHAR}
        </if>
        <if test="'public_situation'.toString() == column.value">
          #{item.publicSituation,jdbcType=INTEGER}
        </if>
        <if test="'public_situation_remark'.toString() == column.value">
          #{item.publicSituationRemark,jdbcType=VARCHAR}
        </if>
        <if test="'street_number'.toString() == column.value">
          #{item.streetNumber,jdbcType=VARCHAR}
        </if>
        <if test="'attached_number'.toString() == column.value">
          #{item.attachedNumber,jdbcType=VARCHAR}
        </if>
        <if test="'building_number'.toString() == column.value">
          #{item.buildingNumber,jdbcType=VARCHAR}
        </if>
        <if test="'unit'.toString() == column.value">
          #{item.unit,jdbcType=VARCHAR}
        </if>
        <if test="'floor'.toString() == column.value">
          #{item.floor,jdbcType=VARCHAR}
        </if>
        <if test="'room_number'.toString() == column.value">
          #{item.roomNumber,jdbcType=VARCHAR}
        </if>
        <if test="'registration_time'.toString() == column.value">
          #{item.registrationTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'nature'.toString() == column.value">
          #{item.nature,jdbcType=INTEGER}
        </if>
        <if test="'house_cert_use'.toString() == column.value">
          #{item.houseCertUse,jdbcType=VARCHAR}
        </if>
        <if test="'house_cert_use_category'.toString() == column.value">
          #{item.houseCertUseCategory,jdbcType=VARCHAR}
        </if>
        <if test="'housing_structure'.toString() == column.value">
          #{item.housingStructure,jdbcType=VARCHAR}
        </if>
        <if test="'floor_count'.toString() == column.value">
          #{item.floorCount,jdbcType=VARCHAR}
        </if>
        <if test="'floor_area'.toString() == column.value">
          #{item.floorArea,jdbcType=DECIMAL}
        </if>
        <if test="'evidence_area'.toString() == column.value">
          #{item.evidenceArea,jdbcType=DECIMAL}
        </if>
        <if test="'inner_area'.toString() == column.value">
          #{item.innerArea,jdbcType=DECIMAL}
        </if>
        <if test="'other'.toString() == column.value">
          #{item.other,jdbcType=VARCHAR}
        </if>
        <if test="'land_number'.toString() == column.value">
          #{item.landNumber,jdbcType=VARCHAR}
        </if>
        <if test="'graph_number'.toString() == column.value">
          #{item.graphNumber,jdbcType=VARCHAR}
        </if>
        <if test="'land_acquisition'.toString() == column.value">
          #{item.landAcquisition,jdbcType=VARCHAR}
        </if>
        <if test="'use_start_date'.toString() == column.value">
          #{item.useStartDate,jdbcType=TIMESTAMP}
        </if>
        <if test="'use_end_date'.toString() == column.value">
          #{item.useEndDate,jdbcType=TIMESTAMP}
        </if>
        <if test="'public_area'.toString() == column.value">
          #{item.publicArea,jdbcType=DECIMAL}
        </if>
        <if test="'other_note'.toString() == column.value">
          #{item.otherNote,jdbcType=VARCHAR}
        </if>
        <if test="'registration_authority'.toString() == column.value">
          #{item.registrationAuthority,jdbcType=VARCHAR}
        </if>
        <if test="'registration_date'.toString() == column.value">
          #{item.registrationDate,jdbcType=TIMESTAMP}
        </if>
        <if test="'land_right_nature'.toString() == column.value">
          #{item.landRightNature,jdbcType=INTEGER}
        </if>
        <if test="'land_right_type'.toString() == column.value">
          #{item.landRightType,jdbcType=INTEGER}
        </if>
        <if test="'acquisition_price'.toString() == column.value">
          #{item.acquisitionPrice,jdbcType=DECIMAL}
        </if>
        <if test="'land_cert_use'.toString() == column.value">
          #{item.landCertUse,jdbcType=VARCHAR}
        </if>
        <if test="'land_cert_use_category'.toString() == column.value">
          #{item.landCertUseCategory,jdbcType=VARCHAR}
        </if>
        <if test="'acquisition_type'.toString() == column.value">
          #{item.acquisitionType,jdbcType=VARCHAR}
        </if>
        <if test="'termination_date'.toString() == column.value">
          #{item.terminationDate,jdbcType=TIMESTAMP}
        </if>
        <if test="'memo'.toString() == column.value">
          #{item.memo,jdbcType=VARCHAR}
        </if>
        <if test="'apportionment_area'.toString() == column.value">
          #{item.apportionmentArea,jdbcType=DECIMAL}
        </if>
        <if test="'acreage'.toString() == column.value">
          #{item.acreage,jdbcType=DECIMAL}
        </if>
        <if test="'use_right_area'.toString() == column.value">
          #{item.useRightArea,jdbcType=DECIMAL}
        </if>
        <if test="'enable'.toString() == column.value">
          #{item.enable,jdbcType=VARCHAR}
        </if>
        <if test="'declare_type'.toString() == column.value">
          #{item.declareType,jdbcType=VARCHAR}
        </if>
        <if test="'approval_mechanism'.toString() == column.value">
          #{item.approvalMechanism,jdbcType=VARCHAR}
        </if>
        <if test="'approval_time'.toString() == column.value">
          #{item.approvalTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'approval_name'.toString() == column.value">
          #{item.approvalName,jdbcType=VARCHAR}
        </if>
        <if test="'real_estate_unit_number'.toString() == column.value">
          #{item.realEstateUnitNumber,jdbcType=VARCHAR}
        </if>
        <if test="'land_apportion_area'.toString() == column.value">
          #{item.landApportionArea,jdbcType=DECIMAL}
        </if>
        <if test="'bis_record'.toString() == column.value">
          #{item.bisRecord,jdbcType=BIT}
        </if>
        <if test="'creator'.toString() == column.value">
          #{item.creator,jdbcType=VARCHAR}
        </if>
        <if test="'gmt_created'.toString() == column.value">
          #{item.gmtCreated,jdbcType=TIMESTAMP}
        </if>
        <if test="'gmt_modified'.toString() == column.value">
          #{item.gmtModified,jdbcType=TIMESTAMP}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>