<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.copower.pmcc.assess.dal.basis.mapper.BasicMatchingTrafficMapper" >
  <resultMap id="BaseResultMap" type="com.copower.pmcc.assess.dal.basis.entity.BasicMatchingTraffic" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="nature" property="nature" jdbcType="INTEGER" />
    <result column="estate_id" property="estateId" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="distance" property="distance" jdbcType="INTEGER" />
    <result column="line_name" property="lineName" jdbcType="VARCHAR" />
    <result column="the_line" property="theLine" jdbcType="VARCHAR" />
    <result column="limit_speed" property="limitSpeed" jdbcType="VARCHAR" />
    <result column="limit_time" property="limitTime" jdbcType="VARCHAR" />
    <result column="limit_speial" property="limitSpeial" jdbcType="INTEGER" />
    <result column="flag" property="flag" jdbcType="BIT" />
    <result column="cost_standard" property="costStandard" jdbcType="VARCHAR" />
    <result column="creator" property="creator" jdbcType="VARCHAR" />
    <result column="gmt_created" property="gmtCreated" jdbcType="TIMESTAMP" />
    <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, nature, estate_id, type, name, distance, line_name, the_line, limit_speed, limit_time, 
    limit_speial, flag, cost_standard, creator, gmt_created, gmt_modified
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.copower.pmcc.assess.dal.basis.entity.BasicMatchingTrafficExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_basic_matching_traffic
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tb_basic_matching_traffic
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_basic_matching_traffic
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.copower.pmcc.assess.dal.basis.entity.BasicMatchingTrafficExample" >
    delete from tb_basic_matching_traffic
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.copower.pmcc.assess.dal.basis.entity.BasicMatchingTraffic" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_basic_matching_traffic (nature, estate_id, type, 
      name, distance, line_name, 
      the_line, limit_speed, limit_time, 
      limit_speial, flag, cost_standard, 
      creator, gmt_created, gmt_modified
      )
    values (#{nature,jdbcType=INTEGER}, #{estateId,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{distance,jdbcType=INTEGER}, #{lineName,jdbcType=VARCHAR}, 
      #{theLine,jdbcType=VARCHAR}, #{limitSpeed,jdbcType=VARCHAR}, #{limitTime,jdbcType=VARCHAR}, 
      #{limitSpeial,jdbcType=INTEGER}, #{flag,jdbcType=BIT}, #{costStandard,jdbcType=VARCHAR}, 
      #{creator,jdbcType=VARCHAR}, #{gmtCreated,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.copower.pmcc.assess.dal.basis.entity.BasicMatchingTraffic" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_basic_matching_traffic
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="nature != null" >
        nature,
      </if>
      <if test="estateId != null" >
        estate_id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="distance != null" >
        distance,
      </if>
      <if test="lineName != null" >
        line_name,
      </if>
      <if test="theLine != null" >
        the_line,
      </if>
      <if test="limitSpeed != null" >
        limit_speed,
      </if>
      <if test="limitTime != null" >
        limit_time,
      </if>
      <if test="limitSpeial != null" >
        limit_speial,
      </if>
      <if test="flag != null" >
        flag,
      </if>
      <if test="costStandard != null" >
        cost_standard,
      </if>
      <if test="creator != null" >
        creator,
      </if>
      <if test="gmtCreated != null" >
        gmt_created,
      </if>
      <if test="gmtModified != null" >
        gmt_modified,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="nature != null" >
        #{nature,jdbcType=INTEGER},
      </if>
      <if test="estateId != null" >
        #{estateId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="distance != null" >
        #{distance,jdbcType=INTEGER},
      </if>
      <if test="lineName != null" >
        #{lineName,jdbcType=VARCHAR},
      </if>
      <if test="theLine != null" >
        #{theLine,jdbcType=VARCHAR},
      </if>
      <if test="limitSpeed != null" >
        #{limitSpeed,jdbcType=VARCHAR},
      </if>
      <if test="limitTime != null" >
        #{limitTime,jdbcType=VARCHAR},
      </if>
      <if test="limitSpeial != null" >
        #{limitSpeial,jdbcType=INTEGER},
      </if>
      <if test="flag != null" >
        #{flag,jdbcType=BIT},
      </if>
      <if test="costStandard != null" >
        #{costStandard,jdbcType=VARCHAR},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreated != null" >
        #{gmtCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null" >
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.copower.pmcc.assess.dal.basis.entity.BasicMatchingTrafficExample" resultType="java.lang.Integer" >
    select count(*) from tb_basic_matching_traffic
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_basic_matching_traffic
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.nature != null" >
        nature = #{record.nature,jdbcType=INTEGER},
      </if>
      <if test="record.estateId != null" >
        estate_id = #{record.estateId,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.distance != null" >
        distance = #{record.distance,jdbcType=INTEGER},
      </if>
      <if test="record.lineName != null" >
        line_name = #{record.lineName,jdbcType=VARCHAR},
      </if>
      <if test="record.theLine != null" >
        the_line = #{record.theLine,jdbcType=VARCHAR},
      </if>
      <if test="record.limitSpeed != null" >
        limit_speed = #{record.limitSpeed,jdbcType=VARCHAR},
      </if>
      <if test="record.limitTime != null" >
        limit_time = #{record.limitTime,jdbcType=VARCHAR},
      </if>
      <if test="record.limitSpeial != null" >
        limit_speial = #{record.limitSpeial,jdbcType=INTEGER},
      </if>
      <if test="record.flag != null" >
        flag = #{record.flag,jdbcType=BIT},
      </if>
      <if test="record.costStandard != null" >
        cost_standard = #{record.costStandard,jdbcType=VARCHAR},
      </if>
      <if test="record.creator != null" >
        creator = #{record.creator,jdbcType=VARCHAR},
      </if>
      <if test="record.gmtCreated != null" >
        gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModified != null" >
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_basic_matching_traffic
    set id = #{record.id,jdbcType=INTEGER},
      nature = #{record.nature,jdbcType=INTEGER},
      estate_id = #{record.estateId,jdbcType=INTEGER},
      type = #{record.type,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      distance = #{record.distance,jdbcType=INTEGER},
      line_name = #{record.lineName,jdbcType=VARCHAR},
      the_line = #{record.theLine,jdbcType=VARCHAR},
      limit_speed = #{record.limitSpeed,jdbcType=VARCHAR},
      limit_time = #{record.limitTime,jdbcType=VARCHAR},
      limit_speial = #{record.limitSpeial,jdbcType=INTEGER},
      flag = #{record.flag,jdbcType=BIT},
      cost_standard = #{record.costStandard,jdbcType=VARCHAR},
      creator = #{record.creator,jdbcType=VARCHAR},
      gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.copower.pmcc.assess.dal.basis.entity.BasicMatchingTraffic" >
    update tb_basic_matching_traffic
    <set >
      <if test="nature != null" >
        nature = #{nature,jdbcType=INTEGER},
      </if>
      <if test="estateId != null" >
        estate_id = #{estateId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="distance != null" >
        distance = #{distance,jdbcType=INTEGER},
      </if>
      <if test="lineName != null" >
        line_name = #{lineName,jdbcType=VARCHAR},
      </if>
      <if test="theLine != null" >
        the_line = #{theLine,jdbcType=VARCHAR},
      </if>
      <if test="limitSpeed != null" >
        limit_speed = #{limitSpeed,jdbcType=VARCHAR},
      </if>
      <if test="limitTime != null" >
        limit_time = #{limitTime,jdbcType=VARCHAR},
      </if>
      <if test="limitSpeial != null" >
        limit_speial = #{limitSpeial,jdbcType=INTEGER},
      </if>
      <if test="flag != null" >
        flag = #{flag,jdbcType=BIT},
      </if>
      <if test="costStandard != null" >
        cost_standard = #{costStandard,jdbcType=VARCHAR},
      </if>
      <if test="creator != null" >
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreated != null" >
        gmt_created = #{gmtCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null" >
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.copower.pmcc.assess.dal.basis.entity.BasicMatchingTraffic" >
    update tb_basic_matching_traffic
    set nature = #{nature,jdbcType=INTEGER},
      estate_id = #{estateId,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      distance = #{distance,jdbcType=INTEGER},
      line_name = #{lineName,jdbcType=VARCHAR},
      the_line = #{theLine,jdbcType=VARCHAR},
      limit_speed = #{limitSpeed,jdbcType=VARCHAR},
      limit_time = #{limitTime,jdbcType=VARCHAR},
      limit_speial = #{limitSpeial,jdbcType=INTEGER},
      flag = #{flag,jdbcType=BIT},
      cost_standard = #{costStandard,jdbcType=VARCHAR},
      creator = #{creator,jdbcType=VARCHAR},
      gmt_created = #{gmtCreated,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>