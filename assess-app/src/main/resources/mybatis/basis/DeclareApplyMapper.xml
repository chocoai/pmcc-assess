<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.copower.pmcc.assess.dal.basis.mapper.DeclareApplyMapper">
  <resultMap id="BaseResultMap" type="com.copower.pmcc.assess.dal.basis.entity.DeclareApply">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="project_id" jdbcType="INTEGER" property="projectId" />
    <result column="plan_details_id" jdbcType="INTEGER" property="planDetailsId" />
    <result column="process_ins_id" jdbcType="VARCHAR" property="processInsId" />
    <result column="apply_type" jdbcType="VARCHAR" property="applyType" />
    <result column="client" jdbcType="VARCHAR" property="client" />
    <result column="date_limit" jdbcType="TIMESTAMP" property="dateLimit" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="gmt_created" jdbcType="TIMESTAMP" property="gmtCreated" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="assess_area" jdbcType="DECIMAL" property="assessArea" />
    <result column="assess_money" jdbcType="DECIMAL" property="assessMoney" />
    <result column="assess_organization" jdbcType="VARCHAR" property="assessOrganization" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, project_id, plan_details_id, process_ins_id, apply_type, client, date_limit, 
    status, creator, gmt_created, gmt_modified, name, assess_area, assess_money, assess_organization, 
    remark
  </sql>
  <select id="selectByExample" parameterType="com.copower.pmcc.assess.dal.basis.entity.DeclareApplyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_declare_apply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_declare_apply
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_declare_apply
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.copower.pmcc.assess.dal.basis.entity.DeclareApplyExample">
    delete from tb_declare_apply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.copower.pmcc.assess.dal.basis.entity.DeclareApply">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_declare_apply (project_id, plan_details_id, process_ins_id, 
      apply_type, client, date_limit, 
      status, creator, gmt_created, 
      gmt_modified, name, assess_area, 
      assess_money, assess_organization, remark
      )
    values (#{projectId,jdbcType=INTEGER}, #{planDetailsId,jdbcType=INTEGER}, #{processInsId,jdbcType=VARCHAR}, 
      #{applyType,jdbcType=VARCHAR}, #{client,jdbcType=VARCHAR}, #{dateLimit,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=VARCHAR}, #{creator,jdbcType=VARCHAR}, #{gmtCreated,jdbcType=TIMESTAMP}, 
      #{gmtModified,jdbcType=TIMESTAMP}, #{name,jdbcType=VARCHAR}, #{assessArea,jdbcType=DECIMAL}, 
      #{assessMoney,jdbcType=DECIMAL}, #{assessOrganization,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="map">
    <selectKey keyProperty="record.id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_declare_apply
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.projectId != null">
            project_id,
          </if>
          <if test="record.planDetailsId != null">
            plan_details_id,
          </if>
          <if test="record.processInsId != null">
            process_ins_id,
          </if>
          <if test="record.applyType != null">
            apply_type,
          </if>
          <if test="record.client != null">
            client,
          </if>
          <if test="record.dateLimit != null">
            date_limit,
          </if>
          <if test="record.status != null">
            status,
          </if>
          <if test="record.creator != null">
            creator,
          </if>
          <if test="record.gmtCreated != null">
            gmt_created,
          </if>
          <if test="record.gmtModified != null">
            gmt_modified,
          </if>
          <if test="record.name != null">
            name,
          </if>
          <if test="record.assessArea != null">
            assess_area,
          </if>
          <if test="record.assessMoney != null">
            assess_money,
          </if>
          <if test="record.assessOrganization != null">
            assess_organization,
          </if>
          <if test="record.remark != null">
            remark,
          </if>
        </trim>
        <trim prefix="(" suffix=")" suffixOverrides="," />
      </otherwise>
    </choose>
    values
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.projectId != null">
            #{record.projectId,jdbcType=INTEGER},
          </if>
          <if test="record.planDetailsId != null">
            #{record.planDetailsId,jdbcType=INTEGER},
          </if>
          <if test="record.processInsId != null">
            #{record.processInsId,jdbcType=VARCHAR},
          </if>
          <if test="record.applyType != null">
            #{record.applyType,jdbcType=VARCHAR},
          </if>
          <if test="record.client != null">
            #{record.client,jdbcType=VARCHAR},
          </if>
          <if test="record.dateLimit != null">
            #{record.dateLimit,jdbcType=TIMESTAMP},
          </if>
          <if test="record.status != null">
            #{record.status,jdbcType=VARCHAR},
          </if>
          <if test="record.creator != null">
            #{record.creator,jdbcType=VARCHAR},
          </if>
          <if test="record.gmtCreated != null">
            #{record.gmtCreated,jdbcType=TIMESTAMP},
          </if>
          <if test="record.gmtModified != null">
            #{record.gmtModified,jdbcType=TIMESTAMP},
          </if>
          <if test="record.name != null">
            #{record.name,jdbcType=VARCHAR},
          </if>
          <if test="record.assessArea != null">
            #{record.assessArea,jdbcType=DECIMAL},
          </if>
          <if test="record.assessMoney != null">
            #{record.assessMoney,jdbcType=DECIMAL},
          </if>
          <if test="record.assessOrganization != null">
            #{record.assessOrganization,jdbcType=VARCHAR},
          </if>
          <if test="record.remark != null">
            #{record.remark,jdbcType=VARCHAR},
          </if>
        </trim>
      </otherwise>
    </choose>
  </insert>
  <select id="countByExample" parameterType="com.copower.pmcc.assess.dal.basis.entity.DeclareApplyExample" resultType="java.lang.Long">
    select count(*) from tb_declare_apply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_declare_apply
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.id != null">
            id = #{record.id,jdbcType=INTEGER},
          </if>
          <if test="record.projectId != null">
            project_id = #{record.projectId,jdbcType=INTEGER},
          </if>
          <if test="record.planDetailsId != null">
            plan_details_id = #{record.planDetailsId,jdbcType=INTEGER},
          </if>
          <if test="record.processInsId != null">
            process_ins_id = #{record.processInsId,jdbcType=VARCHAR},
          </if>
          <if test="record.applyType != null">
            apply_type = #{record.applyType,jdbcType=VARCHAR},
          </if>
          <if test="record.client != null">
            client = #{record.client,jdbcType=VARCHAR},
          </if>
          <if test="record.dateLimit != null">
            date_limit = #{record.dateLimit,jdbcType=TIMESTAMP},
          </if>
          <if test="record.status != null">
            status = #{record.status,jdbcType=VARCHAR},
          </if>
          <if test="record.creator != null">
            creator = #{record.creator,jdbcType=VARCHAR},
          </if>
          <if test="record.gmtCreated != null">
            gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
          </if>
          <if test="record.gmtModified != null">
            gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
          </if>
          <if test="record.name != null">
            name = #{record.name,jdbcType=VARCHAR},
          </if>
          <if test="record.assessArea != null">
            assess_area = #{record.assessArea,jdbcType=DECIMAL},
          </if>
          <if test="record.assessMoney != null">
            assess_money = #{record.assessMoney,jdbcType=DECIMAL},
          </if>
          <if test="record.assessOrganization != null">
            assess_organization = #{record.assessOrganization,jdbcType=VARCHAR},
          </if>
          <if test="record.remark != null">
            remark = #{record.remark,jdbcType=VARCHAR},
          </if>
        </trim>
      </otherwise>
    </choose>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_declare_apply
    set id = #{record.id,jdbcType=INTEGER},
      project_id = #{record.projectId,jdbcType=INTEGER},
      plan_details_id = #{record.planDetailsId,jdbcType=INTEGER},
      process_ins_id = #{record.processInsId,jdbcType=VARCHAR},
      apply_type = #{record.applyType,jdbcType=VARCHAR},
      client = #{record.client,jdbcType=VARCHAR},
      date_limit = #{record.dateLimit,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=VARCHAR},
      creator = #{record.creator,jdbcType=VARCHAR},
      gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      name = #{record.name,jdbcType=VARCHAR},
      assess_area = #{record.assessArea,jdbcType=DECIMAL},
      assess_money = #{record.assessMoney,jdbcType=DECIMAL},
      assess_organization = #{record.assessOrganization,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="map">
    update tb_declare_apply
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.projectId != null">
            project_id = #{record.projectId,jdbcType=INTEGER},
          </if>
          <if test="record.planDetailsId != null">
            plan_details_id = #{record.planDetailsId,jdbcType=INTEGER},
          </if>
          <if test="record.processInsId != null">
            process_ins_id = #{record.processInsId,jdbcType=VARCHAR},
          </if>
          <if test="record.applyType != null">
            apply_type = #{record.applyType,jdbcType=VARCHAR},
          </if>
          <if test="record.client != null">
            client = #{record.client,jdbcType=VARCHAR},
          </if>
          <if test="record.dateLimit != null">
            date_limit = #{record.dateLimit,jdbcType=TIMESTAMP},
          </if>
          <if test="record.status != null">
            status = #{record.status,jdbcType=VARCHAR},
          </if>
          <if test="record.creator != null">
            creator = #{record.creator,jdbcType=VARCHAR},
          </if>
          <if test="record.gmtCreated != null">
            gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
          </if>
          <if test="record.gmtModified != null">
            gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
          </if>
          <if test="record.name != null">
            name = #{record.name,jdbcType=VARCHAR},
          </if>
          <if test="record.assessArea != null">
            assess_area = #{record.assessArea,jdbcType=DECIMAL},
          </if>
          <if test="record.assessMoney != null">
            assess_money = #{record.assessMoney,jdbcType=DECIMAL},
          </if>
          <if test="record.assessOrganization != null">
            assess_organization = #{record.assessOrganization,jdbcType=VARCHAR},
          </if>
          <if test="record.remark != null">
            remark = #{record.remark,jdbcType=VARCHAR},
          </if>
        </trim>
      </otherwise>
    </choose>
    where id = #{record.id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.copower.pmcc.assess.dal.basis.entity.DeclareApply">
    update tb_declare_apply
    set project_id = #{projectId,jdbcType=INTEGER},
      plan_details_id = #{planDetailsId,jdbcType=INTEGER},
      process_ins_id = #{processInsId,jdbcType=VARCHAR},
      apply_type = #{applyType,jdbcType=VARCHAR},
      client = #{client,jdbcType=VARCHAR},
      date_limit = #{dateLimit,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR},
      creator = #{creator,jdbcType=VARCHAR},
      gmt_created = #{gmtCreated,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      name = #{name,jdbcType=VARCHAR},
      assess_area = #{assessArea,jdbcType=DECIMAL},
      assess_money = #{assessMoney,jdbcType=DECIMAL},
      assess_organization = #{assessOrganization,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    insert into tb_declare_apply
    (project_id, plan_details_id, process_ins_id, apply_type, client, date_limit, status, 
      creator, gmt_created, gmt_modified, name, assess_area, assess_money, assess_organization, 
      remark)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.projectId,jdbcType=INTEGER}, #{item.planDetailsId,jdbcType=INTEGER}, #{item.processInsId,jdbcType=VARCHAR}, 
        #{item.applyType,jdbcType=VARCHAR}, #{item.client,jdbcType=VARCHAR}, #{item.dateLimit,jdbcType=TIMESTAMP}, 
        #{item.status,jdbcType=VARCHAR}, #{item.creator,jdbcType=VARCHAR}, #{item.gmtCreated,jdbcType=TIMESTAMP}, 
        #{item.gmtModified,jdbcType=TIMESTAMP}, #{item.name,jdbcType=VARCHAR}, #{item.assessArea,jdbcType=DECIMAL}, 
        #{item.assessMoney,jdbcType=DECIMAL}, #{item.assessOrganization,jdbcType=VARCHAR}, 
        #{item.remark,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" keyColumn="id" keyProperty="list.id" parameterType="map" useGeneratedKeys="true">
    insert into tb_declare_apply (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'project_id'.toString() == column.value">
          #{item.projectId,jdbcType=INTEGER}
        </if>
        <if test="'plan_details_id'.toString() == column.value">
          #{item.planDetailsId,jdbcType=INTEGER}
        </if>
        <if test="'process_ins_id'.toString() == column.value">
          #{item.processInsId,jdbcType=VARCHAR}
        </if>
        <if test="'apply_type'.toString() == column.value">
          #{item.applyType,jdbcType=VARCHAR}
        </if>
        <if test="'client'.toString() == column.value">
          #{item.client,jdbcType=VARCHAR}
        </if>
        <if test="'date_limit'.toString() == column.value">
          #{item.dateLimit,jdbcType=TIMESTAMP}
        </if>
        <if test="'status'.toString() == column.value">
          #{item.status,jdbcType=VARCHAR}
        </if>
        <if test="'creator'.toString() == column.value">
          #{item.creator,jdbcType=VARCHAR}
        </if>
        <if test="'gmt_created'.toString() == column.value">
          #{item.gmtCreated,jdbcType=TIMESTAMP}
        </if>
        <if test="'gmt_modified'.toString() == column.value">
          #{item.gmtModified,jdbcType=TIMESTAMP}
        </if>
        <if test="'name'.toString() == column.value">
          #{item.name,jdbcType=VARCHAR}
        </if>
        <if test="'assess_area'.toString() == column.value">
          #{item.assessArea,jdbcType=DECIMAL}
        </if>
        <if test="'assess_money'.toString() == column.value">
          #{item.assessMoney,jdbcType=DECIMAL}
        </if>
        <if test="'assess_organization'.toString() == column.value">
          #{item.assessOrganization,jdbcType=VARCHAR}
        </if>
        <if test="'remark'.toString() == column.value">
          #{item.remark,jdbcType=VARCHAR}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>