<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.copower.pmcc.assess.dal.basis.mapper.MdCostConstructionMapper" >
  <resultMap id="BaseResultMap" type="com.copower.pmcc.assess.dal.basis.entity.MdCostConstruction" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="construction_assessment_price_correcting" property="constructionAssessmentPriceCorrecting" jdbcType="DECIMAL" />
    <result column="construction_assessment_value" property="constructionAssessmentValue" jdbcType="VARCHAR" />
    <result column="investment_profit" property="investmentProfit" jdbcType="VARCHAR" />
    <result column="interest_investment" property="interestInvestment" jdbcType="VARCHAR" />
    <result column="construction_subtotal" property="constructionSubtotal" jdbcType="VARCHAR" />
    <result column="land_get_cost_total" property="landGetCostTotal" jdbcType="VARCHAR" />
    <result column="json_content" property="jsonContent" jdbcType="VARCHAR" />
    <result column="develop_land_area_tax" property="developLandAreaTax" jdbcType="DECIMAL" />
    <result column="develop_build_area_tax" property="developBuildAreaTax" jdbcType="DECIMAL" />
    <result column="develop_year_number_tax" property="developYearNumberTax" jdbcType="DECIMAL" />
    <result column="mc_id" property="mcId" jdbcType="INTEGER" />
    <result column="land_purchase_price" property="landPurchasePrice" jdbcType="DECIMAL" />
    <result column="land_purchase_price_explain" property="landPurchasePriceExplain" jdbcType="VARCHAR" />
    <result column="land_get_relevant" property="landGetRelevant" jdbcType="DECIMAL" />
    <result column="land_get_relevant_explain" property="landGetRelevantExplain" jdbcType="VARCHAR" />
    <result column="reconnaissance_design" property="reconnaissanceDesign" jdbcType="DECIMAL" />
    <result column="construction_installation_engineering_fee" property="constructionInstallationEngineeringFee" jdbcType="DECIMAL" />
    <result column="infrastructure_cost" property="infrastructureCost" jdbcType="DECIMAL" />
    <result column="infrastructure_matching_cost" property="infrastructureMatchingCost" jdbcType="DECIMAL" />
    <result column="infrastructure_matching_cost_explain" property="infrastructureMatchingCostExplain" jdbcType="VARCHAR" />
    <result column="dev_during" property="devDuring" jdbcType="DECIMAL" />
    <result column="other_engineering_cost" property="otherEngineeringCost" jdbcType="DECIMAL" />
    <result column="unforeseen_expenses" property="unforeseenExpenses" jdbcType="DECIMAL" />
    <result column="unforeseen_expenses_explain" property="unforeseenExpensesExplain" jdbcType="VARCHAR" />
    <result column="management_expense" property="managementExpense" jdbcType="DECIMAL" />
    <result column="management_expense_explain" property="managementExpenseExplain" jdbcType="VARCHAR" />
    <result column="sales_fee" property="salesFee" jdbcType="DECIMAL" />
    <result column="sales_fee_explain" property="salesFeeExplain" jdbcType="VARCHAR" />
    <result column="interest_investment_tax" property="interestInvestmentTax" jdbcType="DECIMAL" />
    <result column="interest_investment_tax_explain" property="interestInvestmentTaxExplain" jdbcType="VARCHAR" />
    <result column="sales_tax_and_additional" property="salesTaxAndAdditional" jdbcType="DECIMAL" />
    <result column="sales_tax_and_additional_explain" property="salesTaxAndAdditionalExplain" jdbcType="VARCHAR" />
    <result column="investment_profit_tax" property="investmentProfitTax" jdbcType="DECIMAL" />
    <result column="investment_profit_tax_explain" property="investmentProfitTaxExplain" jdbcType="VARCHAR" />
    <result column="construction_assessment_value2" property="constructionAssessmentValue2" jdbcType="DECIMAL" />
    <result column="creator" property="creator" jdbcType="VARCHAR" />
    <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP" />
    <result column="gmt_created" property="gmtCreated" jdbcType="TIMESTAMP" />
    <result column="pid" property="pid" jdbcType="INTEGER" />
    <result column="additional_cost_land_acquisition" property="additionalCostLandAcquisition" jdbcType="DECIMAL" />
    <result column="infrastructure_cost_explain" property="infrastructureCostExplain" jdbcType="VARCHAR" />
    <result column="dev_during_explain" property="devDuringExplain" jdbcType="VARCHAR" />
    <result column="other_engineering_cost_explain" property="otherEngineeringCostExplain" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, construction_assessment_price_correcting, construction_assessment_value, investment_profit, 
    interest_investment, construction_subtotal, land_get_cost_total, json_content, develop_land_area_tax, 
    develop_build_area_tax, develop_year_number_tax, mc_id, land_purchase_price, land_purchase_price_explain, 
    land_get_relevant, land_get_relevant_explain, reconnaissance_design, construction_installation_engineering_fee, 
    infrastructure_cost, infrastructure_matching_cost, infrastructure_matching_cost_explain, 
    dev_during, other_engineering_cost, unforeseen_expenses, unforeseen_expenses_explain, 
    management_expense, management_expense_explain, sales_fee, sales_fee_explain, interest_investment_tax, 
    interest_investment_tax_explain, sales_tax_and_additional, sales_tax_and_additional_explain, 
    investment_profit_tax, investment_profit_tax_explain, construction_assessment_value2, 
    creator, gmt_modified, gmt_created, pid, additional_cost_land_acquisition, infrastructure_cost_explain, 
    dev_during_explain, other_engineering_cost_explain
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.copower.pmcc.assess.dal.basis.entity.MdCostConstructionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_md_cost_construction
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tb_md_cost_construction
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_md_cost_construction
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.copower.pmcc.assess.dal.basis.entity.MdCostConstructionExample" >
    delete from tb_md_cost_construction
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.copower.pmcc.assess.dal.basis.entity.MdCostConstruction" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_md_cost_construction (construction_assessment_price_correcting, construction_assessment_value, 
      investment_profit, interest_investment, construction_subtotal, 
      land_get_cost_total, json_content, develop_land_area_tax, 
      develop_build_area_tax, develop_year_number_tax, 
      mc_id, land_purchase_price, land_purchase_price_explain, 
      land_get_relevant, land_get_relevant_explain, 
      reconnaissance_design, construction_installation_engineering_fee, 
      infrastructure_cost, infrastructure_matching_cost, 
      infrastructure_matching_cost_explain, dev_during, 
      other_engineering_cost, unforeseen_expenses, 
      unforeseen_expenses_explain, management_expense, 
      management_expense_explain, sales_fee, sales_fee_explain, 
      interest_investment_tax, interest_investment_tax_explain, 
      sales_tax_and_additional, sales_tax_and_additional_explain, 
      investment_profit_tax, investment_profit_tax_explain, 
      construction_assessment_value2, creator, 
      gmt_modified, gmt_created, pid, 
      additional_cost_land_acquisition, infrastructure_cost_explain, 
      dev_during_explain, other_engineering_cost_explain
      )
    values (#{constructionAssessmentPriceCorrecting,jdbcType=DECIMAL}, #{constructionAssessmentValue,jdbcType=VARCHAR}, 
      #{investmentProfit,jdbcType=VARCHAR}, #{interestInvestment,jdbcType=VARCHAR}, #{constructionSubtotal,jdbcType=VARCHAR}, 
      #{landGetCostTotal,jdbcType=VARCHAR}, #{jsonContent,jdbcType=VARCHAR}, #{developLandAreaTax,jdbcType=DECIMAL}, 
      #{developBuildAreaTax,jdbcType=DECIMAL}, #{developYearNumberTax,jdbcType=DECIMAL}, 
      #{mcId,jdbcType=INTEGER}, #{landPurchasePrice,jdbcType=DECIMAL}, #{landPurchasePriceExplain,jdbcType=VARCHAR}, 
      #{landGetRelevant,jdbcType=DECIMAL}, #{landGetRelevantExplain,jdbcType=VARCHAR}, 
      #{reconnaissanceDesign,jdbcType=DECIMAL}, #{constructionInstallationEngineeringFee,jdbcType=DECIMAL}, 
      #{infrastructureCost,jdbcType=DECIMAL}, #{infrastructureMatchingCost,jdbcType=DECIMAL}, 
      #{infrastructureMatchingCostExplain,jdbcType=VARCHAR}, #{devDuring,jdbcType=DECIMAL}, 
      #{otherEngineeringCost,jdbcType=DECIMAL}, #{unforeseenExpenses,jdbcType=DECIMAL}, 
      #{unforeseenExpensesExplain,jdbcType=VARCHAR}, #{managementExpense,jdbcType=DECIMAL}, 
      #{managementExpenseExplain,jdbcType=VARCHAR}, #{salesFee,jdbcType=DECIMAL}, #{salesFeeExplain,jdbcType=VARCHAR}, 
      #{interestInvestmentTax,jdbcType=DECIMAL}, #{interestInvestmentTaxExplain,jdbcType=VARCHAR}, 
      #{salesTaxAndAdditional,jdbcType=DECIMAL}, #{salesTaxAndAdditionalExplain,jdbcType=VARCHAR}, 
      #{investmentProfitTax,jdbcType=DECIMAL}, #{investmentProfitTaxExplain,jdbcType=VARCHAR}, 
      #{constructionAssessmentValue2,jdbcType=DECIMAL}, #{creator,jdbcType=VARCHAR}, 
      #{gmtModified,jdbcType=TIMESTAMP}, #{gmtCreated,jdbcType=TIMESTAMP}, #{pid,jdbcType=INTEGER}, 
      #{additionalCostLandAcquisition,jdbcType=DECIMAL}, #{infrastructureCostExplain,jdbcType=VARCHAR}, 
      #{devDuringExplain,jdbcType=VARCHAR}, #{otherEngineeringCostExplain,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.copower.pmcc.assess.dal.basis.entity.MdCostConstruction" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_md_cost_construction
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="constructionAssessmentPriceCorrecting != null" >
        construction_assessment_price_correcting,
      </if>
      <if test="constructionAssessmentValue != null" >
        construction_assessment_value,
      </if>
      <if test="investmentProfit != null" >
        investment_profit,
      </if>
      <if test="interestInvestment != null" >
        interest_investment,
      </if>
      <if test="constructionSubtotal != null" >
        construction_subtotal,
      </if>
      <if test="landGetCostTotal != null" >
        land_get_cost_total,
      </if>
      <if test="jsonContent != null" >
        json_content,
      </if>
      <if test="developLandAreaTax != null" >
        develop_land_area_tax,
      </if>
      <if test="developBuildAreaTax != null" >
        develop_build_area_tax,
      </if>
      <if test="developYearNumberTax != null" >
        develop_year_number_tax,
      </if>
      <if test="mcId != null" >
        mc_id,
      </if>
      <if test="landPurchasePrice != null" >
        land_purchase_price,
      </if>
      <if test="landPurchasePriceExplain != null" >
        land_purchase_price_explain,
      </if>
      <if test="landGetRelevant != null" >
        land_get_relevant,
      </if>
      <if test="landGetRelevantExplain != null" >
        land_get_relevant_explain,
      </if>
      <if test="reconnaissanceDesign != null" >
        reconnaissance_design,
      </if>
      <if test="constructionInstallationEngineeringFee != null" >
        construction_installation_engineering_fee,
      </if>
      <if test="infrastructureCost != null" >
        infrastructure_cost,
      </if>
      <if test="infrastructureMatchingCost != null" >
        infrastructure_matching_cost,
      </if>
      <if test="infrastructureMatchingCostExplain != null" >
        infrastructure_matching_cost_explain,
      </if>
      <if test="devDuring != null" >
        dev_during,
      </if>
      <if test="otherEngineeringCost != null" >
        other_engineering_cost,
      </if>
      <if test="unforeseenExpenses != null" >
        unforeseen_expenses,
      </if>
      <if test="unforeseenExpensesExplain != null" >
        unforeseen_expenses_explain,
      </if>
      <if test="managementExpense != null" >
        management_expense,
      </if>
      <if test="managementExpenseExplain != null" >
        management_expense_explain,
      </if>
      <if test="salesFee != null" >
        sales_fee,
      </if>
      <if test="salesFeeExplain != null" >
        sales_fee_explain,
      </if>
      <if test="interestInvestmentTax != null" >
        interest_investment_tax,
      </if>
      <if test="interestInvestmentTaxExplain != null" >
        interest_investment_tax_explain,
      </if>
      <if test="salesTaxAndAdditional != null" >
        sales_tax_and_additional,
      </if>
      <if test="salesTaxAndAdditionalExplain != null" >
        sales_tax_and_additional_explain,
      </if>
      <if test="investmentProfitTax != null" >
        investment_profit_tax,
      </if>
      <if test="investmentProfitTaxExplain != null" >
        investment_profit_tax_explain,
      </if>
      <if test="constructionAssessmentValue2 != null" >
        construction_assessment_value2,
      </if>
      <if test="creator != null" >
        creator,
      </if>
      <if test="gmtModified != null" >
        gmt_modified,
      </if>
      <if test="gmtCreated != null" >
        gmt_created,
      </if>
      <if test="pid != null" >
        pid,
      </if>
      <if test="additionalCostLandAcquisition != null" >
        additional_cost_land_acquisition,
      </if>
      <if test="infrastructureCostExplain != null" >
        infrastructure_cost_explain,
      </if>
      <if test="devDuringExplain != null" >
        dev_during_explain,
      </if>
      <if test="otherEngineeringCostExplain != null" >
        other_engineering_cost_explain,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="constructionAssessmentPriceCorrecting != null" >
        #{constructionAssessmentPriceCorrecting,jdbcType=DECIMAL},
      </if>
      <if test="constructionAssessmentValue != null" >
        #{constructionAssessmentValue,jdbcType=VARCHAR},
      </if>
      <if test="investmentProfit != null" >
        #{investmentProfit,jdbcType=VARCHAR},
      </if>
      <if test="interestInvestment != null" >
        #{interestInvestment,jdbcType=VARCHAR},
      </if>
      <if test="constructionSubtotal != null" >
        #{constructionSubtotal,jdbcType=VARCHAR},
      </if>
      <if test="landGetCostTotal != null" >
        #{landGetCostTotal,jdbcType=VARCHAR},
      </if>
      <if test="jsonContent != null" >
        #{jsonContent,jdbcType=VARCHAR},
      </if>
      <if test="developLandAreaTax != null" >
        #{developLandAreaTax,jdbcType=DECIMAL},
      </if>
      <if test="developBuildAreaTax != null" >
        #{developBuildAreaTax,jdbcType=DECIMAL},
      </if>
      <if test="developYearNumberTax != null" >
        #{developYearNumberTax,jdbcType=DECIMAL},
      </if>
      <if test="mcId != null" >
        #{mcId,jdbcType=INTEGER},
      </if>
      <if test="landPurchasePrice != null" >
        #{landPurchasePrice,jdbcType=DECIMAL},
      </if>
      <if test="landPurchasePriceExplain != null" >
        #{landPurchasePriceExplain,jdbcType=VARCHAR},
      </if>
      <if test="landGetRelevant != null" >
        #{landGetRelevant,jdbcType=DECIMAL},
      </if>
      <if test="landGetRelevantExplain != null" >
        #{landGetRelevantExplain,jdbcType=VARCHAR},
      </if>
      <if test="reconnaissanceDesign != null" >
        #{reconnaissanceDesign,jdbcType=DECIMAL},
      </if>
      <if test="constructionInstallationEngineeringFee != null" >
        #{constructionInstallationEngineeringFee,jdbcType=DECIMAL},
      </if>
      <if test="infrastructureCost != null" >
        #{infrastructureCost,jdbcType=DECIMAL},
      </if>
      <if test="infrastructureMatchingCost != null" >
        #{infrastructureMatchingCost,jdbcType=DECIMAL},
      </if>
      <if test="infrastructureMatchingCostExplain != null" >
        #{infrastructureMatchingCostExplain,jdbcType=VARCHAR},
      </if>
      <if test="devDuring != null" >
        #{devDuring,jdbcType=DECIMAL},
      </if>
      <if test="otherEngineeringCost != null" >
        #{otherEngineeringCost,jdbcType=DECIMAL},
      </if>
      <if test="unforeseenExpenses != null" >
        #{unforeseenExpenses,jdbcType=DECIMAL},
      </if>
      <if test="unforeseenExpensesExplain != null" >
        #{unforeseenExpensesExplain,jdbcType=VARCHAR},
      </if>
      <if test="managementExpense != null" >
        #{managementExpense,jdbcType=DECIMAL},
      </if>
      <if test="managementExpenseExplain != null" >
        #{managementExpenseExplain,jdbcType=VARCHAR},
      </if>
      <if test="salesFee != null" >
        #{salesFee,jdbcType=DECIMAL},
      </if>
      <if test="salesFeeExplain != null" >
        #{salesFeeExplain,jdbcType=VARCHAR},
      </if>
      <if test="interestInvestmentTax != null" >
        #{interestInvestmentTax,jdbcType=DECIMAL},
      </if>
      <if test="interestInvestmentTaxExplain != null" >
        #{interestInvestmentTaxExplain,jdbcType=VARCHAR},
      </if>
      <if test="salesTaxAndAdditional != null" >
        #{salesTaxAndAdditional,jdbcType=DECIMAL},
      </if>
      <if test="salesTaxAndAdditionalExplain != null" >
        #{salesTaxAndAdditionalExplain,jdbcType=VARCHAR},
      </if>
      <if test="investmentProfitTax != null" >
        #{investmentProfitTax,jdbcType=DECIMAL},
      </if>
      <if test="investmentProfitTaxExplain != null" >
        #{investmentProfitTaxExplain,jdbcType=VARCHAR},
      </if>
      <if test="constructionAssessmentValue2 != null" >
        #{constructionAssessmentValue2,jdbcType=DECIMAL},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="gmtModified != null" >
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtCreated != null" >
        #{gmtCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="pid != null" >
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="additionalCostLandAcquisition != null" >
        #{additionalCostLandAcquisition,jdbcType=DECIMAL},
      </if>
      <if test="infrastructureCostExplain != null" >
        #{infrastructureCostExplain,jdbcType=VARCHAR},
      </if>
      <if test="devDuringExplain != null" >
        #{devDuringExplain,jdbcType=VARCHAR},
      </if>
      <if test="otherEngineeringCostExplain != null" >
        #{otherEngineeringCostExplain,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.copower.pmcc.assess.dal.basis.entity.MdCostConstructionExample" resultType="java.lang.Integer" >
    select count(*) from tb_md_cost_construction
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_md_cost_construction
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.constructionAssessmentPriceCorrecting != null" >
        construction_assessment_price_correcting = #{record.constructionAssessmentPriceCorrecting,jdbcType=DECIMAL},
      </if>
      <if test="record.constructionAssessmentValue != null" >
        construction_assessment_value = #{record.constructionAssessmentValue,jdbcType=VARCHAR},
      </if>
      <if test="record.investmentProfit != null" >
        investment_profit = #{record.investmentProfit,jdbcType=VARCHAR},
      </if>
      <if test="record.interestInvestment != null" >
        interest_investment = #{record.interestInvestment,jdbcType=VARCHAR},
      </if>
      <if test="record.constructionSubtotal != null" >
        construction_subtotal = #{record.constructionSubtotal,jdbcType=VARCHAR},
      </if>
      <if test="record.landGetCostTotal != null" >
        land_get_cost_total = #{record.landGetCostTotal,jdbcType=VARCHAR},
      </if>
      <if test="record.jsonContent != null" >
        json_content = #{record.jsonContent,jdbcType=VARCHAR},
      </if>
      <if test="record.developLandAreaTax != null" >
        develop_land_area_tax = #{record.developLandAreaTax,jdbcType=DECIMAL},
      </if>
      <if test="record.developBuildAreaTax != null" >
        develop_build_area_tax = #{record.developBuildAreaTax,jdbcType=DECIMAL},
      </if>
      <if test="record.developYearNumberTax != null" >
        develop_year_number_tax = #{record.developYearNumberTax,jdbcType=DECIMAL},
      </if>
      <if test="record.mcId != null" >
        mc_id = #{record.mcId,jdbcType=INTEGER},
      </if>
      <if test="record.landPurchasePrice != null" >
        land_purchase_price = #{record.landPurchasePrice,jdbcType=DECIMAL},
      </if>
      <if test="record.landPurchasePriceExplain != null" >
        land_purchase_price_explain = #{record.landPurchasePriceExplain,jdbcType=VARCHAR},
      </if>
      <if test="record.landGetRelevant != null" >
        land_get_relevant = #{record.landGetRelevant,jdbcType=DECIMAL},
      </if>
      <if test="record.landGetRelevantExplain != null" >
        land_get_relevant_explain = #{record.landGetRelevantExplain,jdbcType=VARCHAR},
      </if>
      <if test="record.reconnaissanceDesign != null" >
        reconnaissance_design = #{record.reconnaissanceDesign,jdbcType=DECIMAL},
      </if>
      <if test="record.constructionInstallationEngineeringFee != null" >
        construction_installation_engineering_fee = #{record.constructionInstallationEngineeringFee,jdbcType=DECIMAL},
      </if>
      <if test="record.infrastructureCost != null" >
        infrastructure_cost = #{record.infrastructureCost,jdbcType=DECIMAL},
      </if>
      <if test="record.infrastructureMatchingCost != null" >
        infrastructure_matching_cost = #{record.infrastructureMatchingCost,jdbcType=DECIMAL},
      </if>
      <if test="record.infrastructureMatchingCostExplain != null" >
        infrastructure_matching_cost_explain = #{record.infrastructureMatchingCostExplain,jdbcType=VARCHAR},
      </if>
      <if test="record.devDuring != null" >
        dev_during = #{record.devDuring,jdbcType=DECIMAL},
      </if>
      <if test="record.otherEngineeringCost != null" >
        other_engineering_cost = #{record.otherEngineeringCost,jdbcType=DECIMAL},
      </if>
      <if test="record.unforeseenExpenses != null" >
        unforeseen_expenses = #{record.unforeseenExpenses,jdbcType=DECIMAL},
      </if>
      <if test="record.unforeseenExpensesExplain != null" >
        unforeseen_expenses_explain = #{record.unforeseenExpensesExplain,jdbcType=VARCHAR},
      </if>
      <if test="record.managementExpense != null" >
        management_expense = #{record.managementExpense,jdbcType=DECIMAL},
      </if>
      <if test="record.managementExpenseExplain != null" >
        management_expense_explain = #{record.managementExpenseExplain,jdbcType=VARCHAR},
      </if>
      <if test="record.salesFee != null" >
        sales_fee = #{record.salesFee,jdbcType=DECIMAL},
      </if>
      <if test="record.salesFeeExplain != null" >
        sales_fee_explain = #{record.salesFeeExplain,jdbcType=VARCHAR},
      </if>
      <if test="record.interestInvestmentTax != null" >
        interest_investment_tax = #{record.interestInvestmentTax,jdbcType=DECIMAL},
      </if>
      <if test="record.interestInvestmentTaxExplain != null" >
        interest_investment_tax_explain = #{record.interestInvestmentTaxExplain,jdbcType=VARCHAR},
      </if>
      <if test="record.salesTaxAndAdditional != null" >
        sales_tax_and_additional = #{record.salesTaxAndAdditional,jdbcType=DECIMAL},
      </if>
      <if test="record.salesTaxAndAdditionalExplain != null" >
        sales_tax_and_additional_explain = #{record.salesTaxAndAdditionalExplain,jdbcType=VARCHAR},
      </if>
      <if test="record.investmentProfitTax != null" >
        investment_profit_tax = #{record.investmentProfitTax,jdbcType=DECIMAL},
      </if>
      <if test="record.investmentProfitTaxExplain != null" >
        investment_profit_tax_explain = #{record.investmentProfitTaxExplain,jdbcType=VARCHAR},
      </if>
      <if test="record.constructionAssessmentValue2 != null" >
        construction_assessment_value2 = #{record.constructionAssessmentValue2,jdbcType=DECIMAL},
      </if>
      <if test="record.creator != null" >
        creator = #{record.creator,jdbcType=VARCHAR},
      </if>
      <if test="record.gmtModified != null" >
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtCreated != null" >
        gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="record.pid != null" >
        pid = #{record.pid,jdbcType=INTEGER},
      </if>
      <if test="record.additionalCostLandAcquisition != null" >
        additional_cost_land_acquisition = #{record.additionalCostLandAcquisition,jdbcType=DECIMAL},
      </if>
      <if test="record.infrastructureCostExplain != null" >
        infrastructure_cost_explain = #{record.infrastructureCostExplain,jdbcType=VARCHAR},
      </if>
      <if test="record.devDuringExplain != null" >
        dev_during_explain = #{record.devDuringExplain,jdbcType=VARCHAR},
      </if>
      <if test="record.otherEngineeringCostExplain != null" >
        other_engineering_cost_explain = #{record.otherEngineeringCostExplain,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_md_cost_construction
    set id = #{record.id,jdbcType=INTEGER},
      construction_assessment_price_correcting = #{record.constructionAssessmentPriceCorrecting,jdbcType=DECIMAL},
      construction_assessment_value = #{record.constructionAssessmentValue,jdbcType=VARCHAR},
      investment_profit = #{record.investmentProfit,jdbcType=VARCHAR},
      interest_investment = #{record.interestInvestment,jdbcType=VARCHAR},
      construction_subtotal = #{record.constructionSubtotal,jdbcType=VARCHAR},
      land_get_cost_total = #{record.landGetCostTotal,jdbcType=VARCHAR},
      json_content = #{record.jsonContent,jdbcType=VARCHAR},
      develop_land_area_tax = #{record.developLandAreaTax,jdbcType=DECIMAL},
      develop_build_area_tax = #{record.developBuildAreaTax,jdbcType=DECIMAL},
      develop_year_number_tax = #{record.developYearNumberTax,jdbcType=DECIMAL},
      mc_id = #{record.mcId,jdbcType=INTEGER},
      land_purchase_price = #{record.landPurchasePrice,jdbcType=DECIMAL},
      land_purchase_price_explain = #{record.landPurchasePriceExplain,jdbcType=VARCHAR},
      land_get_relevant = #{record.landGetRelevant,jdbcType=DECIMAL},
      land_get_relevant_explain = #{record.landGetRelevantExplain,jdbcType=VARCHAR},
      reconnaissance_design = #{record.reconnaissanceDesign,jdbcType=DECIMAL},
      construction_installation_engineering_fee = #{record.constructionInstallationEngineeringFee,jdbcType=DECIMAL},
      infrastructure_cost = #{record.infrastructureCost,jdbcType=DECIMAL},
      infrastructure_matching_cost = #{record.infrastructureMatchingCost,jdbcType=DECIMAL},
      infrastructure_matching_cost_explain = #{record.infrastructureMatchingCostExplain,jdbcType=VARCHAR},
      dev_during = #{record.devDuring,jdbcType=DECIMAL},
      other_engineering_cost = #{record.otherEngineeringCost,jdbcType=DECIMAL},
      unforeseen_expenses = #{record.unforeseenExpenses,jdbcType=DECIMAL},
      unforeseen_expenses_explain = #{record.unforeseenExpensesExplain,jdbcType=VARCHAR},
      management_expense = #{record.managementExpense,jdbcType=DECIMAL},
      management_expense_explain = #{record.managementExpenseExplain,jdbcType=VARCHAR},
      sales_fee = #{record.salesFee,jdbcType=DECIMAL},
      sales_fee_explain = #{record.salesFeeExplain,jdbcType=VARCHAR},
      interest_investment_tax = #{record.interestInvestmentTax,jdbcType=DECIMAL},
      interest_investment_tax_explain = #{record.interestInvestmentTaxExplain,jdbcType=VARCHAR},
      sales_tax_and_additional = #{record.salesTaxAndAdditional,jdbcType=DECIMAL},
      sales_tax_and_additional_explain = #{record.salesTaxAndAdditionalExplain,jdbcType=VARCHAR},
      investment_profit_tax = #{record.investmentProfitTax,jdbcType=DECIMAL},
      investment_profit_tax_explain = #{record.investmentProfitTaxExplain,jdbcType=VARCHAR},
      construction_assessment_value2 = #{record.constructionAssessmentValue2,jdbcType=DECIMAL},
      creator = #{record.creator,jdbcType=VARCHAR},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
      pid = #{record.pid,jdbcType=INTEGER},
      additional_cost_land_acquisition = #{record.additionalCostLandAcquisition,jdbcType=DECIMAL},
      infrastructure_cost_explain = #{record.infrastructureCostExplain,jdbcType=VARCHAR},
      dev_during_explain = #{record.devDuringExplain,jdbcType=VARCHAR},
      other_engineering_cost_explain = #{record.otherEngineeringCostExplain,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.copower.pmcc.assess.dal.basis.entity.MdCostConstruction" >
    update tb_md_cost_construction
    <set >
      <if test="constructionAssessmentPriceCorrecting != null" >
        construction_assessment_price_correcting = #{constructionAssessmentPriceCorrecting,jdbcType=DECIMAL},
      </if>
      <if test="constructionAssessmentValue != null" >
        construction_assessment_value = #{constructionAssessmentValue,jdbcType=VARCHAR},
      </if>
      <if test="investmentProfit != null" >
        investment_profit = #{investmentProfit,jdbcType=VARCHAR},
      </if>
      <if test="interestInvestment != null" >
        interest_investment = #{interestInvestment,jdbcType=VARCHAR},
      </if>
      <if test="constructionSubtotal != null" >
        construction_subtotal = #{constructionSubtotal,jdbcType=VARCHAR},
      </if>
      <if test="landGetCostTotal != null" >
        land_get_cost_total = #{landGetCostTotal,jdbcType=VARCHAR},
      </if>
      <if test="jsonContent != null" >
        json_content = #{jsonContent,jdbcType=VARCHAR},
      </if>
      <if test="developLandAreaTax != null" >
        develop_land_area_tax = #{developLandAreaTax,jdbcType=DECIMAL},
      </if>
      <if test="developBuildAreaTax != null" >
        develop_build_area_tax = #{developBuildAreaTax,jdbcType=DECIMAL},
      </if>
      <if test="developYearNumberTax != null" >
        develop_year_number_tax = #{developYearNumberTax,jdbcType=DECIMAL},
      </if>
      <if test="mcId != null" >
        mc_id = #{mcId,jdbcType=INTEGER},
      </if>
      <if test="landPurchasePrice != null" >
        land_purchase_price = #{landPurchasePrice,jdbcType=DECIMAL},
      </if>
      <if test="landPurchasePriceExplain != null" >
        land_purchase_price_explain = #{landPurchasePriceExplain,jdbcType=VARCHAR},
      </if>
      <if test="landGetRelevant != null" >
        land_get_relevant = #{landGetRelevant,jdbcType=DECIMAL},
      </if>
      <if test="landGetRelevantExplain != null" >
        land_get_relevant_explain = #{landGetRelevantExplain,jdbcType=VARCHAR},
      </if>
      <if test="reconnaissanceDesign != null" >
        reconnaissance_design = #{reconnaissanceDesign,jdbcType=DECIMAL},
      </if>
      <if test="constructionInstallationEngineeringFee != null" >
        construction_installation_engineering_fee = #{constructionInstallationEngineeringFee,jdbcType=DECIMAL},
      </if>
      <if test="infrastructureCost != null" >
        infrastructure_cost = #{infrastructureCost,jdbcType=DECIMAL},
      </if>
      <if test="infrastructureMatchingCost != null" >
        infrastructure_matching_cost = #{infrastructureMatchingCost,jdbcType=DECIMAL},
      </if>
      <if test="infrastructureMatchingCostExplain != null" >
        infrastructure_matching_cost_explain = #{infrastructureMatchingCostExplain,jdbcType=VARCHAR},
      </if>
      <if test="devDuring != null" >
        dev_during = #{devDuring,jdbcType=DECIMAL},
      </if>
      <if test="otherEngineeringCost != null" >
        other_engineering_cost = #{otherEngineeringCost,jdbcType=DECIMAL},
      </if>
      <if test="unforeseenExpenses != null" >
        unforeseen_expenses = #{unforeseenExpenses,jdbcType=DECIMAL},
      </if>
      <if test="unforeseenExpensesExplain != null" >
        unforeseen_expenses_explain = #{unforeseenExpensesExplain,jdbcType=VARCHAR},
      </if>
      <if test="managementExpense != null" >
        management_expense = #{managementExpense,jdbcType=DECIMAL},
      </if>
      <if test="managementExpenseExplain != null" >
        management_expense_explain = #{managementExpenseExplain,jdbcType=VARCHAR},
      </if>
      <if test="salesFee != null" >
        sales_fee = #{salesFee,jdbcType=DECIMAL},
      </if>
      <if test="salesFeeExplain != null" >
        sales_fee_explain = #{salesFeeExplain,jdbcType=VARCHAR},
      </if>
      <if test="interestInvestmentTax != null" >
        interest_investment_tax = #{interestInvestmentTax,jdbcType=DECIMAL},
      </if>
      <if test="interestInvestmentTaxExplain != null" >
        interest_investment_tax_explain = #{interestInvestmentTaxExplain,jdbcType=VARCHAR},
      </if>
      <if test="salesTaxAndAdditional != null" >
        sales_tax_and_additional = #{salesTaxAndAdditional,jdbcType=DECIMAL},
      </if>
      <if test="salesTaxAndAdditionalExplain != null" >
        sales_tax_and_additional_explain = #{salesTaxAndAdditionalExplain,jdbcType=VARCHAR},
      </if>
      <if test="investmentProfitTax != null" >
        investment_profit_tax = #{investmentProfitTax,jdbcType=DECIMAL},
      </if>
      <if test="investmentProfitTaxExplain != null" >
        investment_profit_tax_explain = #{investmentProfitTaxExplain,jdbcType=VARCHAR},
      </if>
      <if test="constructionAssessmentValue2 != null" >
        construction_assessment_value2 = #{constructionAssessmentValue2,jdbcType=DECIMAL},
      </if>
      <if test="creator != null" >
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="gmtModified != null" >
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtCreated != null" >
        gmt_created = #{gmtCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="pid != null" >
        pid = #{pid,jdbcType=INTEGER},
      </if>
      <if test="additionalCostLandAcquisition != null" >
        additional_cost_land_acquisition = #{additionalCostLandAcquisition,jdbcType=DECIMAL},
      </if>
      <if test="infrastructureCostExplain != null" >
        infrastructure_cost_explain = #{infrastructureCostExplain,jdbcType=VARCHAR},
      </if>
      <if test="devDuringExplain != null" >
        dev_during_explain = #{devDuringExplain,jdbcType=VARCHAR},
      </if>
      <if test="otherEngineeringCostExplain != null" >
        other_engineering_cost_explain = #{otherEngineeringCostExplain,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.copower.pmcc.assess.dal.basis.entity.MdCostConstruction" >
    update tb_md_cost_construction
    set construction_assessment_price_correcting = #{constructionAssessmentPriceCorrecting,jdbcType=DECIMAL},
      construction_assessment_value = #{constructionAssessmentValue,jdbcType=VARCHAR},
      investment_profit = #{investmentProfit,jdbcType=VARCHAR},
      interest_investment = #{interestInvestment,jdbcType=VARCHAR},
      construction_subtotal = #{constructionSubtotal,jdbcType=VARCHAR},
      land_get_cost_total = #{landGetCostTotal,jdbcType=VARCHAR},
      json_content = #{jsonContent,jdbcType=VARCHAR},
      develop_land_area_tax = #{developLandAreaTax,jdbcType=DECIMAL},
      develop_build_area_tax = #{developBuildAreaTax,jdbcType=DECIMAL},
      develop_year_number_tax = #{developYearNumberTax,jdbcType=DECIMAL},
      mc_id = #{mcId,jdbcType=INTEGER},
      land_purchase_price = #{landPurchasePrice,jdbcType=DECIMAL},
      land_purchase_price_explain = #{landPurchasePriceExplain,jdbcType=VARCHAR},
      land_get_relevant = #{landGetRelevant,jdbcType=DECIMAL},
      land_get_relevant_explain = #{landGetRelevantExplain,jdbcType=VARCHAR},
      reconnaissance_design = #{reconnaissanceDesign,jdbcType=DECIMAL},
      construction_installation_engineering_fee = #{constructionInstallationEngineeringFee,jdbcType=DECIMAL},
      infrastructure_cost = #{infrastructureCost,jdbcType=DECIMAL},
      infrastructure_matching_cost = #{infrastructureMatchingCost,jdbcType=DECIMAL},
      infrastructure_matching_cost_explain = #{infrastructureMatchingCostExplain,jdbcType=VARCHAR},
      dev_during = #{devDuring,jdbcType=DECIMAL},
      other_engineering_cost = #{otherEngineeringCost,jdbcType=DECIMAL},
      unforeseen_expenses = #{unforeseenExpenses,jdbcType=DECIMAL},
      unforeseen_expenses_explain = #{unforeseenExpensesExplain,jdbcType=VARCHAR},
      management_expense = #{managementExpense,jdbcType=DECIMAL},
      management_expense_explain = #{managementExpenseExplain,jdbcType=VARCHAR},
      sales_fee = #{salesFee,jdbcType=DECIMAL},
      sales_fee_explain = #{salesFeeExplain,jdbcType=VARCHAR},
      interest_investment_tax = #{interestInvestmentTax,jdbcType=DECIMAL},
      interest_investment_tax_explain = #{interestInvestmentTaxExplain,jdbcType=VARCHAR},
      sales_tax_and_additional = #{salesTaxAndAdditional,jdbcType=DECIMAL},
      sales_tax_and_additional_explain = #{salesTaxAndAdditionalExplain,jdbcType=VARCHAR},
      investment_profit_tax = #{investmentProfitTax,jdbcType=DECIMAL},
      investment_profit_tax_explain = #{investmentProfitTaxExplain,jdbcType=VARCHAR},
      construction_assessment_value2 = #{constructionAssessmentValue2,jdbcType=DECIMAL},
      creator = #{creator,jdbcType=VARCHAR},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      gmt_created = #{gmtCreated,jdbcType=TIMESTAMP},
      pid = #{pid,jdbcType=INTEGER},
      additional_cost_land_acquisition = #{additionalCostLandAcquisition,jdbcType=DECIMAL},
      infrastructure_cost_explain = #{infrastructureCostExplain,jdbcType=VARCHAR},
      dev_during_explain = #{devDuringExplain,jdbcType=VARCHAR},
      other_engineering_cost_explain = #{otherEngineeringCostExplain,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>