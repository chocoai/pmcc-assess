<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.copower.pmcc.assess.dal.basis.mapper.MdEconomicIndicatorsItemMapper">
  <resultMap id="BaseResultMap" type="com.copower.pmcc.assess.dal.basis.entity.MdEconomicIndicatorsItem">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="pid" jdbcType="INTEGER" property="pid" />
    <result column="economic_id" jdbcType="INTEGER" property="economicId" />
    <result column="plan_details_id" jdbcType="INTEGER" property="planDetailsId" />
    <result column="data_key" jdbcType="VARCHAR" property="dataKey" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="planned_building_area" jdbcType="DECIMAL" property="plannedBuildingArea" />
    <result column="saleable_area" jdbcType="DECIMAL" property="saleableArea" />
    <result column="assess_area" jdbcType="DECIMAL" property="assessArea" />
    <result column="number" jdbcType="INTEGER" property="number" />
    <result column="mc_id" jdbcType="INTEGER" property="mcId" />
    <result column="unit_price" jdbcType="DECIMAL" property="unitPrice" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="gmt_created" jdbcType="TIMESTAMP" property="gmtCreated" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, pid, economic_id, plan_details_id, data_key, name, planned_building_area, saleable_area, 
    assess_area, number, mc_id, unit_price, remark, creator, gmt_created, gmt_modified
  </sql>
  <select id="selectByExample" parameterType="com.copower.pmcc.assess.dal.basis.entity.MdEconomicIndicatorsItemExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_md_economic_indicators_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_md_economic_indicators_item
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_md_economic_indicators_item
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.copower.pmcc.assess.dal.basis.entity.MdEconomicIndicatorsItemExample">
    delete from tb_md_economic_indicators_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.copower.pmcc.assess.dal.basis.entity.MdEconomicIndicatorsItem">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_md_economic_indicators_item (pid, economic_id, plan_details_id, 
      data_key, name, planned_building_area, 
      saleable_area, assess_area, number, 
      mc_id, unit_price, remark, 
      creator, gmt_created, gmt_modified
      )
    values (#{pid,jdbcType=INTEGER}, #{economicId,jdbcType=INTEGER}, #{planDetailsId,jdbcType=INTEGER}, 
      #{dataKey,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{plannedBuildingArea,jdbcType=DECIMAL}, 
      #{saleableArea,jdbcType=DECIMAL}, #{assessArea,jdbcType=DECIMAL}, #{number,jdbcType=INTEGER}, 
      #{mcId,jdbcType=INTEGER}, #{unitPrice,jdbcType=DECIMAL}, #{remark,jdbcType=VARCHAR}, 
      #{creator,jdbcType=VARCHAR}, #{gmtCreated,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="map">
    <selectKey keyProperty="record.id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_md_economic_indicators_item
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.pid != null">
            pid,
          </if>
          <if test="record.economicId != null">
            economic_id,
          </if>
          <if test="record.planDetailsId != null">
            plan_details_id,
          </if>
          <if test="record.dataKey != null">
            data_key,
          </if>
          <if test="record.name != null">
            name,
          </if>
          <if test="record.plannedBuildingArea != null">
            planned_building_area,
          </if>
          <if test="record.saleableArea != null">
            saleable_area,
          </if>
          <if test="record.assessArea != null">
            assess_area,
          </if>
          <if test="record.number != null">
            number,
          </if>
          <if test="record.mcId != null">
            mc_id,
          </if>
          <if test="record.unitPrice != null">
            unit_price,
          </if>
          <if test="record.remark != null">
            remark,
          </if>
          <if test="record.creator != null">
            creator,
          </if>
          <if test="record.gmtCreated != null">
            gmt_created,
          </if>
          <if test="record.gmtModified != null">
            gmt_modified,
          </if>
        </trim>
        <trim prefix="(" suffix=")" suffixOverrides="," />
      </otherwise>
    </choose>
    values
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.pid != null">
            #{record.pid,jdbcType=INTEGER},
          </if>
          <if test="record.economicId != null">
            #{record.economicId,jdbcType=INTEGER},
          </if>
          <if test="record.planDetailsId != null">
            #{record.planDetailsId,jdbcType=INTEGER},
          </if>
          <if test="record.dataKey != null">
            #{record.dataKey,jdbcType=VARCHAR},
          </if>
          <if test="record.name != null">
            #{record.name,jdbcType=VARCHAR},
          </if>
          <if test="record.plannedBuildingArea != null">
            #{record.plannedBuildingArea,jdbcType=DECIMAL},
          </if>
          <if test="record.saleableArea != null">
            #{record.saleableArea,jdbcType=DECIMAL},
          </if>
          <if test="record.assessArea != null">
            #{record.assessArea,jdbcType=DECIMAL},
          </if>
          <if test="record.number != null">
            #{record.number,jdbcType=INTEGER},
          </if>
          <if test="record.mcId != null">
            #{record.mcId,jdbcType=INTEGER},
          </if>
          <if test="record.unitPrice != null">
            #{record.unitPrice,jdbcType=DECIMAL},
          </if>
          <if test="record.remark != null">
            #{record.remark,jdbcType=VARCHAR},
          </if>
          <if test="record.creator != null">
            #{record.creator,jdbcType=VARCHAR},
          </if>
          <if test="record.gmtCreated != null">
            #{record.gmtCreated,jdbcType=TIMESTAMP},
          </if>
          <if test="record.gmtModified != null">
            #{record.gmtModified,jdbcType=TIMESTAMP},
          </if>
        </trim>
      </otherwise>
    </choose>
  </insert>
  <select id="countByExample" parameterType="com.copower.pmcc.assess.dal.basis.entity.MdEconomicIndicatorsItemExample" resultType="java.lang.Long">
    select count(*) from tb_md_economic_indicators_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_md_economic_indicators_item
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.id != null">
            id = #{record.id,jdbcType=INTEGER},
          </if>
          <if test="record.pid != null">
            pid = #{record.pid,jdbcType=INTEGER},
          </if>
          <if test="record.economicId != null">
            economic_id = #{record.economicId,jdbcType=INTEGER},
          </if>
          <if test="record.planDetailsId != null">
            plan_details_id = #{record.planDetailsId,jdbcType=INTEGER},
          </if>
          <if test="record.dataKey != null">
            data_key = #{record.dataKey,jdbcType=VARCHAR},
          </if>
          <if test="record.name != null">
            name = #{record.name,jdbcType=VARCHAR},
          </if>
          <if test="record.plannedBuildingArea != null">
            planned_building_area = #{record.plannedBuildingArea,jdbcType=DECIMAL},
          </if>
          <if test="record.saleableArea != null">
            saleable_area = #{record.saleableArea,jdbcType=DECIMAL},
          </if>
          <if test="record.assessArea != null">
            assess_area = #{record.assessArea,jdbcType=DECIMAL},
          </if>
          <if test="record.number != null">
            number = #{record.number,jdbcType=INTEGER},
          </if>
          <if test="record.mcId != null">
            mc_id = #{record.mcId,jdbcType=INTEGER},
          </if>
          <if test="record.unitPrice != null">
            unit_price = #{record.unitPrice,jdbcType=DECIMAL},
          </if>
          <if test="record.remark != null">
            remark = #{record.remark,jdbcType=VARCHAR},
          </if>
          <if test="record.creator != null">
            creator = #{record.creator,jdbcType=VARCHAR},
          </if>
          <if test="record.gmtCreated != null">
            gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
          </if>
          <if test="record.gmtModified != null">
            gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
          </if>
        </trim>
      </otherwise>
    </choose>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_md_economic_indicators_item
    set id = #{record.id,jdbcType=INTEGER},
      pid = #{record.pid,jdbcType=INTEGER},
      economic_id = #{record.economicId,jdbcType=INTEGER},
      plan_details_id = #{record.planDetailsId,jdbcType=INTEGER},
      data_key = #{record.dataKey,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      planned_building_area = #{record.plannedBuildingArea,jdbcType=DECIMAL},
      saleable_area = #{record.saleableArea,jdbcType=DECIMAL},
      assess_area = #{record.assessArea,jdbcType=DECIMAL},
      number = #{record.number,jdbcType=INTEGER},
      mc_id = #{record.mcId,jdbcType=INTEGER},
      unit_price = #{record.unitPrice,jdbcType=DECIMAL},
      remark = #{record.remark,jdbcType=VARCHAR},
      creator = #{record.creator,jdbcType=VARCHAR},
      gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="map">
    update tb_md_economic_indicators_item
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.pid != null">
            pid = #{record.pid,jdbcType=INTEGER},
          </if>
          <if test="record.economicId != null">
            economic_id = #{record.economicId,jdbcType=INTEGER},
          </if>
          <if test="record.planDetailsId != null">
            plan_details_id = #{record.planDetailsId,jdbcType=INTEGER},
          </if>
          <if test="record.dataKey != null">
            data_key = #{record.dataKey,jdbcType=VARCHAR},
          </if>
          <if test="record.name != null">
            name = #{record.name,jdbcType=VARCHAR},
          </if>
          <if test="record.plannedBuildingArea != null">
            planned_building_area = #{record.plannedBuildingArea,jdbcType=DECIMAL},
          </if>
          <if test="record.saleableArea != null">
            saleable_area = #{record.saleableArea,jdbcType=DECIMAL},
          </if>
          <if test="record.assessArea != null">
            assess_area = #{record.assessArea,jdbcType=DECIMAL},
          </if>
          <if test="record.number != null">
            number = #{record.number,jdbcType=INTEGER},
          </if>
          <if test="record.mcId != null">
            mc_id = #{record.mcId,jdbcType=INTEGER},
          </if>
          <if test="record.unitPrice != null">
            unit_price = #{record.unitPrice,jdbcType=DECIMAL},
          </if>
          <if test="record.remark != null">
            remark = #{record.remark,jdbcType=VARCHAR},
          </if>
          <if test="record.creator != null">
            creator = #{record.creator,jdbcType=VARCHAR},
          </if>
          <if test="record.gmtCreated != null">
            gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
          </if>
          <if test="record.gmtModified != null">
            gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
          </if>
        </trim>
      </otherwise>
    </choose>
    where id = #{record.id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.copower.pmcc.assess.dal.basis.entity.MdEconomicIndicatorsItem">
    update tb_md_economic_indicators_item
    set pid = #{pid,jdbcType=INTEGER},
      economic_id = #{economicId,jdbcType=INTEGER},
      plan_details_id = #{planDetailsId,jdbcType=INTEGER},
      data_key = #{dataKey,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      planned_building_area = #{plannedBuildingArea,jdbcType=DECIMAL},
      saleable_area = #{saleableArea,jdbcType=DECIMAL},
      assess_area = #{assessArea,jdbcType=DECIMAL},
      number = #{number,jdbcType=INTEGER},
      mc_id = #{mcId,jdbcType=INTEGER},
      unit_price = #{unitPrice,jdbcType=DECIMAL},
      remark = #{remark,jdbcType=VARCHAR},
      creator = #{creator,jdbcType=VARCHAR},
      gmt_created = #{gmtCreated,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    insert into tb_md_economic_indicators_item
    (pid, economic_id, plan_details_id, data_key, name, planned_building_area, saleable_area, 
      assess_area, number, mc_id, unit_price, remark, creator, gmt_created, gmt_modified
      )
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.pid,jdbcType=INTEGER}, #{item.economicId,jdbcType=INTEGER}, #{item.planDetailsId,jdbcType=INTEGER}, 
        #{item.dataKey,jdbcType=VARCHAR}, #{item.name,jdbcType=VARCHAR}, #{item.plannedBuildingArea,jdbcType=DECIMAL}, 
        #{item.saleableArea,jdbcType=DECIMAL}, #{item.assessArea,jdbcType=DECIMAL}, #{item.number,jdbcType=INTEGER}, 
        #{item.mcId,jdbcType=INTEGER}, #{item.unitPrice,jdbcType=DECIMAL}, #{item.remark,jdbcType=VARCHAR}, 
        #{item.creator,jdbcType=VARCHAR}, #{item.gmtCreated,jdbcType=TIMESTAMP}, #{item.gmtModified,jdbcType=TIMESTAMP}
        )
    </foreach>
  </insert>
  <insert id="batchInsertSelective" keyColumn="id" keyProperty="list.id" parameterType="map" useGeneratedKeys="true">
    insert into tb_md_economic_indicators_item (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'pid'.toString() == column.value">
          #{item.pid,jdbcType=INTEGER}
        </if>
        <if test="'economic_id'.toString() == column.value">
          #{item.economicId,jdbcType=INTEGER}
        </if>
        <if test="'plan_details_id'.toString() == column.value">
          #{item.planDetailsId,jdbcType=INTEGER}
        </if>
        <if test="'data_key'.toString() == column.value">
          #{item.dataKey,jdbcType=VARCHAR}
        </if>
        <if test="'name'.toString() == column.value">
          #{item.name,jdbcType=VARCHAR}
        </if>
        <if test="'planned_building_area'.toString() == column.value">
          #{item.plannedBuildingArea,jdbcType=DECIMAL}
        </if>
        <if test="'saleable_area'.toString() == column.value">
          #{item.saleableArea,jdbcType=DECIMAL}
        </if>
        <if test="'assess_area'.toString() == column.value">
          #{item.assessArea,jdbcType=DECIMAL}
        </if>
        <if test="'number'.toString() == column.value">
          #{item.number,jdbcType=INTEGER}
        </if>
        <if test="'mc_id'.toString() == column.value">
          #{item.mcId,jdbcType=INTEGER}
        </if>
        <if test="'unit_price'.toString() == column.value">
          #{item.unitPrice,jdbcType=DECIMAL}
        </if>
        <if test="'remark'.toString() == column.value">
          #{item.remark,jdbcType=VARCHAR}
        </if>
        <if test="'creator'.toString() == column.value">
          #{item.creator,jdbcType=VARCHAR}
        </if>
        <if test="'gmt_created'.toString() == column.value">
          #{item.gmtCreated,jdbcType=TIMESTAMP}
        </if>
        <if test="'gmt_modified'.toString() == column.value">
          #{item.gmtModified,jdbcType=TIMESTAMP}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>