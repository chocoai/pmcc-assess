<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.copower.pmcc.assess.dal.basis.mapper.BasicEstateLandStateMapper">
  <resultMap id="BaseResultMap" type="com.copower.pmcc.assess.dal.basis.entity.BasicEstateLandState">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="apply_id" jdbcType="INTEGER" property="applyId" />
    <result column="estate_id" jdbcType="INTEGER" property="estateId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="land_use_type" jdbcType="VARCHAR" property="landUseType" />
    <result column="land_use_category" jdbcType="VARCHAR" property="landUseCategory" />
    <result column="land_use_year" jdbcType="DECIMAL" property="landUseYear" />
    <result column="land_factor_total_score" jdbcType="DECIMAL" property="landFactorTotalScore" />
    <result column="land_level" jdbcType="INTEGER" property="landLevel" />
    <result column="land_area_unit" jdbcType="VARCHAR" property="landAreaUnit" />
    <result column="land_area" jdbcType="VARCHAR" property="landArea" />
    <result column="east_to_name" jdbcType="VARCHAR" property="eastToName" />
    <result column="east_to" jdbcType="VARCHAR" property="eastTo" />
    <result column="south_to_name" jdbcType="VARCHAR" property="southToName" />
    <result column="south_to" jdbcType="VARCHAR" property="southTo" />
    <result column="west_to_name" jdbcType="VARCHAR" property="westToName" />
    <result column="west_to" jdbcType="VARCHAR" property="westTo" />
    <result column="north_to_name" jdbcType="VARCHAR" property="northToName" />
    <result column="north_to" jdbcType="VARCHAR" property="northTo" />
    <result column="shape_state" jdbcType="INTEGER" property="shapeState" />
    <result column="shape_state_remark" jdbcType="VARCHAR" property="shapeStateRemark" />
    <result column="planeness" jdbcType="INTEGER" property="planeness" />
    <result column="topographic_terrain" jdbcType="INTEGER" property="topographicTerrain" />
    <result column="development_degree" jdbcType="INTEGER" property="developmentDegree" />
    <result column="development_degree_remark" jdbcType="VARCHAR" property="developmentDegreeRemark" />
    <result column="development_degree_content" jdbcType="VARCHAR" property="developmentDegreeContent" />
    <result column="acquisition_time" jdbcType="TIMESTAMP" property="acquisitionTime" />
    <result column="plot_ratio_remark" jdbcType="VARCHAR" property="plotRatioRemark" />
    <result column="plot_ratio" jdbcType="VARCHAR" property="plotRatio" />
    <result column="building_density" jdbcType="VARCHAR" property="buildingDensity" />
    <result column="green_space_rate" jdbcType="VARCHAR" property="greenSpaceRate" />
    <result column="compatible_ratio_type" jdbcType="VARCHAR" property="compatibleRatioType" />
    <result column="compatible_ratio" jdbcType="VARCHAR" property="compatibleRatio" />
    <result column="bearing_capacity" jdbcType="VARCHAR" property="bearingCapacity" />
    <result column="contaminated" jdbcType="VARCHAR" property="contaminated" />
    <result column="ph" jdbcType="VARCHAR" property="ph" />
    <result column="fertility" jdbcType="VARCHAR" property="fertility" />
    <result column="conclusion" jdbcType="VARCHAR" property="conclusion" />
    <result column="hold_on" jdbcType="VARCHAR" property="holdOn" />
    <result column="building_height_limit" jdbcType="DECIMAL" property="buildingHeightLimit" />
    <result column="investment_intensity" jdbcType="DECIMAL" property="investmentIntensity" />
    <result column="special_restrictions" jdbcType="VARCHAR" property="specialRestrictions" />
    <result column="present_situation_land_use" jdbcType="VARCHAR" property="presentSituationLandUse" />
    <result column="infrastructure_completeness" jdbcType="INTEGER" property="infrastructureCompleteness" />
    <result column="development_time" jdbcType="TIMESTAMP" property="developmentTime" />
    <result column="bis_delete" jdbcType="BIT" property="bisDelete" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="gmt_created" jdbcType="TIMESTAMP" property="gmtCreated" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
    <result column="current_situation" jdbcType="VARCHAR" property="currentSituation" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.copower.pmcc.assess.dal.basis.entity.BasicEstateLandState">
    <result column="land_level_content" jdbcType="LONGVARCHAR" property="landLevelContent" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, apply_id, estate_id, name, land_use_type, land_use_category, land_use_year, land_factor_total_score, 
    land_level, land_area_unit, land_area, east_to_name, east_to, south_to_name, south_to, 
    west_to_name, west_to, north_to_name, north_to, shape_state, shape_state_remark, 
    planeness, topographic_terrain, development_degree, development_degree_remark, development_degree_content, 
    acquisition_time, plot_ratio_remark, plot_ratio, building_density, green_space_rate, 
    compatible_ratio_type, compatible_ratio, bearing_capacity, contaminated, ph, fertility, 
    conclusion, hold_on, building_height_limit, investment_intensity, special_restrictions, 
    present_situation_land_use, infrastructure_completeness, development_time, bis_delete, 
    creator, gmt_created, gmt_modified, current_situation
  </sql>
  <sql id="Blob_Column_List">
    land_level_content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.copower.pmcc.assess.dal.basis.entity.BasicEstateLandStateExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_basic_estate_land_state
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.copower.pmcc.assess.dal.basis.entity.BasicEstateLandStateExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_basic_estate_land_state
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_basic_estate_land_state
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_basic_estate_land_state
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.copower.pmcc.assess.dal.basis.entity.BasicEstateLandStateExample">
    delete from tb_basic_estate_land_state
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.copower.pmcc.assess.dal.basis.entity.BasicEstateLandState">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_basic_estate_land_state (apply_id, estate_id, name, 
      land_use_type, land_use_category, land_use_year, 
      land_factor_total_score, land_level, land_area_unit, 
      land_area, east_to_name, east_to, 
      south_to_name, south_to, west_to_name, 
      west_to, north_to_name, north_to, 
      shape_state, shape_state_remark, planeness, 
      topographic_terrain, development_degree, 
      development_degree_remark, development_degree_content, 
      acquisition_time, plot_ratio_remark, plot_ratio, 
      building_density, green_space_rate, compatible_ratio_type, 
      compatible_ratio, bearing_capacity, contaminated, 
      ph, fertility, conclusion, 
      hold_on, building_height_limit, investment_intensity, 
      special_restrictions, present_situation_land_use, 
      infrastructure_completeness, development_time, 
      bis_delete, creator, gmt_created, 
      gmt_modified, current_situation, land_level_content
      )
    values (#{applyId,jdbcType=INTEGER}, #{estateId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{landUseType,jdbcType=VARCHAR}, #{landUseCategory,jdbcType=VARCHAR}, #{landUseYear,jdbcType=DECIMAL}, 
      #{landFactorTotalScore,jdbcType=DECIMAL}, #{landLevel,jdbcType=INTEGER}, #{landAreaUnit,jdbcType=VARCHAR}, 
      #{landArea,jdbcType=VARCHAR}, #{eastToName,jdbcType=VARCHAR}, #{eastTo,jdbcType=VARCHAR}, 
      #{southToName,jdbcType=VARCHAR}, #{southTo,jdbcType=VARCHAR}, #{westToName,jdbcType=VARCHAR}, 
      #{westTo,jdbcType=VARCHAR}, #{northToName,jdbcType=VARCHAR}, #{northTo,jdbcType=VARCHAR}, 
      #{shapeState,jdbcType=INTEGER}, #{shapeStateRemark,jdbcType=VARCHAR}, #{planeness,jdbcType=INTEGER}, 
      #{topographicTerrain,jdbcType=INTEGER}, #{developmentDegree,jdbcType=INTEGER}, 
      #{developmentDegreeRemark,jdbcType=VARCHAR}, #{developmentDegreeContent,jdbcType=VARCHAR}, 
      #{acquisitionTime,jdbcType=TIMESTAMP}, #{plotRatioRemark,jdbcType=VARCHAR}, #{plotRatio,jdbcType=VARCHAR}, 
      #{buildingDensity,jdbcType=VARCHAR}, #{greenSpaceRate,jdbcType=VARCHAR}, #{compatibleRatioType,jdbcType=VARCHAR}, 
      #{compatibleRatio,jdbcType=VARCHAR}, #{bearingCapacity,jdbcType=VARCHAR}, #{contaminated,jdbcType=VARCHAR}, 
      #{ph,jdbcType=VARCHAR}, #{fertility,jdbcType=VARCHAR}, #{conclusion,jdbcType=VARCHAR}, 
      #{holdOn,jdbcType=VARCHAR}, #{buildingHeightLimit,jdbcType=DECIMAL}, #{investmentIntensity,jdbcType=DECIMAL}, 
      #{specialRestrictions,jdbcType=VARCHAR}, #{presentSituationLandUse,jdbcType=VARCHAR}, 
      #{infrastructureCompleteness,jdbcType=INTEGER}, #{developmentTime,jdbcType=TIMESTAMP}, 
      #{bisDelete,jdbcType=BIT}, #{creator,jdbcType=VARCHAR}, #{gmtCreated,jdbcType=TIMESTAMP}, 
      #{gmtModified,jdbcType=TIMESTAMP}, #{currentSituation,jdbcType=VARCHAR}, #{landLevelContent,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="map">
    <selectKey keyProperty="record.id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_basic_estate_land_state
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.applyId != null">
            apply_id,
          </if>
          <if test="record.estateId != null">
            estate_id,
          </if>
          <if test="record.name != null">
            name,
          </if>
          <if test="record.landUseType != null">
            land_use_type,
          </if>
          <if test="record.landUseCategory != null">
            land_use_category,
          </if>
          <if test="record.landUseYear != null">
            land_use_year,
          </if>
          <if test="record.landFactorTotalScore != null">
            land_factor_total_score,
          </if>
          <if test="record.landLevel != null">
            land_level,
          </if>
          <if test="record.landAreaUnit != null">
            land_area_unit,
          </if>
          <if test="record.landArea != null">
            land_area,
          </if>
          <if test="record.eastToName != null">
            east_to_name,
          </if>
          <if test="record.eastTo != null">
            east_to,
          </if>
          <if test="record.southToName != null">
            south_to_name,
          </if>
          <if test="record.southTo != null">
            south_to,
          </if>
          <if test="record.westToName != null">
            west_to_name,
          </if>
          <if test="record.westTo != null">
            west_to,
          </if>
          <if test="record.northToName != null">
            north_to_name,
          </if>
          <if test="record.northTo != null">
            north_to,
          </if>
          <if test="record.shapeState != null">
            shape_state,
          </if>
          <if test="record.shapeStateRemark != null">
            shape_state_remark,
          </if>
          <if test="record.planeness != null">
            planeness,
          </if>
          <if test="record.topographicTerrain != null">
            topographic_terrain,
          </if>
          <if test="record.developmentDegree != null">
            development_degree,
          </if>
          <if test="record.developmentDegreeRemark != null">
            development_degree_remark,
          </if>
          <if test="record.developmentDegreeContent != null">
            development_degree_content,
          </if>
          <if test="record.acquisitionTime != null">
            acquisition_time,
          </if>
          <if test="record.plotRatioRemark != null">
            plot_ratio_remark,
          </if>
          <if test="record.plotRatio != null">
            plot_ratio,
          </if>
          <if test="record.buildingDensity != null">
            building_density,
          </if>
          <if test="record.greenSpaceRate != null">
            green_space_rate,
          </if>
          <if test="record.compatibleRatioType != null">
            compatible_ratio_type,
          </if>
          <if test="record.compatibleRatio != null">
            compatible_ratio,
          </if>
          <if test="record.bearingCapacity != null">
            bearing_capacity,
          </if>
          <if test="record.contaminated != null">
            contaminated,
          </if>
          <if test="record.ph != null">
            ph,
          </if>
          <if test="record.fertility != null">
            fertility,
          </if>
          <if test="record.conclusion != null">
            conclusion,
          </if>
          <if test="record.holdOn != null">
            hold_on,
          </if>
          <if test="record.buildingHeightLimit != null">
            building_height_limit,
          </if>
          <if test="record.investmentIntensity != null">
            investment_intensity,
          </if>
          <if test="record.specialRestrictions != null">
            special_restrictions,
          </if>
          <if test="record.presentSituationLandUse != null">
            present_situation_land_use,
          </if>
          <if test="record.infrastructureCompleteness != null">
            infrastructure_completeness,
          </if>
          <if test="record.developmentTime != null">
            development_time,
          </if>
          <if test="record.bisDelete != null">
            bis_delete,
          </if>
          <if test="record.creator != null">
            creator,
          </if>
          <if test="record.gmtCreated != null">
            gmt_created,
          </if>
          <if test="record.gmtModified != null">
            gmt_modified,
          </if>
          <if test="record.currentSituation != null">
            current_situation,
          </if>
          <if test="record.landLevelContent != null">
            land_level_content,
          </if>
        </trim>
        <trim prefix="(" suffix=")" suffixOverrides="," />
      </otherwise>
    </choose>
    values
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.applyId != null">
            #{record.applyId,jdbcType=INTEGER},
          </if>
          <if test="record.estateId != null">
            #{record.estateId,jdbcType=INTEGER},
          </if>
          <if test="record.name != null">
            #{record.name,jdbcType=VARCHAR},
          </if>
          <if test="record.landUseType != null">
            #{record.landUseType,jdbcType=VARCHAR},
          </if>
          <if test="record.landUseCategory != null">
            #{record.landUseCategory,jdbcType=VARCHAR},
          </if>
          <if test="record.landUseYear != null">
            #{record.landUseYear,jdbcType=DECIMAL},
          </if>
          <if test="record.landFactorTotalScore != null">
            #{record.landFactorTotalScore,jdbcType=DECIMAL},
          </if>
          <if test="record.landLevel != null">
            #{record.landLevel,jdbcType=INTEGER},
          </if>
          <if test="record.landAreaUnit != null">
            #{record.landAreaUnit,jdbcType=VARCHAR},
          </if>
          <if test="record.landArea != null">
            #{record.landArea,jdbcType=VARCHAR},
          </if>
          <if test="record.eastToName != null">
            #{record.eastToName,jdbcType=VARCHAR},
          </if>
          <if test="record.eastTo != null">
            #{record.eastTo,jdbcType=VARCHAR},
          </if>
          <if test="record.southToName != null">
            #{record.southToName,jdbcType=VARCHAR},
          </if>
          <if test="record.southTo != null">
            #{record.southTo,jdbcType=VARCHAR},
          </if>
          <if test="record.westToName != null">
            #{record.westToName,jdbcType=VARCHAR},
          </if>
          <if test="record.westTo != null">
            #{record.westTo,jdbcType=VARCHAR},
          </if>
          <if test="record.northToName != null">
            #{record.northToName,jdbcType=VARCHAR},
          </if>
          <if test="record.northTo != null">
            #{record.northTo,jdbcType=VARCHAR},
          </if>
          <if test="record.shapeState != null">
            #{record.shapeState,jdbcType=INTEGER},
          </if>
          <if test="record.shapeStateRemark != null">
            #{record.shapeStateRemark,jdbcType=VARCHAR},
          </if>
          <if test="record.planeness != null">
            #{record.planeness,jdbcType=INTEGER},
          </if>
          <if test="record.topographicTerrain != null">
            #{record.topographicTerrain,jdbcType=INTEGER},
          </if>
          <if test="record.developmentDegree != null">
            #{record.developmentDegree,jdbcType=INTEGER},
          </if>
          <if test="record.developmentDegreeRemark != null">
            #{record.developmentDegreeRemark,jdbcType=VARCHAR},
          </if>
          <if test="record.developmentDegreeContent != null">
            #{record.developmentDegreeContent,jdbcType=VARCHAR},
          </if>
          <if test="record.acquisitionTime != null">
            #{record.acquisitionTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.plotRatioRemark != null">
            #{record.plotRatioRemark,jdbcType=VARCHAR},
          </if>
          <if test="record.plotRatio != null">
            #{record.plotRatio,jdbcType=VARCHAR},
          </if>
          <if test="record.buildingDensity != null">
            #{record.buildingDensity,jdbcType=VARCHAR},
          </if>
          <if test="record.greenSpaceRate != null">
            #{record.greenSpaceRate,jdbcType=VARCHAR},
          </if>
          <if test="record.compatibleRatioType != null">
            #{record.compatibleRatioType,jdbcType=VARCHAR},
          </if>
          <if test="record.compatibleRatio != null">
            #{record.compatibleRatio,jdbcType=VARCHAR},
          </if>
          <if test="record.bearingCapacity != null">
            #{record.bearingCapacity,jdbcType=VARCHAR},
          </if>
          <if test="record.contaminated != null">
            #{record.contaminated,jdbcType=VARCHAR},
          </if>
          <if test="record.ph != null">
            #{record.ph,jdbcType=VARCHAR},
          </if>
          <if test="record.fertility != null">
            #{record.fertility,jdbcType=VARCHAR},
          </if>
          <if test="record.conclusion != null">
            #{record.conclusion,jdbcType=VARCHAR},
          </if>
          <if test="record.holdOn != null">
            #{record.holdOn,jdbcType=VARCHAR},
          </if>
          <if test="record.buildingHeightLimit != null">
            #{record.buildingHeightLimit,jdbcType=DECIMAL},
          </if>
          <if test="record.investmentIntensity != null">
            #{record.investmentIntensity,jdbcType=DECIMAL},
          </if>
          <if test="record.specialRestrictions != null">
            #{record.specialRestrictions,jdbcType=VARCHAR},
          </if>
          <if test="record.presentSituationLandUse != null">
            #{record.presentSituationLandUse,jdbcType=VARCHAR},
          </if>
          <if test="record.infrastructureCompleteness != null">
            #{record.infrastructureCompleteness,jdbcType=INTEGER},
          </if>
          <if test="record.developmentTime != null">
            #{record.developmentTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.bisDelete != null">
            #{record.bisDelete,jdbcType=BIT},
          </if>
          <if test="record.creator != null">
            #{record.creator,jdbcType=VARCHAR},
          </if>
          <if test="record.gmtCreated != null">
            #{record.gmtCreated,jdbcType=TIMESTAMP},
          </if>
          <if test="record.gmtModified != null">
            #{record.gmtModified,jdbcType=TIMESTAMP},
          </if>
          <if test="record.currentSituation != null">
            #{record.currentSituation,jdbcType=VARCHAR},
          </if>
          <if test="record.landLevelContent != null">
            #{record.landLevelContent,jdbcType=LONGVARCHAR},
          </if>
        </trim>
      </otherwise>
    </choose>
  </insert>
  <select id="countByExample" parameterType="com.copower.pmcc.assess.dal.basis.entity.BasicEstateLandStateExample" resultType="java.lang.Long">
    select count(*) from tb_basic_estate_land_state
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_basic_estate_land_state
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.id != null">
            id = #{record.id,jdbcType=INTEGER},
          </if>
          <if test="record.applyId != null">
            apply_id = #{record.applyId,jdbcType=INTEGER},
          </if>
          <if test="record.estateId != null">
            estate_id = #{record.estateId,jdbcType=INTEGER},
          </if>
          <if test="record.name != null">
            name = #{record.name,jdbcType=VARCHAR},
          </if>
          <if test="record.landUseType != null">
            land_use_type = #{record.landUseType,jdbcType=VARCHAR},
          </if>
          <if test="record.landUseCategory != null">
            land_use_category = #{record.landUseCategory,jdbcType=VARCHAR},
          </if>
          <if test="record.landUseYear != null">
            land_use_year = #{record.landUseYear,jdbcType=DECIMAL},
          </if>
          <if test="record.landFactorTotalScore != null">
            land_factor_total_score = #{record.landFactorTotalScore,jdbcType=DECIMAL},
          </if>
          <if test="record.landLevel != null">
            land_level = #{record.landLevel,jdbcType=INTEGER},
          </if>
          <if test="record.landAreaUnit != null">
            land_area_unit = #{record.landAreaUnit,jdbcType=VARCHAR},
          </if>
          <if test="record.landArea != null">
            land_area = #{record.landArea,jdbcType=VARCHAR},
          </if>
          <if test="record.eastToName != null">
            east_to_name = #{record.eastToName,jdbcType=VARCHAR},
          </if>
          <if test="record.eastTo != null">
            east_to = #{record.eastTo,jdbcType=VARCHAR},
          </if>
          <if test="record.southToName != null">
            south_to_name = #{record.southToName,jdbcType=VARCHAR},
          </if>
          <if test="record.southTo != null">
            south_to = #{record.southTo,jdbcType=VARCHAR},
          </if>
          <if test="record.westToName != null">
            west_to_name = #{record.westToName,jdbcType=VARCHAR},
          </if>
          <if test="record.westTo != null">
            west_to = #{record.westTo,jdbcType=VARCHAR},
          </if>
          <if test="record.northToName != null">
            north_to_name = #{record.northToName,jdbcType=VARCHAR},
          </if>
          <if test="record.northTo != null">
            north_to = #{record.northTo,jdbcType=VARCHAR},
          </if>
          <if test="record.shapeState != null">
            shape_state = #{record.shapeState,jdbcType=INTEGER},
          </if>
          <if test="record.shapeStateRemark != null">
            shape_state_remark = #{record.shapeStateRemark,jdbcType=VARCHAR},
          </if>
          <if test="record.planeness != null">
            planeness = #{record.planeness,jdbcType=INTEGER},
          </if>
          <if test="record.topographicTerrain != null">
            topographic_terrain = #{record.topographicTerrain,jdbcType=INTEGER},
          </if>
          <if test="record.developmentDegree != null">
            development_degree = #{record.developmentDegree,jdbcType=INTEGER},
          </if>
          <if test="record.developmentDegreeRemark != null">
            development_degree_remark = #{record.developmentDegreeRemark,jdbcType=VARCHAR},
          </if>
          <if test="record.developmentDegreeContent != null">
            development_degree_content = #{record.developmentDegreeContent,jdbcType=VARCHAR},
          </if>
          <if test="record.acquisitionTime != null">
            acquisition_time = #{record.acquisitionTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.plotRatioRemark != null">
            plot_ratio_remark = #{record.plotRatioRemark,jdbcType=VARCHAR},
          </if>
          <if test="record.plotRatio != null">
            plot_ratio = #{record.plotRatio,jdbcType=VARCHAR},
          </if>
          <if test="record.buildingDensity != null">
            building_density = #{record.buildingDensity,jdbcType=VARCHAR},
          </if>
          <if test="record.greenSpaceRate != null">
            green_space_rate = #{record.greenSpaceRate,jdbcType=VARCHAR},
          </if>
          <if test="record.compatibleRatioType != null">
            compatible_ratio_type = #{record.compatibleRatioType,jdbcType=VARCHAR},
          </if>
          <if test="record.compatibleRatio != null">
            compatible_ratio = #{record.compatibleRatio,jdbcType=VARCHAR},
          </if>
          <if test="record.bearingCapacity != null">
            bearing_capacity = #{record.bearingCapacity,jdbcType=VARCHAR},
          </if>
          <if test="record.contaminated != null">
            contaminated = #{record.contaminated,jdbcType=VARCHAR},
          </if>
          <if test="record.ph != null">
            ph = #{record.ph,jdbcType=VARCHAR},
          </if>
          <if test="record.fertility != null">
            fertility = #{record.fertility,jdbcType=VARCHAR},
          </if>
          <if test="record.conclusion != null">
            conclusion = #{record.conclusion,jdbcType=VARCHAR},
          </if>
          <if test="record.holdOn != null">
            hold_on = #{record.holdOn,jdbcType=VARCHAR},
          </if>
          <if test="record.buildingHeightLimit != null">
            building_height_limit = #{record.buildingHeightLimit,jdbcType=DECIMAL},
          </if>
          <if test="record.investmentIntensity != null">
            investment_intensity = #{record.investmentIntensity,jdbcType=DECIMAL},
          </if>
          <if test="record.specialRestrictions != null">
            special_restrictions = #{record.specialRestrictions,jdbcType=VARCHAR},
          </if>
          <if test="record.presentSituationLandUse != null">
            present_situation_land_use = #{record.presentSituationLandUse,jdbcType=VARCHAR},
          </if>
          <if test="record.infrastructureCompleteness != null">
            infrastructure_completeness = #{record.infrastructureCompleteness,jdbcType=INTEGER},
          </if>
          <if test="record.developmentTime != null">
            development_time = #{record.developmentTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.bisDelete != null">
            bis_delete = #{record.bisDelete,jdbcType=BIT},
          </if>
          <if test="record.creator != null">
            creator = #{record.creator,jdbcType=VARCHAR},
          </if>
          <if test="record.gmtCreated != null">
            gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
          </if>
          <if test="record.gmtModified != null">
            gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
          </if>
          <if test="record.currentSituation != null">
            current_situation = #{record.currentSituation,jdbcType=VARCHAR},
          </if>
          <if test="record.landLevelContent != null">
            land_level_content = #{record.landLevelContent,jdbcType=LONGVARCHAR},
          </if>
        </trim>
      </otherwise>
    </choose>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update tb_basic_estate_land_state
    set id = #{record.id,jdbcType=INTEGER},
      apply_id = #{record.applyId,jdbcType=INTEGER},
      estate_id = #{record.estateId,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      land_use_type = #{record.landUseType,jdbcType=VARCHAR},
      land_use_category = #{record.landUseCategory,jdbcType=VARCHAR},
      land_use_year = #{record.landUseYear,jdbcType=DECIMAL},
      land_factor_total_score = #{record.landFactorTotalScore,jdbcType=DECIMAL},
      land_level = #{record.landLevel,jdbcType=INTEGER},
      land_area_unit = #{record.landAreaUnit,jdbcType=VARCHAR},
      land_area = #{record.landArea,jdbcType=VARCHAR},
      east_to_name = #{record.eastToName,jdbcType=VARCHAR},
      east_to = #{record.eastTo,jdbcType=VARCHAR},
      south_to_name = #{record.southToName,jdbcType=VARCHAR},
      south_to = #{record.southTo,jdbcType=VARCHAR},
      west_to_name = #{record.westToName,jdbcType=VARCHAR},
      west_to = #{record.westTo,jdbcType=VARCHAR},
      north_to_name = #{record.northToName,jdbcType=VARCHAR},
      north_to = #{record.northTo,jdbcType=VARCHAR},
      shape_state = #{record.shapeState,jdbcType=INTEGER},
      shape_state_remark = #{record.shapeStateRemark,jdbcType=VARCHAR},
      planeness = #{record.planeness,jdbcType=INTEGER},
      topographic_terrain = #{record.topographicTerrain,jdbcType=INTEGER},
      development_degree = #{record.developmentDegree,jdbcType=INTEGER},
      development_degree_remark = #{record.developmentDegreeRemark,jdbcType=VARCHAR},
      development_degree_content = #{record.developmentDegreeContent,jdbcType=VARCHAR},
      acquisition_time = #{record.acquisitionTime,jdbcType=TIMESTAMP},
      plot_ratio_remark = #{record.plotRatioRemark,jdbcType=VARCHAR},
      plot_ratio = #{record.plotRatio,jdbcType=VARCHAR},
      building_density = #{record.buildingDensity,jdbcType=VARCHAR},
      green_space_rate = #{record.greenSpaceRate,jdbcType=VARCHAR},
      compatible_ratio_type = #{record.compatibleRatioType,jdbcType=VARCHAR},
      compatible_ratio = #{record.compatibleRatio,jdbcType=VARCHAR},
      bearing_capacity = #{record.bearingCapacity,jdbcType=VARCHAR},
      contaminated = #{record.contaminated,jdbcType=VARCHAR},
      ph = #{record.ph,jdbcType=VARCHAR},
      fertility = #{record.fertility,jdbcType=VARCHAR},
      conclusion = #{record.conclusion,jdbcType=VARCHAR},
      hold_on = #{record.holdOn,jdbcType=VARCHAR},
      building_height_limit = #{record.buildingHeightLimit,jdbcType=DECIMAL},
      investment_intensity = #{record.investmentIntensity,jdbcType=DECIMAL},
      special_restrictions = #{record.specialRestrictions,jdbcType=VARCHAR},
      present_situation_land_use = #{record.presentSituationLandUse,jdbcType=VARCHAR},
      infrastructure_completeness = #{record.infrastructureCompleteness,jdbcType=INTEGER},
      development_time = #{record.developmentTime,jdbcType=TIMESTAMP},
      bis_delete = #{record.bisDelete,jdbcType=BIT},
      creator = #{record.creator,jdbcType=VARCHAR},
      gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      current_situation = #{record.currentSituation,jdbcType=VARCHAR},
      land_level_content = #{record.landLevelContent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_basic_estate_land_state
    set id = #{record.id,jdbcType=INTEGER},
      apply_id = #{record.applyId,jdbcType=INTEGER},
      estate_id = #{record.estateId,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      land_use_type = #{record.landUseType,jdbcType=VARCHAR},
      land_use_category = #{record.landUseCategory,jdbcType=VARCHAR},
      land_use_year = #{record.landUseYear,jdbcType=DECIMAL},
      land_factor_total_score = #{record.landFactorTotalScore,jdbcType=DECIMAL},
      land_level = #{record.landLevel,jdbcType=INTEGER},
      land_area_unit = #{record.landAreaUnit,jdbcType=VARCHAR},
      land_area = #{record.landArea,jdbcType=VARCHAR},
      east_to_name = #{record.eastToName,jdbcType=VARCHAR},
      east_to = #{record.eastTo,jdbcType=VARCHAR},
      south_to_name = #{record.southToName,jdbcType=VARCHAR},
      south_to = #{record.southTo,jdbcType=VARCHAR},
      west_to_name = #{record.westToName,jdbcType=VARCHAR},
      west_to = #{record.westTo,jdbcType=VARCHAR},
      north_to_name = #{record.northToName,jdbcType=VARCHAR},
      north_to = #{record.northTo,jdbcType=VARCHAR},
      shape_state = #{record.shapeState,jdbcType=INTEGER},
      shape_state_remark = #{record.shapeStateRemark,jdbcType=VARCHAR},
      planeness = #{record.planeness,jdbcType=INTEGER},
      topographic_terrain = #{record.topographicTerrain,jdbcType=INTEGER},
      development_degree = #{record.developmentDegree,jdbcType=INTEGER},
      development_degree_remark = #{record.developmentDegreeRemark,jdbcType=VARCHAR},
      development_degree_content = #{record.developmentDegreeContent,jdbcType=VARCHAR},
      acquisition_time = #{record.acquisitionTime,jdbcType=TIMESTAMP},
      plot_ratio_remark = #{record.plotRatioRemark,jdbcType=VARCHAR},
      plot_ratio = #{record.plotRatio,jdbcType=VARCHAR},
      building_density = #{record.buildingDensity,jdbcType=VARCHAR},
      green_space_rate = #{record.greenSpaceRate,jdbcType=VARCHAR},
      compatible_ratio_type = #{record.compatibleRatioType,jdbcType=VARCHAR},
      compatible_ratio = #{record.compatibleRatio,jdbcType=VARCHAR},
      bearing_capacity = #{record.bearingCapacity,jdbcType=VARCHAR},
      contaminated = #{record.contaminated,jdbcType=VARCHAR},
      ph = #{record.ph,jdbcType=VARCHAR},
      fertility = #{record.fertility,jdbcType=VARCHAR},
      conclusion = #{record.conclusion,jdbcType=VARCHAR},
      hold_on = #{record.holdOn,jdbcType=VARCHAR},
      building_height_limit = #{record.buildingHeightLimit,jdbcType=DECIMAL},
      investment_intensity = #{record.investmentIntensity,jdbcType=DECIMAL},
      special_restrictions = #{record.specialRestrictions,jdbcType=VARCHAR},
      present_situation_land_use = #{record.presentSituationLandUse,jdbcType=VARCHAR},
      infrastructure_completeness = #{record.infrastructureCompleteness,jdbcType=INTEGER},
      development_time = #{record.developmentTime,jdbcType=TIMESTAMP},
      bis_delete = #{record.bisDelete,jdbcType=BIT},
      creator = #{record.creator,jdbcType=VARCHAR},
      gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      current_situation = #{record.currentSituation,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="map">
    update tb_basic_estate_land_state
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.applyId != null">
            apply_id = #{record.applyId,jdbcType=INTEGER},
          </if>
          <if test="record.estateId != null">
            estate_id = #{record.estateId,jdbcType=INTEGER},
          </if>
          <if test="record.name != null">
            name = #{record.name,jdbcType=VARCHAR},
          </if>
          <if test="record.landUseType != null">
            land_use_type = #{record.landUseType,jdbcType=VARCHAR},
          </if>
          <if test="record.landUseCategory != null">
            land_use_category = #{record.landUseCategory,jdbcType=VARCHAR},
          </if>
          <if test="record.landUseYear != null">
            land_use_year = #{record.landUseYear,jdbcType=DECIMAL},
          </if>
          <if test="record.landFactorTotalScore != null">
            land_factor_total_score = #{record.landFactorTotalScore,jdbcType=DECIMAL},
          </if>
          <if test="record.landLevel != null">
            land_level = #{record.landLevel,jdbcType=INTEGER},
          </if>
          <if test="record.landAreaUnit != null">
            land_area_unit = #{record.landAreaUnit,jdbcType=VARCHAR},
          </if>
          <if test="record.landArea != null">
            land_area = #{record.landArea,jdbcType=VARCHAR},
          </if>
          <if test="record.eastToName != null">
            east_to_name = #{record.eastToName,jdbcType=VARCHAR},
          </if>
          <if test="record.eastTo != null">
            east_to = #{record.eastTo,jdbcType=VARCHAR},
          </if>
          <if test="record.southToName != null">
            south_to_name = #{record.southToName,jdbcType=VARCHAR},
          </if>
          <if test="record.southTo != null">
            south_to = #{record.southTo,jdbcType=VARCHAR},
          </if>
          <if test="record.westToName != null">
            west_to_name = #{record.westToName,jdbcType=VARCHAR},
          </if>
          <if test="record.westTo != null">
            west_to = #{record.westTo,jdbcType=VARCHAR},
          </if>
          <if test="record.northToName != null">
            north_to_name = #{record.northToName,jdbcType=VARCHAR},
          </if>
          <if test="record.northTo != null">
            north_to = #{record.northTo,jdbcType=VARCHAR},
          </if>
          <if test="record.shapeState != null">
            shape_state = #{record.shapeState,jdbcType=INTEGER},
          </if>
          <if test="record.shapeStateRemark != null">
            shape_state_remark = #{record.shapeStateRemark,jdbcType=VARCHAR},
          </if>
          <if test="record.planeness != null">
            planeness = #{record.planeness,jdbcType=INTEGER},
          </if>
          <if test="record.topographicTerrain != null">
            topographic_terrain = #{record.topographicTerrain,jdbcType=INTEGER},
          </if>
          <if test="record.developmentDegree != null">
            development_degree = #{record.developmentDegree,jdbcType=INTEGER},
          </if>
          <if test="record.developmentDegreeRemark != null">
            development_degree_remark = #{record.developmentDegreeRemark,jdbcType=VARCHAR},
          </if>
          <if test="record.developmentDegreeContent != null">
            development_degree_content = #{record.developmentDegreeContent,jdbcType=VARCHAR},
          </if>
          <if test="record.acquisitionTime != null">
            acquisition_time = #{record.acquisitionTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.plotRatioRemark != null">
            plot_ratio_remark = #{record.plotRatioRemark,jdbcType=VARCHAR},
          </if>
          <if test="record.plotRatio != null">
            plot_ratio = #{record.plotRatio,jdbcType=VARCHAR},
          </if>
          <if test="record.buildingDensity != null">
            building_density = #{record.buildingDensity,jdbcType=VARCHAR},
          </if>
          <if test="record.greenSpaceRate != null">
            green_space_rate = #{record.greenSpaceRate,jdbcType=VARCHAR},
          </if>
          <if test="record.compatibleRatioType != null">
            compatible_ratio_type = #{record.compatibleRatioType,jdbcType=VARCHAR},
          </if>
          <if test="record.compatibleRatio != null">
            compatible_ratio = #{record.compatibleRatio,jdbcType=VARCHAR},
          </if>
          <if test="record.bearingCapacity != null">
            bearing_capacity = #{record.bearingCapacity,jdbcType=VARCHAR},
          </if>
          <if test="record.contaminated != null">
            contaminated = #{record.contaminated,jdbcType=VARCHAR},
          </if>
          <if test="record.ph != null">
            ph = #{record.ph,jdbcType=VARCHAR},
          </if>
          <if test="record.fertility != null">
            fertility = #{record.fertility,jdbcType=VARCHAR},
          </if>
          <if test="record.conclusion != null">
            conclusion = #{record.conclusion,jdbcType=VARCHAR},
          </if>
          <if test="record.holdOn != null">
            hold_on = #{record.holdOn,jdbcType=VARCHAR},
          </if>
          <if test="record.buildingHeightLimit != null">
            building_height_limit = #{record.buildingHeightLimit,jdbcType=DECIMAL},
          </if>
          <if test="record.investmentIntensity != null">
            investment_intensity = #{record.investmentIntensity,jdbcType=DECIMAL},
          </if>
          <if test="record.specialRestrictions != null">
            special_restrictions = #{record.specialRestrictions,jdbcType=VARCHAR},
          </if>
          <if test="record.presentSituationLandUse != null">
            present_situation_land_use = #{record.presentSituationLandUse,jdbcType=VARCHAR},
          </if>
          <if test="record.infrastructureCompleteness != null">
            infrastructure_completeness = #{record.infrastructureCompleteness,jdbcType=INTEGER},
          </if>
          <if test="record.developmentTime != null">
            development_time = #{record.developmentTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.bisDelete != null">
            bis_delete = #{record.bisDelete,jdbcType=BIT},
          </if>
          <if test="record.creator != null">
            creator = #{record.creator,jdbcType=VARCHAR},
          </if>
          <if test="record.gmtCreated != null">
            gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
          </if>
          <if test="record.gmtModified != null">
            gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
          </if>
          <if test="record.currentSituation != null">
            current_situation = #{record.currentSituation,jdbcType=VARCHAR},
          </if>
          <if test="record.landLevelContent != null">
            land_level_content = #{record.landLevelContent,jdbcType=LONGVARCHAR},
          </if>
        </trim>
      </otherwise>
    </choose>
    where id = #{record.id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.copower.pmcc.assess.dal.basis.entity.BasicEstateLandState">
    update tb_basic_estate_land_state
    set apply_id = #{applyId,jdbcType=INTEGER},
      estate_id = #{estateId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      land_use_type = #{landUseType,jdbcType=VARCHAR},
      land_use_category = #{landUseCategory,jdbcType=VARCHAR},
      land_use_year = #{landUseYear,jdbcType=DECIMAL},
      land_factor_total_score = #{landFactorTotalScore,jdbcType=DECIMAL},
      land_level = #{landLevel,jdbcType=INTEGER},
      land_area_unit = #{landAreaUnit,jdbcType=VARCHAR},
      land_area = #{landArea,jdbcType=VARCHAR},
      east_to_name = #{eastToName,jdbcType=VARCHAR},
      east_to = #{eastTo,jdbcType=VARCHAR},
      south_to_name = #{southToName,jdbcType=VARCHAR},
      south_to = #{southTo,jdbcType=VARCHAR},
      west_to_name = #{westToName,jdbcType=VARCHAR},
      west_to = #{westTo,jdbcType=VARCHAR},
      north_to_name = #{northToName,jdbcType=VARCHAR},
      north_to = #{northTo,jdbcType=VARCHAR},
      shape_state = #{shapeState,jdbcType=INTEGER},
      shape_state_remark = #{shapeStateRemark,jdbcType=VARCHAR},
      planeness = #{planeness,jdbcType=INTEGER},
      topographic_terrain = #{topographicTerrain,jdbcType=INTEGER},
      development_degree = #{developmentDegree,jdbcType=INTEGER},
      development_degree_remark = #{developmentDegreeRemark,jdbcType=VARCHAR},
      development_degree_content = #{developmentDegreeContent,jdbcType=VARCHAR},
      acquisition_time = #{acquisitionTime,jdbcType=TIMESTAMP},
      plot_ratio_remark = #{plotRatioRemark,jdbcType=VARCHAR},
      plot_ratio = #{plotRatio,jdbcType=VARCHAR},
      building_density = #{buildingDensity,jdbcType=VARCHAR},
      green_space_rate = #{greenSpaceRate,jdbcType=VARCHAR},
      compatible_ratio_type = #{compatibleRatioType,jdbcType=VARCHAR},
      compatible_ratio = #{compatibleRatio,jdbcType=VARCHAR},
      bearing_capacity = #{bearingCapacity,jdbcType=VARCHAR},
      contaminated = #{contaminated,jdbcType=VARCHAR},
      ph = #{ph,jdbcType=VARCHAR},
      fertility = #{fertility,jdbcType=VARCHAR},
      conclusion = #{conclusion,jdbcType=VARCHAR},
      hold_on = #{holdOn,jdbcType=VARCHAR},
      building_height_limit = #{buildingHeightLimit,jdbcType=DECIMAL},
      investment_intensity = #{investmentIntensity,jdbcType=DECIMAL},
      special_restrictions = #{specialRestrictions,jdbcType=VARCHAR},
      present_situation_land_use = #{presentSituationLandUse,jdbcType=VARCHAR},
      infrastructure_completeness = #{infrastructureCompleteness,jdbcType=INTEGER},
      development_time = #{developmentTime,jdbcType=TIMESTAMP},
      bis_delete = #{bisDelete,jdbcType=BIT},
      creator = #{creator,jdbcType=VARCHAR},
      gmt_created = #{gmtCreated,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      current_situation = #{currentSituation,jdbcType=VARCHAR},
      land_level_content = #{landLevelContent,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.copower.pmcc.assess.dal.basis.entity.BasicEstateLandState">
    update tb_basic_estate_land_state
    set apply_id = #{applyId,jdbcType=INTEGER},
      estate_id = #{estateId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      land_use_type = #{landUseType,jdbcType=VARCHAR},
      land_use_category = #{landUseCategory,jdbcType=VARCHAR},
      land_use_year = #{landUseYear,jdbcType=DECIMAL},
      land_factor_total_score = #{landFactorTotalScore,jdbcType=DECIMAL},
      land_level = #{landLevel,jdbcType=INTEGER},
      land_area_unit = #{landAreaUnit,jdbcType=VARCHAR},
      land_area = #{landArea,jdbcType=VARCHAR},
      east_to_name = #{eastToName,jdbcType=VARCHAR},
      east_to = #{eastTo,jdbcType=VARCHAR},
      south_to_name = #{southToName,jdbcType=VARCHAR},
      south_to = #{southTo,jdbcType=VARCHAR},
      west_to_name = #{westToName,jdbcType=VARCHAR},
      west_to = #{westTo,jdbcType=VARCHAR},
      north_to_name = #{northToName,jdbcType=VARCHAR},
      north_to = #{northTo,jdbcType=VARCHAR},
      shape_state = #{shapeState,jdbcType=INTEGER},
      shape_state_remark = #{shapeStateRemark,jdbcType=VARCHAR},
      planeness = #{planeness,jdbcType=INTEGER},
      topographic_terrain = #{topographicTerrain,jdbcType=INTEGER},
      development_degree = #{developmentDegree,jdbcType=INTEGER},
      development_degree_remark = #{developmentDegreeRemark,jdbcType=VARCHAR},
      development_degree_content = #{developmentDegreeContent,jdbcType=VARCHAR},
      acquisition_time = #{acquisitionTime,jdbcType=TIMESTAMP},
      plot_ratio_remark = #{plotRatioRemark,jdbcType=VARCHAR},
      plot_ratio = #{plotRatio,jdbcType=VARCHAR},
      building_density = #{buildingDensity,jdbcType=VARCHAR},
      green_space_rate = #{greenSpaceRate,jdbcType=VARCHAR},
      compatible_ratio_type = #{compatibleRatioType,jdbcType=VARCHAR},
      compatible_ratio = #{compatibleRatio,jdbcType=VARCHAR},
      bearing_capacity = #{bearingCapacity,jdbcType=VARCHAR},
      contaminated = #{contaminated,jdbcType=VARCHAR},
      ph = #{ph,jdbcType=VARCHAR},
      fertility = #{fertility,jdbcType=VARCHAR},
      conclusion = #{conclusion,jdbcType=VARCHAR},
      hold_on = #{holdOn,jdbcType=VARCHAR},
      building_height_limit = #{buildingHeightLimit,jdbcType=DECIMAL},
      investment_intensity = #{investmentIntensity,jdbcType=DECIMAL},
      special_restrictions = #{specialRestrictions,jdbcType=VARCHAR},
      present_situation_land_use = #{presentSituationLandUse,jdbcType=VARCHAR},
      infrastructure_completeness = #{infrastructureCompleteness,jdbcType=INTEGER},
      development_time = #{developmentTime,jdbcType=TIMESTAMP},
      bis_delete = #{bisDelete,jdbcType=BIT},
      creator = #{creator,jdbcType=VARCHAR},
      gmt_created = #{gmtCreated,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      current_situation = #{currentSituation,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    insert into tb_basic_estate_land_state
    (apply_id, estate_id, name, land_use_type, land_use_category, land_use_year, land_factor_total_score, 
      land_level, land_area_unit, land_area, east_to_name, east_to, south_to_name, south_to, 
      west_to_name, west_to, north_to_name, north_to, shape_state, shape_state_remark, 
      planeness, topographic_terrain, development_degree, development_degree_remark, 
      development_degree_content, acquisition_time, plot_ratio_remark, plot_ratio, building_density, 
      green_space_rate, compatible_ratio_type, compatible_ratio, bearing_capacity, contaminated, 
      ph, fertility, conclusion, hold_on, building_height_limit, investment_intensity, 
      special_restrictions, present_situation_land_use, infrastructure_completeness, 
      development_time, bis_delete, creator, gmt_created, gmt_modified, current_situation, 
      land_level_content)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.applyId,jdbcType=INTEGER}, #{item.estateId,jdbcType=INTEGER}, #{item.name,jdbcType=VARCHAR}, 
        #{item.landUseType,jdbcType=VARCHAR}, #{item.landUseCategory,jdbcType=VARCHAR}, 
        #{item.landUseYear,jdbcType=DECIMAL}, #{item.landFactorTotalScore,jdbcType=DECIMAL}, 
        #{item.landLevel,jdbcType=INTEGER}, #{item.landAreaUnit,jdbcType=VARCHAR}, #{item.landArea,jdbcType=VARCHAR}, 
        #{item.eastToName,jdbcType=VARCHAR}, #{item.eastTo,jdbcType=VARCHAR}, #{item.southToName,jdbcType=VARCHAR}, 
        #{item.southTo,jdbcType=VARCHAR}, #{item.westToName,jdbcType=VARCHAR}, #{item.westTo,jdbcType=VARCHAR}, 
        #{item.northToName,jdbcType=VARCHAR}, #{item.northTo,jdbcType=VARCHAR}, #{item.shapeState,jdbcType=INTEGER}, 
        #{item.shapeStateRemark,jdbcType=VARCHAR}, #{item.planeness,jdbcType=INTEGER}, 
        #{item.topographicTerrain,jdbcType=INTEGER}, #{item.developmentDegree,jdbcType=INTEGER}, 
        #{item.developmentDegreeRemark,jdbcType=VARCHAR}, #{item.developmentDegreeContent,jdbcType=VARCHAR}, 
        #{item.acquisitionTime,jdbcType=TIMESTAMP}, #{item.plotRatioRemark,jdbcType=VARCHAR}, 
        #{item.plotRatio,jdbcType=VARCHAR}, #{item.buildingDensity,jdbcType=VARCHAR}, #{item.greenSpaceRate,jdbcType=VARCHAR}, 
        #{item.compatibleRatioType,jdbcType=VARCHAR}, #{item.compatibleRatio,jdbcType=VARCHAR}, 
        #{item.bearingCapacity,jdbcType=VARCHAR}, #{item.contaminated,jdbcType=VARCHAR}, 
        #{item.ph,jdbcType=VARCHAR}, #{item.fertility,jdbcType=VARCHAR}, #{item.conclusion,jdbcType=VARCHAR}, 
        #{item.holdOn,jdbcType=VARCHAR}, #{item.buildingHeightLimit,jdbcType=DECIMAL}, 
        #{item.investmentIntensity,jdbcType=DECIMAL}, #{item.specialRestrictions,jdbcType=VARCHAR}, 
        #{item.presentSituationLandUse,jdbcType=VARCHAR}, #{item.infrastructureCompleteness,jdbcType=INTEGER}, 
        #{item.developmentTime,jdbcType=TIMESTAMP}, #{item.bisDelete,jdbcType=BIT}, #{item.creator,jdbcType=VARCHAR}, 
        #{item.gmtCreated,jdbcType=TIMESTAMP}, #{item.gmtModified,jdbcType=TIMESTAMP}, 
        #{item.currentSituation,jdbcType=VARCHAR}, #{item.landLevelContent,jdbcType=LONGVARCHAR}
        )
    </foreach>
  </insert>
  <insert id="batchInsertSelective" keyColumn="id" keyProperty="list.id" parameterType="map" useGeneratedKeys="true">
    insert into tb_basic_estate_land_state (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'apply_id'.toString() == column.value">
          #{item.applyId,jdbcType=INTEGER}
        </if>
        <if test="'estate_id'.toString() == column.value">
          #{item.estateId,jdbcType=INTEGER}
        </if>
        <if test="'name'.toString() == column.value">
          #{item.name,jdbcType=VARCHAR}
        </if>
        <if test="'land_use_type'.toString() == column.value">
          #{item.landUseType,jdbcType=VARCHAR}
        </if>
        <if test="'land_use_category'.toString() == column.value">
          #{item.landUseCategory,jdbcType=VARCHAR}
        </if>
        <if test="'land_use_year'.toString() == column.value">
          #{item.landUseYear,jdbcType=DECIMAL}
        </if>
        <if test="'land_factor_total_score'.toString() == column.value">
          #{item.landFactorTotalScore,jdbcType=DECIMAL}
        </if>
        <if test="'land_level'.toString() == column.value">
          #{item.landLevel,jdbcType=INTEGER}
        </if>
        <if test="'land_area_unit'.toString() == column.value">
          #{item.landAreaUnit,jdbcType=VARCHAR}
        </if>
        <if test="'land_area'.toString() == column.value">
          #{item.landArea,jdbcType=VARCHAR}
        </if>
        <if test="'east_to_name'.toString() == column.value">
          #{item.eastToName,jdbcType=VARCHAR}
        </if>
        <if test="'east_to'.toString() == column.value">
          #{item.eastTo,jdbcType=VARCHAR}
        </if>
        <if test="'south_to_name'.toString() == column.value">
          #{item.southToName,jdbcType=VARCHAR}
        </if>
        <if test="'south_to'.toString() == column.value">
          #{item.southTo,jdbcType=VARCHAR}
        </if>
        <if test="'west_to_name'.toString() == column.value">
          #{item.westToName,jdbcType=VARCHAR}
        </if>
        <if test="'west_to'.toString() == column.value">
          #{item.westTo,jdbcType=VARCHAR}
        </if>
        <if test="'north_to_name'.toString() == column.value">
          #{item.northToName,jdbcType=VARCHAR}
        </if>
        <if test="'north_to'.toString() == column.value">
          #{item.northTo,jdbcType=VARCHAR}
        </if>
        <if test="'shape_state'.toString() == column.value">
          #{item.shapeState,jdbcType=INTEGER}
        </if>
        <if test="'shape_state_remark'.toString() == column.value">
          #{item.shapeStateRemark,jdbcType=VARCHAR}
        </if>
        <if test="'planeness'.toString() == column.value">
          #{item.planeness,jdbcType=INTEGER}
        </if>
        <if test="'topographic_terrain'.toString() == column.value">
          #{item.topographicTerrain,jdbcType=INTEGER}
        </if>
        <if test="'development_degree'.toString() == column.value">
          #{item.developmentDegree,jdbcType=INTEGER}
        </if>
        <if test="'development_degree_remark'.toString() == column.value">
          #{item.developmentDegreeRemark,jdbcType=VARCHAR}
        </if>
        <if test="'development_degree_content'.toString() == column.value">
          #{item.developmentDegreeContent,jdbcType=VARCHAR}
        </if>
        <if test="'acquisition_time'.toString() == column.value">
          #{item.acquisitionTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'plot_ratio_remark'.toString() == column.value">
          #{item.plotRatioRemark,jdbcType=VARCHAR}
        </if>
        <if test="'plot_ratio'.toString() == column.value">
          #{item.plotRatio,jdbcType=VARCHAR}
        </if>
        <if test="'building_density'.toString() == column.value">
          #{item.buildingDensity,jdbcType=VARCHAR}
        </if>
        <if test="'green_space_rate'.toString() == column.value">
          #{item.greenSpaceRate,jdbcType=VARCHAR}
        </if>
        <if test="'compatible_ratio_type'.toString() == column.value">
          #{item.compatibleRatioType,jdbcType=VARCHAR}
        </if>
        <if test="'compatible_ratio'.toString() == column.value">
          #{item.compatibleRatio,jdbcType=VARCHAR}
        </if>
        <if test="'bearing_capacity'.toString() == column.value">
          #{item.bearingCapacity,jdbcType=VARCHAR}
        </if>
        <if test="'contaminated'.toString() == column.value">
          #{item.contaminated,jdbcType=VARCHAR}
        </if>
        <if test="'ph'.toString() == column.value">
          #{item.ph,jdbcType=VARCHAR}
        </if>
        <if test="'fertility'.toString() == column.value">
          #{item.fertility,jdbcType=VARCHAR}
        </if>
        <if test="'conclusion'.toString() == column.value">
          #{item.conclusion,jdbcType=VARCHAR}
        </if>
        <if test="'hold_on'.toString() == column.value">
          #{item.holdOn,jdbcType=VARCHAR}
        </if>
        <if test="'building_height_limit'.toString() == column.value">
          #{item.buildingHeightLimit,jdbcType=DECIMAL}
        </if>
        <if test="'investment_intensity'.toString() == column.value">
          #{item.investmentIntensity,jdbcType=DECIMAL}
        </if>
        <if test="'special_restrictions'.toString() == column.value">
          #{item.specialRestrictions,jdbcType=VARCHAR}
        </if>
        <if test="'present_situation_land_use'.toString() == column.value">
          #{item.presentSituationLandUse,jdbcType=VARCHAR}
        </if>
        <if test="'infrastructure_completeness'.toString() == column.value">
          #{item.infrastructureCompleteness,jdbcType=INTEGER}
        </if>
        <if test="'development_time'.toString() == column.value">
          #{item.developmentTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'bis_delete'.toString() == column.value">
          #{item.bisDelete,jdbcType=BIT}
        </if>
        <if test="'creator'.toString() == column.value">
          #{item.creator,jdbcType=VARCHAR}
        </if>
        <if test="'gmt_created'.toString() == column.value">
          #{item.gmtCreated,jdbcType=TIMESTAMP}
        </if>
        <if test="'gmt_modified'.toString() == column.value">
          #{item.gmtModified,jdbcType=TIMESTAMP}
        </if>
        <if test="'current_situation'.toString() == column.value">
          #{item.currentSituation,jdbcType=VARCHAR}
        </if>
        <if test="'land_level_content'.toString() == column.value">
          #{item.landLevelContent,jdbcType=LONGVARCHAR}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>